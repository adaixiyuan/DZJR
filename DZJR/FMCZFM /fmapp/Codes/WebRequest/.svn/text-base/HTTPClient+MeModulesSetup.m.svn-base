//
//  HTTPClient+MeModulesSetup.m
//  fmapp
//
//  Created by 张利广 on 14-5-15.
//  Copyright (c) 2014年 yk. All rights reserved.
//

#import "HTTPClient+MeModulesSetup.h"

@implementation HTTPClient (MeModulesSetup)

#pragma mark - 
#pragma mark - 获取用户等级设置
- (AFHTTPRequestOperation *)getUserPersonalGradeInformationWithUserID:(NSString *)userPersonalID
                                                           completion:(WebAPIRequestCompletionBlock)completion{
    if ([userPersonalID length] <= 0) {
        return nil;
    }
    NSDictionary *parameters = @{KUserPersonalID: userPersonalID};
    return [self postPath:kUserInfoURL
               parameters:parameters
               completion:completion];
}

#pragma mark -
#pragma mark - 获取“个人信息”界面中用户内容设置
- (AFHTTPRequestOperation *)getUserPersonalInformationWithUserId:(NSString *)m_userId
                                                      completion:(WebAPIRequestCompletionBlock)completion{
    if ([m_userId length] <= 0) {
        return nil;
    }
    NSDictionary *parameters = @{KUserPersonalID: m_userId};
    return [self postPath:KMeUserInformationURL
               parameters:parameters
               completion:completion];
}
#pragma mark -
#pragma mark - 编辑“个人信息”界面中用户内容设置
- (AFHTTPRequestOperation *)getWithUserPersonalInformationWithUserId:(NSString *)m_userId
                                                        withUserName:(NSString *)m_userName
                                                 withUserGenderStyle:(NSInteger)m_genderStyle
                                                       withSignature:(NSString *)m_signature
                                              withUserPhototImageURL:(NSString *)m_imageURLKey
                                                      withAudioParam:(NSString *)m_audioParam
                                                          completion:(WebAPIRequestCompletionBlock)completion{
    if ([m_userId length] <= 0 ||[m_userName length] <= 0) {
        return nil;
    }
    NSMutableDictionary *parameters = [NSMutableDictionary dictionary];
    AddObjectForKeyIntoDictionary(m_userId, KUserPersonalID, parameters);
    AddObjectForKeyIntoDictionary(m_userName, kuserName, parameters);
    AddObjectForKeyIntoDictionary([NSNumber numberWithInteger:m_genderStyle], kuserGender, parameters);
    AddObjectForKeyIntoDictionary(m_signature, KDataKeyUserSignature, parameters);
    AddObjectForKeyIntoDictionary(m_imageURLKey, KDataKeyAvatar, parameters);
    AddObjectForKeyIntoDictionary(m_audioParam, KDataKeyAudio, parameters);
    
    
    
    return [self postPath:KUserEditPersonalInforURL
               parameters:parameters
               completion:completion];
}

#pragma mark -
#pragma mark - 用户绑定手机号操作设置
- (AFHTTPRequestOperation *)getWithUserAddPersonalPhoneNumberWithUserId:(NSString *)m_userID
                                                    withUserPhoneNumber:(NSString *)m_phoneNumber
                                                             completion:(WebAPIRequestCompletionBlock)completion{
    if ([m_userID length] <= 0 ||[m_phoneNumber length] <= 10) {
        return nil;
    }
    
    NSDictionary *parameters = @{KUserPersonalID: m_userID,
                                 KMeKeyUserPhoneNumber:m_phoneNumber,};
    return [self postPath:KMeUserAddPhoneNumberURL
               parameters:parameters
               completion:completion];
}
#pragma mark -
#pragma mark - 编辑“个人信息”界面中验证
- (AFHTTPRequestOperation *)getWithInPutUserSecurityCodeForAddPhoneNumberWithUserID:(NSString *)m_userID
                                                                withUserPhoneNumber:(NSString *)m_phoneNumber
                                                                   withSecurityCode:(NSString *)m_securityCode
                                                                         completion:(WebAPIRequestCompletionBlock)completion{
    if ([m_userID length] <= 0 ||
        [m_phoneNumber length] <= 10||
        [m_securityCode length] < 3) {
        return nil;
    }
    
    NSDictionary *parameters = @{KUserPersonalID: m_userID,
                                 KMeKeyUserPhoneNumber:m_phoneNumber,
                                 KMeKeyUserSecurityCode:m_securityCode};
    return [self postPath:KMeUserSecurityCodeURL
               parameters:parameters
               completion:completion];
}


#pragma mark -
#pragma mark - 用户上传个人资料中的自定义车型图片
- (AFHTTPRequestOperation *)getWithUserUploatPersonalCarImagesWithUserId:(NSString *)m_userId withImageParame:(NSString *)m_imageParam completion:(WebAPIRequestCompletionBlock)completion{
    NSDictionary *parameters = @{KUserPersonalID: m_userId,
                                 @"pic":m_imageParam};
    
    return [self postPath:kMeUserUploadCarImagesURL
               parameters:parameters
               completion:completion];
}

#pragma mark -
#pragma mark -
- (AFHTTPRequestOperation *)getWithUserPersonalCarImagesListParamWithUserID:(NSString *)m_userId completion:(WebAPIRequestCompletionBlock)completion{
    NSDictionary *parameters = @{KUserPersonalID: m_userId,};
    
    return [self postPath:kMeGetUserCarImagesListURL
               parameters:parameters
               completion:completion];
}

- (AFHTTPRequestOperation *)getWithUserCarAutoSeriesInforWithLogoCodeId:(NSString *)m_logoCode
                                                             completion:(WebAPIRequestCompletionBlock)completion{
        NSDictionary *parameters = @{@"factory": m_logoCode,};
    return [self postPath:KMeCarAutoSeriesURL
               parameters:parameters
               completion:completion];

}

- (AFHTTPRequestOperation *)getWithUserEditAutoSeriesInforWithLogoCodeId:(NSString *)m_SeriesCode
                                                              withUserID:(NSString *)m_userID completion:(WebAPIRequestCompletionBlock)completion{
    NSDictionary *parameters = @{@"series": m_SeriesCode,
                                 KUserPersonalID:m_userID};
    return [self postPath:kMeCarModifyAutoTypeURL
               parameters:parameters
               completion:completion];
}

#pragma mark -
#pragma mark - 获取用户车辆违章信息
- (AFHTTPRequestOperation *)getUserPersonalTrafficViolationsInforWithCarNo:(NSString *)carNumber
                                                              withCarColor:(NSString *)carColor
                                                           withCarCityCode:(NSString *)cityCode
                                                                completion:(WebAPIRequestCompletionBlock)completion{
    
    if ([carNumber length] <=6 ||
        [carColor length] <= 0 ||
        [cityCode length] <=5 ) {
        return nil;
    }
    NSDictionary *parameters = @{KUserCarColor : carColor,
                                 KUserCarNo:carNumber,
                                 kuserCityCode :cityCode};
    return [self postPath:kQueryTrafficViolationsURL
               parameters:parameters
               completion:completion];
}

#pragma mark -
#pragma mark - 用户添加车牌，用于查询违章
- (AFHTTPRequestOperation *)getUserAddPersonalCarInformationWithUserId:(NSString *)m_userID
                                                         withCarNumber:(NSString *)m_carNumber
                                                      withCarcarEngine:(NSString *)m_Engine
                                                              withSSID:(NSString *)m_SsId
                                                            completion:(WebAPIRequestCompletionBlock)completion{
    if ([m_carNumber length] <= 6||
        [m_Engine length] <= 3 ||
        [m_userID length] <= 0) {
        return nil;
    }
    
    NSDictionary *parameters = @{KUserPersonalID : m_userID,
                                 KUserCarNo:m_carNumber,
                                 KDataKeyCarEengine :m_Engine,
                                 KDataKeyDefaultCarCode:m_SsId};
    return [self postPath:KMeTrafficViolationsAddURL
               parameters:parameters
               completion:completion];
}

#pragma mark - 用户添加车牌，上传用户个人行驶证图片信息内容
- (AFHTTPRequestOperation *)userAddUserPersonalCarEnginePhotosImageInforWithUserId:(NSString *)m_userId
                                                                withPhotoImagePara:(NSString *)m_imagePara
                                                                        completion:(WebAPIRequestCompletionBlock)completion{
    NSDictionary *parameters = @{KUserPersonalID : m_userId,
                                 @"pic":m_imagePara};
    return [self postPath:KMeUserAddEnginePhotoURL
               parameters:parameters
               completion:completion];
}

#pragma mark -
#pragma mark - 用户切换车牌操作
- (AFHTTPRequestOperation *)getUserSwitchPersonalCarInformationWithUserId:(NSString *)m_userID
                                                          withDefaultCode:(NSString *)m_defaultCarCode
                                                               completion:(WebAPIRequestCompletionBlock)completion{
    NSDictionary *parameters = @{KUserPersonalID : m_userID,
                                KMeKeyDefaultCarCode:m_defaultCarCode};
    return [self postPath:KMeTrafficViolationsSwitchURL
               parameters:parameters
               completion:completion];
}

#pragma mark - 用户解除绑定用户个人车牌号操作
- (AFHTTPRequestOperation *)getUserPersonalDeleteCarInformationWithUserId:(NSString *)m_userID
                                                          withDefaultCode:(NSString *)m_defaultCarCode
                                                               completion:(WebAPIRequestCompletionBlock)completion{
    NSDictionary *parameters = @{KUserPersonalID : m_userID,
                                 KDataKeyDefaultCarCode:m_defaultCarCode};
    return [self postPath:KMeTrafficViolationsDeleteURL
               parameters:parameters
               completion:completion];
}

#pragma mark - 
#pragma mark - 用户修改车牌，用于查询违章
- (AFHTTPRequestOperation *)getUserEditPersonalCarNumberInforamtionUserId:(NSString *)m_userID
                                                            withCarNumber:(NSString *)m_carNumber
                                                            withCarEngine:(NSString *)m_Engine
                                                                 withSSID:(NSString *)m_SsId
                                                               completion:(WebAPIRequestCompletionBlock)completion{
    if ([m_carNumber length] <= 6||
        [m_Engine length] <= 3 ||
        [m_userID length] <= 0) {
        return nil;
    }
    
    NSDictionary *parameters = @{KUserPersonalID : m_userID,
                                 KUserCarNo:m_carNumber,
                                 KDataKeyCarEengine :m_Engine,
                                 KDataKeyDefaultCarCode:m_SsId};
    return [self postPath:KMeTrafficViolationsModifyURL
               parameters:parameters
               completion:completion];
}

#pragma mark -
#pragma mark - 获取用户优享卡数据信息
- (AFHTTPRequestOperation *)getUserPersonalClubCardInformationWithUserID:(NSString *)userPersonalID
                                                              completion:(WebAPIRequestCompletionBlock)completion{
    if ([userPersonalID length] <= 0) {
        return nil;
    }
    NSDictionary *parameters = @{KUserPersonalID: userPersonalID};
    return [self postPath:KInitExclusiveCardCodeInforURL
               parameters:parameters
               completion:completion];
}

#pragma mark -
#pragma mark - 根据个人参数，领取优享卡内容
- (AFHTTPRequestOperation *)getUserPersonalReceiveClubCardWithParamInfor:(UserClubCardInfor *)m_paramInfor
                                                          withCompletion:(WebAPIRequestCompletionBlock)completion{
    return [self postPath:KMeClubCardReceiveURL
               parameters:[m_paramInfor getDictionaryWithSetpuParamInforamtion]
               completion: completion];
}

#pragma mark - 
#pragma mark - 根据个人参数，修改优享卡参数内容
- (AFHTTPRequestOperation *)getUserPersonalEditClubCardWithParamInfor:(UserClubCardInfor *)m_paramInfor
                                                       withCompletion:(WebAPIRequestCompletionBlock)completion{
    return [self postPath:KMeReSetClubCardDataURL
               parameters:[m_paramInfor getDictionaryWithSetpuParamInforamtion]
               completion: completion];
}

#pragma mark -
#pragma mark - 获取用户个人获奖的奖品内容信息
- (AFHTTPRequestOperation *)getUserPersonalPrizeDataInforWithUserID:(NSString *)userPersonalID
                                                        withIntPage:(NSInteger)page
                                                     withnumPerPage:(NSInteger)numPerPage
                                                         completion:(WebAPIRequestCompletionBlock)completion{
    if ([userPersonalID length ] <= 0) {
        return nil;
    }
    
    
    NSDictionary *parameters = @{KUserPersonalID: userPersonalID,
                                 kDataKeyPageIndex:[NSNumber numberWithInteger:page],
                                 KDataKeyNumPerPage:[NSNumber numberWithInteger:numPerPage]};
    return [self postPath:KInitWithPrizeDataURL
               parameters:parameters
               completion:completion];
}

#pragma mark -
#pragma mark - 获取用户已读个人奖品，取消小红点标识
- (AFHTTPRequestOperation *)getUserHasReadPersonalNewPrizeInforWithUserId:(NSString *)m_userID
                                                               completion:(WebAPIRequestCompletionBlock)completion{
    
    if ([m_userID length] <= 0) {
        return nil;
    }
    NSDictionary *parameters = @{KUserPersonalID: m_userID};
    return [self postPath:KMeUserReadMyPrizeInforDataURL
               parameters:parameters
               completion:completion];
}

- (AFHTTPRequestOperation *)getUserPersonalPrizeDataInforForShakeOrShakeWithUserID:(NSString *)userPersonalID
                                                                       withIntPage:(NSInteger)page
                                                                    withnumPerPage:(NSInteger)numPerPage
                                                                        completion:(WebAPIRequestCompletionBlock)completion{
    if ([userPersonalID length ] <= 0) {
        return nil;
    }
    
    
    NSDictionary *parameters = @{KUserPersonalID: userPersonalID,
                                 kDataKeyPageIndex:[NSNumber numberWithInteger:page],
                                 KDataKeyNumPerPage:[NSNumber numberWithInteger:numPerPage]};
    return [self postPath:KMeMyPrizeForShakeURL
               parameters:parameters
               completion:completion];
}


#pragma mark -
#pragma mark - 获取电台活动数据内容
- (AFHTTPRequestOperation *)getAnnouncementDataInformationWithIntPage:(NSInteger)page
                                                       withnumPerPage:(NSInteger)numPerPage
                                                           completion:(WebAPIRequestCompletionBlock)completion{
    NSDictionary *parameters = @{kDataKeyPageIndex:[NSNumber numberWithInteger:page],
                                 KDataKeyNumPerPage:[NSNumber numberWithInteger:numPerPage]};
    
    return [self postPath:kAnnouncementDataURL
               parameters:parameters
               completion:completion];
}

#pragma mark -
#pragma mark - 获取精彩推荐数据内容

- (AFHTTPRequestOperation *)getWonderfulRecommendationWithUserID:(NSString *)m_userId
                                                         IntPage:(NSInteger)page
                                                  withnumPerPage:(NSInteger)numPerPage
                                                      completion:(WebAPIRequestCompletionBlock)completion
{
    
    NSDictionary *parameters = @{KUserPersonalID:m_userId,
                                 kDataKeyPageIndex:[NSNumber numberWithInteger:page],KDataKeyNumPerPage:[NSNumber numberWithInteger:numPerPage]};
    
    return [self postPath:KGeneralizeListsURL
               parameters:parameters
               completion:completion];
 
}

//获取消费券内容
- (AFHTTPRequestOperation *)getUserPrivacySetupMyCustomTicketListInformationWithUserID:(NSString *)userPersonalID
                                                                           withIntPage:(NSInteger)page
                                                                        withnumPerPage:(NSInteger)numPerPage
                                                                            completion:(WebAPIRequestCompletionBlock)completion
{
    if ([userPersonalID length ] <= 0) {
        return nil;
    }
    
    
    NSDictionary *parameters = @{KUserPersonalID: userPersonalID,
                                 kDataKeyPageIndex:[NSNumber numberWithInteger:page],
                                 KDataKeyNumPerPage:[NSNumber numberWithInteger:numPerPage]};
    return [self postPath:KCarWelfarecardListsURL
               parameters:parameters
               completion:completion];

}
- (AFHTTPRequestOperation *)UserOperationWithUserPrivacySetupMyCustomTicketListItemUserInforWithUserId:(NSString *)m_userId
                                                                                          withTicketId:(NSString *)m_ticketId completion:(WebAPIRequestCompletionBlock)completion;
{
    NSDictionary *parameters = @{KUserPersonalID: m_userId,
                                 @"blackId":m_ticketId};
    return [self postPath:KMePrivacyRemoveBlacklistURL
               parameters:parameters
               completion:completion];

}
//获取我的红包数据
- (AFHTTPRequestOperation *)getUserRedBagInformationWithUserID:(NSString *)userPersonalID completion:(WebAPIRequestCompletionBlock)completion
{
    NSDictionary *parameters = @{KUserPersonalID: userPersonalID};
    
    return [self postPath:KMePrivacyRemoveBlacklistURL
               parameters:parameters
               completion:completion];

}

#pragma mark -
#pragma mark - 设置是否关闭或者打开个人位置
- (AFHTTPRequestOperation *)getUserPrivacySetupForOpenOrCloseLocationUserId:(NSString *)m_userId
                                                                 withPublic:(NSInteger)is_public
                                                             withCompletion:(WebAPIRequestCompletionBlock)completion{
    NSDictionary *parameters = @{KUserPersonalID: m_userId,
                                 kDataKeyType:[NSNumber numberWithInteger:is_public]};
    return [self postPath:KMePrivacySetupLocationURL
               parameters:parameters
               completion:completion];
}

#pragma mark -
#pragma mark - 设置是否隐身
- (AFHTTPRequestOperation *)getUserPrivacySetupForStealthUserId:(NSString *)m_userId
                                                withStealthType:(NSInteger)m_type
                                                 withCompletion:(WebAPIRequestCompletionBlock)completion{
    NSDictionary *parameters = @{KUserPersonalID: m_userId,
                                 kDataKeyType:[NSNumber numberWithInteger:m_type]};
    return [self postPath:KMePrivacySetupStealthURL
               parameters:parameters
               completion:completion];
    
}

#pragma mark -
#pragma mark - 设置是否在互动中显示爱车图片
- (AFHTTPRequestOperation *)getUserPrivacySetupShowUserCarImagesWithUserID:(NSString *)m_userId
                                                              withShowType:(NSInteger)m_showType
                                                            withCompletion:(WebAPIRequestCompletionBlock)completion{
    NSDictionary *parameters = @{KUserPersonalID: m_userId,
                                 kDataKeyType:[NSNumber numberWithInteger:m_showType]};
    return [self postPath:KMePrivacySetupUserCarImagesURL
               parameters:parameters
               completion:completion];
}

#pragma mark -
#pragma mark - 设置中_获取用户黑名单列表中的数据信息
- (AFHTTPRequestOperation *)getUserPrivacySetupBlackListInformationWithUserID:(NSString *)userPersonalID
                                                                  withIntPage:(NSInteger)page
                                                               withnumPerPage:(NSInteger)numPerPage completion:(WebAPIRequestCompletionBlock)completion{
    if ([userPersonalID length ] <= 0) {
        return nil;
    }
    
    
    NSDictionary *parameters = @{KUserPersonalID: userPersonalID,
                                 kDataKeyPageIndex:[NSNumber numberWithInteger:page],
                                 KDataKeyNumPerPage:[NSNumber numberWithInteger:numPerPage]};
    return [self postPath:KMePrivacyBlackListInforURL
               parameters:parameters
               completion:completion];
}

- (AFHTTPRequestOperation *)UserOperationWithUserPrivacySetupBlackListItemUserInforWithUserId:(NSString *)m_userId
                                                                                  withBlackId:(NSString *)m_blackUserId
                                                                                   completion:(WebAPIRequestCompletionBlock)completion{
    NSDictionary *parameters = @{KUserPersonalID: m_userId,
                                 @"blackId":m_blackUserId};
    return [self postPath:KMePrivacyRemoveBlacklistURL
               parameters:parameters
               completion:completion];
}
#pragma mark -
#pragma mark -
- (AFHTTPRequestOperation *)getUserSetupPersonalPasswordWithUserId:(NSString *)m_userID
                                                      withPassword:(NSString *)m_password
                                                        withnewPwd:(NSString *)m_newPwd
                                                        completion:(WebAPIRequestCompletionBlock)completion{
    NSDictionary *parameters = @{KUserPersonalID: m_userID,
                                 kuserpassword:m_password,
                                 KDataKeyUserNewPasword:m_newPwd,};
    return [self postPath:KMeSetupPasswordURL
               parameters:parameters
               completion:completion];
}
#pragma mark -
#pragma mark -
- (AFHTTPRequestOperation *)userAddWithCarFriendsInfoDataWithParamData:(CarFriendsInfo *)m_AddItemData
                                                        withcompletion:(WebAPIRequestCompletionBlock)completion
{
    
    return [self postPath:KCarFriendSendActivityURL
               parameters:[m_AddItemData getParameForWithCarFriendsInfoItemData]
               completion:completion];

}
- (AFHTTPRequestOperation *)getPartyListWithUserPersonId:(NSString *)userPersonId
                                          WithLongitude:(NSString *)m_longitudeValue withLatitude:(NSString *)m_latitudeValue
                                             withIntPage:(NSInteger)page
                                          withnumPerPage:(NSInteger)numPerPage
                                          withcompletion:(WebAPIRequestCompletionBlock)completion
{
    
    NSDictionary *dic = @{KUserPersonalID: userPersonId,KuserLoginLatitude:m_latitudeValue,
                          KuserLoginLongitude:m_longitudeValue,
                                 kDataKeyPageIndex:[NSNumber numberWithInteger:page],
                                 KDataKeyNumPerPage:[NSNumber numberWithInteger:numPerPage]};
    return [self postPath:KPartyListURL
                parameters:dic
                completion:completion];
 
}
//报名参加聚会
- (AFHTTPRequestOperation *)SignPartyWithUserUserId:(NSString *)userPersonId
                                        withPartyId:(NSString *)partyId
                                     withcompletion:(WebAPIRequestCompletionBlock)completion
{
    if ([userPersonId length ] <= 0||[partyId length]<=0) {
        return nil;
    }
    NSDictionary *parameters = @{KUserPersonalID: userPersonId,
                                 @"partyId":partyId};
    
    return [self postPath:KSignPartyURL
               parameters:parameters
               completion:completion];

 
}
//删除聚会
- (AFHTTPRequestOperation *)DeletePartyWithUserUserId:(NSString *)userPersonId
                                          withPartyId:(NSString *)partyId
                                       withcompletion:(WebAPIRequestCompletionBlock)completion
{
    if ([userPersonId length ] <= 0||[partyId length]<=0) {
        return nil;
    }
    NSDictionary *parameters = @{KUserPersonalID: userPersonId,
                                 @"partyId":partyId};
    
    return [self postPath:KDeletePartyURL
               parameters:parameters
               completion:completion];

}
- (AFHTTPRequestOperation *)getSystemPushMessageListInformationWithUserID:(NSString *)userPersonalID
                                                              withIntPage:(NSInteger)page
                                                           withnumPerPage:(NSInteger)numPerPage completion:(WebAPIRequestCompletionBlock)completion{
    if ([userPersonalID length ] <= 0) {
        return nil;
    }
    
    
    NSDictionary *parameters = @{KUserPersonalID: userPersonalID,
                                 kDataKeyPageIndex:[NSNumber numberWithInteger:page],
                                 KDataKeyNumPerPage:[NSNumber numberWithInteger:numPerPage]};
    return [self postPath:KMessageSystemMsgURL
               parameters:parameters
               completion:completion];
    
}


@end
