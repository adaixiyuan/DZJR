//
//  FriendCircPostsViewController.m
//  fmapp
//
//  Created by 张利广 on 14/11/3.
//  Copyright (c) 2014年 yk. All rights reserved.
//

#import "FriendCircPostsViewController.h"
#import "FriendCirMemberViewController.h"
#import "CreateFriendCircleController.h"
#import "FriendCircPostsViewCell.h"
#import "AttributedStringHelper.h"
#import "CurrentUserInformation.h"
#import "RightBarItemMenusView.h"
#import "HTTPClient+Friends.h"
#import "ChatViewController.h"
#import "PublishView.h"
#import "FMSettings.h"
#import "HTTPClient.h"
#import "PublishQuestionViewController.h"
#import "FriendDetailedInforViewController.h"

#define kPublishViewHeight              45          // 发布视图高度
#define KPublishExpressHeight           216


@interface FriendCircPostsViewController ()<UITableViewDataSource,UITableViewDelegate,FriendCircPostsDelegate,RightBarItemMenusDelegate,PublishViewDelegate>
@property (nonatomic , strong)  FriendCircleModel       *fcircleModer;
@property (nonatomic , strong)  DataPage                *dataSource;
@property (nonatomic , weak)    UITableView             *tableView;
@property (nonatomic , strong)  AFHTTPRequestOperation  *requestOperation;
@property (nonatomic,weak)      HUILoadMoreCell           *loadMoreCell;
@property (nonatomic , strong)      RightBarItemMenusView   *rightBarMenusView;
@property (nonatomic,weak)      PublishView             *publishView;           //发布视图
@property (nonatomic,strong)  NSIndexPath               *IndexPath;


/** 初始化帖子内容界面**/
- (void)initWithFriendCircPostsViewControllerFrame;

/** 初始化界面数据内容**/
- (void)initWithFriendCircPostsDataInfor;
- (void)initWithRightButtonEvent;
- (void)leftBackBarButtonEvent;
@end

@implementation FriendCircPostsViewController

- (id)init{
    self = [super init];
    if (self) {
        self.enableCustomNavbarBackButton = FALSE;
        self.fcircleModer = [[FriendCircleModel alloc]init];
        self.dataSource = [DataPage page];
    }
    return self;
}

- (id)initWithFriendCircleModel:(FriendCircleModel *)fcircleModel{
    self = [super init];
    if (self) {
        self.enableCustomNavbarBackButton = FALSE;
        self.fcircleModer = fcircleModel;
        self.dataSource = [DataPage page];
    }
    return self;
}

- (void)loadView{
    self.view = [[UIView alloc] initWithFrame:HUIApplicationFrame()];
    self.view.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
    self.view.backgroundColor = KDefaultOrNightScrollViewColor;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self settingNavTitle:[NSString stringWithFormat:@"%@(%d)",self.fcircleModer.friendCirName,self.fcircleModer.friendCirCurrentUsersCount]];
    
    [self setLeftNavButtonFA:FMIconLeftArrow withFrame:kNavButtonRect actionTarget:self action:@selector(leftBackBarButtonEvent)];
    [self initWithFriendCircPostsViewControllerFrame];
    [self loadMoreListData];
    [self addKeyboardNotification];
    
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(refreshListData)
                                                 name:FMFriendCircleSendPostInforNotification
                                               object:nil];
    // Do any additional setup after loading the view.
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


- (void)viewDidUnload{
    [self.dataSource cleanAllData];
    [self.tableView setDelegate:Nil];
    [self.tableView setDataSource:Nil];
    [self.requestOperation cancel];
}


- (void)leftBackBarButtonEvent{
    NSArray *controllerArray = [self.navigationController viewControllers];
    
    if (controllerArray.count > 2) {
        [self.view endEditing:YES];
        [self.navigationController popToViewController:(UIViewController *)[controllerArray objectAtIndex:0] animated:YES];
    }else{
        [self.view endEditing:YES];
        [self.navigationController popViewControllerAnimated:YES];
    }
    
}

- (void)addKeyboardNotification{
    //添加键盘出现通知
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillAppear:) name:UIKeyboardWillShowNotification object:nil];
    //添加键盘隐藏通知
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillDisappear:) name:UIKeyboardWillHideNotification object:nil];
}
#pragma mark -键盘出现时的通知
- (void) keyboardWillAppear:(NSNotification *)notification
{
    
    CGRect keyBoardRect=[notification.userInfo[UIKeyboardFrameEndUserInfoKey] CGRectValue];
    CGFloat deltaY=keyBoardRect.size.height;
    [self.publishView resetButton];
    [self didPublishViewLayoutChanged:deltaY withHeight:self.publishView.frame.size.height];
    
}
#pragma mark -键盘隐藏时的通知
- (void) keyboardWillDisappear:(NSNotification *) notification
{
    //
    [self didPublishViewLayoutChanged:0.0 withHeight:self.publishView.frame.size.height];
    
}
- (void)initWithFriendCircPostsViewControllerFrame{
    
    CGRect rc = self.view.bounds;
    
    [self setRightNavButtonFA:FMIconList withFrame:kNavButtonRect actionTarget:self action:@selector(initWithRightButtonEvent)];
    UITableView *tbview = [[UITableView alloc]initWithFrame:CGRectMake(0.0f,
                                                                       0.0f,
                                                                       rc.size.width,
                                                                       rc.size.height - kPublishViewHeight)
                                                      style:UITableViewStylePlain];
    tbview.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
    tbview.separatorStyle = UITableViewCellSeparatorStyleNone;
    tbview.backgroundColor = [UIColor clearColor];
    tbview.dataSource = self;
    tbview.delegate = self;
    [self.view addSubview:tbview];
    self.tableView = tbview;
    __weak __typeof(&*self)weakSelf = self;
    [self.tableView addPullToRefreshWithActionHandler:^(void){
        [weakSelf refreshListData];
    }];
    ConfiguratePullToRefreshViewAppearanceForScrollView(self.tableView);
    
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(didTapOnTableView:)];
    [tbview addGestureRecognizer:tap];
    
    NSArray *menusArray= [[NSArray alloc]initWithObjects:@"邀请车友",@"圈内成员",@"切换圈子", nil];
    self.rightBarMenusView = [[RightBarItemMenusView alloc]initWithFrame:CGRectMake(0.0f, 0.0f, KProjectScreenWidth, KProjectScreenHeight) withMenusArray:menusArray withTitleIcon:NO withMenusIconArray:Nil];
    [self.rightBarMenusView setDelegate:self];
    [self.view addSubview:self.rightBarMenusView];
    [self.rightBarMenusView setHidden:YES];
    
    //发布文本框
    PublishView* commentView = [[PublishView alloc] initWithFrame:CGRectMake(0.0f,
                                                                             rc.size.height - kPublishViewHeight,
                                                                             rc.size.width,
                                                                             kPublishViewHeight)];
    commentView.autoresizingMask = UIViewAutoresizingFlexibleWidth|UIViewAutoresizingFlexibleTopMargin;
    
    commentView.delegate = self;
    commentView.replyQuestionId = @"";
    commentView.replyPostId = self.fcircleModer.friendCirId;
//  commentView.replyPostNameStr = self.fcircleModer.friendCirName;
    
    [self.view addSubview:commentView];
    self.publishView = commentView;
    
}

- (void)initWithRightButtonEvent{
    if (self.rightBarMenusView.hidden==NO) {
        
        [self.rightBarMenusView setHidden:YES];
        
    }
    else
    {
        [self.rightBarMenusView setHidden:NO];
    }
}
- (void)initWithUserOperationRightBarItemMenusItemButtonEvent:(NSInteger)barItemIndex{
    [self.rightBarMenusView setHidden:YES];
    
    //邀请车友
    if (barItemIndex == 1) {
        
        PublishQuestionViewController *publishQuestionController = [[PublishQuestionViewController alloc] initWithInviteCarFirendsWithString:self.fcircleModer.friendCirName];
        FMNavigationController *navController = [[FMNavigationController alloc] initWithRootViewController:publishQuestionController];
        [self.view endEditing:YES];
        [self presentModalViewController:navController animated:YES];
        
    }
    //圈内成员
    else if (barItemIndex == 2) {
        
        FriendCirMemberViewController *memberViewController = [[FriendCirMemberViewController alloc]initWithFriendCirMemberInfor:self.fcircleModer];
        [self.view endEditing:YES];
        [self.navigationController pushViewController:memberViewController animated:YES];
    }
    ///切换圈子
    else{
        CreateFriendCircleController *viewController = [[CreateFriendCircleController alloc]initWithCreateFriendCircleStyle:CreateFriendCircleSecondStyle withCurrFC:self.fcircleModer];
        [self.view endEditing:YES];
        [self.publishView.commentView becomeFirstResponder];
        [self.navigationController pushViewController:viewController animated:YES];
    }
}

- (void)initWithFriendCircPostsDataInfor{
    
    __weak __typeof(&*self)weakSelf = self;
    self.requestOperation =  [FMHTTPClient getFriendCircleAllPostsInforWithCircleId:self.fcircleModer.friendCirId withPageNumber:[self.dataSource nextPageIndex] withNumberPerPage:15 withcompletion:^(WebAPIResponse *response) {
        
        dispatch_async(dispatch_get_main_queue(), ^(void){
            
            //关掉PullToRefreshView
            if (weakSelf.tableView.pullToRefreshView.state == SVPullToRefreshStateLoading)
            {
                UpdateLastRefreshDataForPullToRefreshViewOnView([weakSelf tableView]);
                [weakSelf.tableView.pullToRefreshView stopAnimating];
            }
            
            Log(@"response.responseObject is %@",response.responseObject);
            if(response.code == WebAPIResponseCodeSuccess){
                
                //车友信息
                NSArray* dataList = [response.responseObject objectForKey:kDataKeyData];
                
                NSMutableArray* userList = [NSMutableArray array];
                for (NSDictionary* dic in dataList) {
                    FriendCirclePostsModel *itemObject = (FriendCirclePostsModel *)[FriendCirclePostsModel initWithFriendCirclePostsModelWithUnserializedJSONDic:dic];
                    [userList addObject:itemObject];
                }
                [weakSelf.dataSource appendPage:userList];
                //页数
                weakSelf.dataSource.pageCount = IntForKeyInUnserializedJSONDic(response.responseObject,kDataKeyPageCount);
                [weakSelf.tableView reloadData];
                
                
                NSInteger memberCount = IntForKeyInUnserializedJSONDic(response.responseObject, @"count");
                
                if (memberCount >0) {
                    [FMShareSetting setAppUserFriendCircleCountMemberInteger:memberCount];
                    [self.fcircleModer setFriendCirCurrentUsersCount:memberCount];
                    [self settingNavTitle:[NSString stringWithFormat:@"%@(%d)",self.fcircleModer.friendCirName,memberCount]];
                }
            }
        });
    }];
}

#pragma mark --刷新数据
- (void) refreshListData
{
    //停掉当前未完成的请求操作
    [self.requestOperation cancel];
    //清空当前数据源中所有数据
    [self.dataSource cleanAllData];
    [self.tableView reloadData];
    [self loadMoreListData];
}

- (void)loadMoreListData{
    [self initWithFriendCircPostsDataInfor];
}

- (BOOL)_isLoadMoreCellAtIndexPath:(NSIndexPath *)indexPath
{
    return (indexPath.row == [self.dataSource count]);
}

#pragma mark - UITableViewDataSource
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    CGFloat heightForRow  = 150.0f;
    if([self _isLoadMoreCellAtIndexPath:indexPath])
        return kSizeLoadMoreCellHeight;
    if (indexPath.row < [self.dataSource.data count]) {
        
        FriendCirclePostsModel *postsModel = (FriendCirclePostsModel *)[self.dataSource.data objectAtIndex:(indexPath.row)];
        
        CGFloat contenHeight = [postsModel getContentHeight: (KProjectScreenWidth - 40)];
        
        CGFloat imageHeight = 0.0f;
        if (postsModel.postImagesArray.count >= 1) {
            NSDictionary *imageDic = [NSDictionary dictionaryWithDictionary:(NSDictionary *)[postsModel.postImagesArray objectAtIndex:0]];
            imageHeight = FloatForKeyInUnserializedJSONDic(imageDic, @"pic_height")/2;
        }
        
        imageHeight = imageHeight > 0? (imageHeight+15.0f):0.0f;
        
        heightForRow = heightForRow+contenHeight + imageHeight;
        
        return heightForRow;
    }
    return heightForRow;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [self.dataSource count] + 1; //添加一行显示“正在加载”或“加载完毕”;
}

- (UITableViewCell *)createCellWithIdentifier:(NSString *)cellIdentifier
{
    if ([cellIdentifier isEqualToString:kHUILoadMoreCellIdentifier])
    {
        return CreateLoadMoreCell();
    }
    
    FriendCircPostsViewCell * cell = [[FriendCircPostsViewCell alloc] init];
    UIView *selectedView = [[UIView alloc] init];
    [selectedView setBackgroundColor:KDefaultOrNightCellSelected];
    cell.selectedBackgroundView = selectedView;
    
    [cell setBackgroundColor:[UIColor clearColor]];
    
    return cell;
}

- (void)_configureCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row >= [self.dataSource.data count]) {
        return;
    }
    FriendCirclePostsModel *postsModel = (FriendCirclePostsModel *)[self.dataSource.data objectAtIndex:(indexPath.row)];
    FriendCircPostsViewCell* memberCell = (FriendCircPostsViewCell* )cell;
    [memberCell setDelegate:self];
    [memberCell setSelectedIndexPath:indexPath];
    [memberCell initWithFriendCircPostsDataWith:postsModel];
    
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    NSString *cellIdentifier = @"FriendCircPostsViewCell";
    BOOL isLoadMoreCell = [self _isLoadMoreCellAtIndexPath:indexPath];
    cellIdentifier = isLoadMoreCell? kHUILoadMoreCellIdentifier: cellIdentifier;
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellIdentifier];
    if (!cell) {
        cell = [self createCellWithIdentifier:cellIdentifier];
        
    }
    
    if (!isLoadMoreCell)
    {
        [self _configureCell:cell forRowAtIndexPath:indexPath];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    
    else
    {
        self.loadMoreCell = (HUILoadMoreCell*)cell;
        if ([self.dataSource canLoadMore])
        {
            
            __weak __typeof(&*self)weakSelf = self;
            [(HUILoadMoreCell*)cell setLoadMoreOperationDidStartedBlock:^{
                [weakSelf loadMoreListData];
            }];
            [(HUILoadMoreCell*)cell startLoadMore];
        }
        else
        {
            
            if (self.tableView.pullToRefreshView.state == SVPullToRefreshStateLoading) {
                cell.textLabel.text = LOADMORE_LOADING;
            }else{
                cell.textLabel.text = LOADMORE_LOADOVER;
            }
        }
    }
    
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    if ([self _isLoadMoreCellAtIndexPath:indexPath]){
        return;
    }
    [tableView deselectRowAtIndexPath:indexPath animated:NO];
    
    
    Log(@"indexPath.row is %d",indexPath.row);
    
    FriendCirclePostsModel *postModel = (FriendCirclePostsModel *)[self.dataSource.data objectAtIndex:(indexPath.row)];
    
    if ([postModel.postUserInfor.userID isEqualToString:[CurrentUserInformation sharedCurrentUserInfo].userID]) {
//        ShowImportErrorAlertView(@"你不能对自己回复");
//        return;
        
        self.publishView.replyPostNameStr = nil;
        self.publishView.commentView.placeholder=nil;
        [self.publishView.commentView becomeFirstResponder];

    }
    else
    {
//    ///保存聊天对象的ID
//    [FMShareSetting setAppUserPersonalChatUserIdString:postModel.postUserInfor.userID];
//    
//    UserInfo* friendUser = [[UserInfo alloc] init];
//    friendUser.userName = postModel.postUserInfor.userName;
//    friendUser.userID = postModel.postUserInfor.userID;
//    friendUser.userAvatar = postModel.postUserInfor.userCarImage;
    
    self.publishView.replyPostNameStr = postModel.postUserInfor.userName;
    self.publishView.commentView.placeholder=[NSString stringWithFormat:@"@%@",self.publishView.replyPostNameStr];
    [self.publishView.commentView becomeFirstResponder];
    }
}
-(void) didTapOnTableView:(UIGestureRecognizer*) recognizer {
    
    if ([self.publishView.commentView isFirstResponder]) {
        self.publishView.replyPostNameStr=nil;
        self.publishView.commentView.placeholder=nil;
        recognizer.cancelsTouchesInView = YES;
        [self.view endEditing:YES];
    }else{
        recognizer.cancelsTouchesInView = NO;
    }
}
- (void)initWithUserOperationFriendCircPostsButtonEvent:(FriendCirclePostsModel *)postsModel withButtonTag:(NSInteger)btnTag withIndexPath:(NSIndexPath *)IndexPath{
    
    self.IndexPath=IndexPath;
    ///删除按键
    if (btnTag == KCellButtonDeleteTag) {
        WaittingMBProgressHUD(HUIKeyWindow, @"正在删除...");
        [FMHTTPClient getFriendCircleDeletePostsWithCircleId:postsModel.postCreateID withUserID:[CurrentUserInformation sharedCurrentUserInfo].userID withcompletion:^(WebAPIResponse *response) {
            dispatch_async(dispatch_get_main_queue(), ^(void){
                if(response.code == WebAPIResponseCodeSuccess){
                    FinishMBProgressHUD(HUIKeyWindow);
                    [self refreshListData];
                    Log(@"response.responseObject is  %@",response.responseObject);
                    
                }else{
                    FailedMBProgressHUD(HUIKeyWindow, @"删除失败");
                }
            });
        }];
    }
    ///会话按键
    else if (btnTag == KCellButtonTalkTag){
        
        FriendCirclePostsModel *postModel = (FriendCirclePostsModel *)[self.dataSource.data objectAtIndex:(IndexPath.row)];

        FriendDetailedInforViewController *viewController=[[FriendDetailedInforViewController alloc]initWithUserId:postModel.postUserInfor.userID];
        [self.view endEditing:YES];
        [self.navigationController pushViewController:viewController animated:YES];
        
//
//        if ([postModel.postUserInfor.userID isEqualToString:[CurrentUserInformation sharedCurrentUserInfo].userID]) {
//            return;
//        }
//        
//        ///保存聊天对象的ID
//        [FMShareSetting setAppUserPersonalChatUserIdString:postModel.postUserInfor.userID];
//        
//        UserInfo* friendUser = [[UserInfo alloc] init];
//        friendUser.userName = postModel.postUserInfor.userName;
//        friendUser.userID = postModel.postUserInfor.userID;
//        friendUser.userAvatar = postModel.postUserInfor.userCarImage;
//        
//        ChatViewController *viewController = [[ChatViewController alloc]initWithPeerInfo:friendUser];
//        viewController.whetherPushInfo=YES;
//        viewController.whetherBackRootView=NO;
//        [self.view endEditing:YES];
//        [viewController setHidesBottomBarWhenPushed:YES];
//        [self.navigationController pushViewController:viewController animated:YES];
        
    }
    ///点赞按键
    else if (btnTag == KCellButtonClickAgreeTag){
        
        WaittingMBProgressHUD(HUIKeyWindow, @"正在发送...");
        [FMHTTPClient getFriendCircleClickAgreeWithCircleId:postsModel.postCreateID withUserID:[CurrentUserInformation sharedCurrentUserInfo].userID withcompletion:^(WebAPIResponse *response) {
            dispatch_async(dispatch_get_main_queue(), ^(void){
                
                Log(@"response.responseObject is  %@",response.responseObject);
                if(response.code == WebAPIResponseCodeSuccess){
                    FinishMBProgressHUD(HUIKeyWindow);
                    
                    [postsModel setPostsUserPraiseCount:(postsModel.postsUserPraiseCount+1)];
                    FriendCircPostsViewCell *selectCell = (FriendCircPostsViewCell *)[self.tableView cellForRowAtIndexPath:IndexPath];
                    [selectCell initWithFriendCircPostsDataWith:postsModel];
                    
                }else{
                    FailedMBProgressHUD(HUIKeyWindow, @"发送失败");
                }
            });
        }];
    }
}

-(void)sendGoodNews
{
    FriendCirclePostsModel *postModel = (FriendCirclePostsModel *)[self.dataSource.data objectAtIndex:(self.IndexPath.row)];
    
    if ([postModel.postUserInfor.userID isEqualToString:[CurrentUserInformation sharedCurrentUserInfo].userID]) {
        return;
    }
    
    ///保存聊天对象的ID
    [FMShareSetting setAppUserPersonalChatUserIdString:postModel.postUserInfor.userID];
    
    UserInfo* friendUser = [[UserInfo alloc] init];
    friendUser.userName = postModel.postUserInfor.userName;
    friendUser.userID = postModel.postUserInfor.userID;
    friendUser.userAvatar = postModel.postUserInfor.userCarImage;
    
    ChatViewController *viewController = [[ChatViewController alloc]initWithPeerInfo:friendUser];
    viewController.userFriendInfo=friendUser;
    
    
}
#pragma mark -PublishViewDelegate
- (void)didPublishViewLayoutChanged:(CGFloat)bottom withHeight:(CGFloat)height
{
    [UIView beginAnimations:@"LayoutView" context:nil];
    [UIView setAnimationDuration:0.3f];
    
    CGRect rc = self.view.bounds;
    
    self.publishView.frame = CGRectMake(0,
                                        rc.size.height - height - bottom,
                                        rc.size.width,
                                        height);
    [UIView commitAnimations];
}

@end
