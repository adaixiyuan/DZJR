//
//  SearchUserViewController.m
//  fmapp
//
//  Created by SDYK on 14-10-22.
//  Copyright (c) 2014年 yk. All rights reserved.
//

#import "SearchUserViewController.h"
#import "AuthenticationUserCell.h"
#import "HTTPClient+Friends.h"
#import "MessageCellData.h"
#import "ChatViewController.h"
#import "HTTPClient+Interaction.h"
#import "CurrentUserInformation.h"
#import "MessageViewController.h"
#import "FontAwesome.h"

#define kScrollViewTag 10000                        //ScrollView视图定位

@interface SearchUserViewController () <UITableViewDataSource, UITableViewDelegate, UISearchDisplayDelegate, UISearchBarDelegate>

@property (nonatomic, weak)   UISearchBar               *searchBar;
@property (nonatomic, retain) UISearchDisplayController *searchDisplayController;
@property (nonatomic, strong) NSMutableArray            *dataSource;
@property (nonatomic, weak)   AFHTTPRequestOperation    *requestDataOperation;
@property (nonatomic, weak)   UITableView               *authUserList;
@property (nonatomic, strong) NSMutableArray            *searchResult;
@property (nonatomic, assign) BOOL                      userSelectedSearch;

@end

@implementation SearchUserViewController

@synthesize searchDisplayController;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}
- (id)init
{
    self = [super init];
    if (self) {
        self.dataSource = [[NSMutableArray alloc] initWithCapacity:100];
        [self getAuthUserInfo];
    }
    return self;
}
- (void)loadView
{
    self.view = [[UIView alloc] initWithFrame:HUIApplicationFrame()];
    self.view.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
    self.view.backgroundColor = KDefaultOrNightScrollViewColor;
    
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    [self settingNavTitle:@"搜索"];
    [self settingContentView];
    
    self.userSelectedSearch = NO;
    
    
    //    Log(@"dataSource count is %d", self.dataSource.count);
    
}

- (void)viewDidUnload
{
    [self.requestDataOperation cancel];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    
}

- (void)settingContentView
{
    // 搜索框
    UIView *searchViewBg = [[UIView alloc] initWithFrame:CGRectMake(0,
                                                                    0,
                                                                    KProjectScreenWidth,
                                                                    40)];
    searchViewBg.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:searchViewBg];
    
    UISearchBar *m_searchBar = [[UISearchBar alloc] initWithFrame:CGRectMake(0, 0, KProjectScreenWidth, 40)];
    
    m_searchBar.delegate = self;
    m_searchBar.alpha = 1;
    m_searchBar.placeholder = @"按用户名搜索";
    for (UIView *subview in m_searchBar.subviews) {
        if ([subview isKindOfClass:NSClassFromString(@"UISearchBarBackground")]) {
            [subview removeFromSuperview];
            break;
        }
    }
    m_searchBar.backgroundImage=createImageWithColor([UIColor colorWithRed:0.94 green:0.94 blue:0.94 alpha:1]);
    [self.view addSubview:m_searchBar];
    self.searchBar = m_searchBar;
    // UISearchDisplayController
    self.searchDisplayController = [[UISearchDisplayController alloc] initWithSearchBar:self.searchBar contentsController:self];
    self.searchDisplayController.active = NO;
    self.searchDisplayController.delegate = self;
    self.searchDisplayController.searchResultsDataSource = self;
    self.searchDisplayController.searchResultsDelegate = self;
    
    // 已认证用户标题
    UILabel *authenticationLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, searchViewBg.frame.origin.y+searchViewBg.frame.size.height+20, KProjectScreenWidth, 40)];
    authenticationLabel.backgroundColor = [UIColor clearColor];
    authenticationLabel.text = @"  已认证用户";
    authenticationLabel.textColor = KSubTitleContentTextColor;
    authenticationLabel.textAlignment = NSTextAlignmentLeft;
    authenticationLabel.font = [UIFont systemFontOfSize:14];
    [self.view addSubview:authenticationLabel];
    
    // 用户列表
    UITableView *tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, authenticationLabel.frame.origin.y+authenticationLabel.frame.size.height, KProjectScreenWidth, self.view.frame.size.height-authenticationLabel.frame.size.height-searchViewBg.frame.size.height-44-20) style:UITableViewStylePlain];
    tableView.separatorStyle = NO;
    tableView.backgroundColor = KDefaultOrNightScrollViewColor;
    tableView.delegate = self;
    tableView.dataSource = self;
    [self.view addSubview:tableView];
    self.authUserList = tableView;
    
}
// 获取认证用户信息
- (void)getAuthUserInfo
{
    __weak __typeof(&*self)weakSelf = self;
    self.requestDataOperation = [FMHTTPClient getAuthUserDetailInfo:^(WebAPIResponse *response) {
        dispatch_async(dispatch_get_main_queue(), ^(void) {
            if (response.code == WebAPIResponseCodeSuccess) {
                NSArray *dataArray = [response.responseObject objectForKey:kDataKeyData];
                for (int i=0; i<dataArray.count; i++) {
                    NSDictionary *dataDic = dataArray[i];
                    NSMutableDictionary *cellDataDic = [[NSMutableDictionary alloc] init];
                    AddObjectForKeyIntoDictionary([dataDic objectForKeyedSubscript:@"Brand_logo_name"], @"iconKey", cellDataDic);
                    AddObjectForKeyIntoDictionary([dataDic objectForKeyedSubscript:@"sex"], @"userSex", cellDataDic);
                    AddObjectForKeyIntoDictionary([dataDic objectForKeyedSubscript:@"signature"], @"signature", cellDataDic);
                    AddObjectForKeyIntoDictionary([dataDic objectForKeyedSubscript:@"userId"], @"userId", cellDataDic);
                    AddObjectForKeyIntoDictionary([dataDic objectForKeyedSubscript:@"userName"], @"userName", cellDataDic);
                    MessageCellData *cellData = [MessageCellData initUserMsgWithUnserializedJSONDic:dataDic];
                    [weakSelf.dataSource addObject:cellData];
                    
                    
                }
                [weakSelf.authUserList reloadData];
            }
        });
    }];
}
#pragma mark UITableViewDataSource
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (float)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (tableView == self.searchDisplayController.searchResultsTableView)
        return 44.0f;
    else
        return 62.5f;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (tableView == self.searchDisplayController.searchResultsTableView)
        return self.searchResult.count;
    else
        return self.dataSource.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *identifier = @"cell";
    
    if (tableView == self.searchDisplayController.searchResultsTableView) {
        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
        if (cell == nil) {
            cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifier];
        }
//        UIView *selectView=[[UIView alloc]initWithFrame:cell.bounds];
//        selectView.backgroundColor=KDefaultOrNightCellSelected;
//        cell.selectedBackgroundView=selectView;
//        
//        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        NSDictionary *userInfoDic = self.searchResult[indexPath.row];
        NSString *userName = StringForKeyInUnserializedJSONDic(userInfoDic, @"userName");
        cell.textLabel.text = userName;
        
        return cell;
    } else {
        
        AuthenticationUserCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
        if (cell == nil) {
            cell = [[AuthenticationUserCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifier];
        }
        //cell.cellData = self.dataSource[indexPath.row];
        MessageCellData *data=[self.dataSource objectAtIndex:indexPath.row];
        [cell displaySearchUserWithData:data];
        return cell;
    }
    
}

#pragma mark UITableViewDelegate
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    ChatViewController *chatViewController;
    if (tableView == self.searchDisplayController.searchResultsTableView) {
        
        if (self.searchResult.count <= 0) {
            return;
        }
        
        NSDictionary *userInforDict = (NSDictionary *)[self.searchResult objectAtIndex:(indexPath.row)];
        NSString *userId=StringForKeyInUnserializedJSONDic(userInforDict, @"userId");
        
        if ([userId isEqualToString:[CurrentUserInformation sharedCurrentUserInfo].userID]) {
            return;
        }
        [self.authUserList deselectRowAtIndexPath:indexPath animated:YES];
        [self getFriendDetailInfoFromServer:userId];
        
        
    } else {
        
        if(self.dataSource.count <= 0){
            return;
        }
        MessageCellData *cellData = self.dataSource[indexPath.row];
        UserInfo* friendUser = [[UserInfo alloc] init];
        friendUser.userName = cellData.userName;
        friendUser.userID = cellData.userId;
        friendUser.userSex = cellData.userSex;
        friendUser.userAvatar = cellData.userIconKey;
        friendUser.userPersonalSignature = cellData.signature;
        chatViewController = [[ChatViewController alloc] initWithPeerInfo:friendUser];
        
        chatViewController.hidesBottomBarWhenPushed = YES;
        [self.authUserList deselectRowAtIndexPath:indexPath animated:YES];
        [self.navigationController pushViewController:chatViewController animated:YES];

    }
    
}
//从服务器获取好友详细信息
- (void)getFriendDetailInfoFromServer:(NSString *)userId{
    // 请求车友详细信息
    [FMHTTPClient getMsgListFriendsDetailInfo:userId
                                   completion:^(WebAPIResponse *response) {
                                       dispatch_async(dispatch_get_main_queue(), ^(void) {
                                           
                                           if (response.code == WebAPIResponseCodeSuccess) {
                                               
                                               NSDictionary *dataDic = [response.responseObject objectForKey:kDataKeyData];
                                               if (dataDic.count > 0 ) {
                                                   NSString* strAvatar = StringForKeyInUnserializedJSONDic(dataDic, @"Brand_logo_name");
                                                   NSString* strUserName = StringForKeyInUnserializedJSONDic(dataDic,@"userName");
                                                   NSInteger sex = IntForKeyInUnserializedJSONDic(dataDic, @"userSex");
                                                   
                                                   UserInfo* friendUser = [[UserInfo alloc] init];
                                                   friendUser.userName =strUserName;
                                                   friendUser.userID = userId;
                                                   friendUser.userSex =sex;
                                                   friendUser.userAvatar = strAvatar;
                                                   
                                                   

                                                  ChatViewController *chatViewController = [[ChatViewController alloc] initWithPeerInfo:friendUser];
                                                   self.userSelectedSearch = YES;
                                                   chatViewController.hidesBottomBarWhenPushed = YES;
                                                   
                                                   [self.navigationController pushViewController:chatViewController animated:YES];

                                               
                                               
                                               }
                                           }
                                       });
                                   } ];
}

#pragma mark UISearchBarDelegate
- (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText
{
    //若为空，则返回
    if (IsStringEmptyOrNull(self.searchBar.text)) {
        [self clearNameListTableViewData];
        return;
    }
    NSString *contentString = [self.searchBar.text substringFromIndex:0];
    ///若用户输入的字符大于5个字符则返回
    if ([contentString length] > 5) {
        [self clearNameListTableViewData];
        return;
    }
    self.userSelectedSearch = NO;
    [self initWithGetUserNameForEditNameKeyWord:contentString];
    
}
- (void)clearNameListTableViewData{
    if (self.searchResult == nil) {
        self.searchResult = [NSMutableArray array];
    }
    [self.searchResult removeAllObjects];
    [self.searchDisplayController.searchResultsTableView reloadData];
    [self.searchDisplayController.searchResultsTableView setHidden:YES];
}

- (void)searchBarCancelButtonClicked:(UISearchBar *)searchBar{
  
    if (self.userSelectedSearch == YES) {
        [self.navigationController popViewControllerAnimated:YES];
    }
}
#pragma mark - 根据用户编辑的内容，获取用户名字内容
- (void)initWithGetUserNameForEditNameKeyWord:(NSString *)keyName{
    [self.requestDataOperation cancel];
    if (self.searchResult == nil) {
        self.searchResult = [NSMutableArray array];
    }
    else {
        [self.searchResult removeAllObjects];
    }
    __weak __typeof(&*self)weakSelf = self;
    self.requestDataOperation = [FMHTTPClient getQusetionUserNameForKeyWord:keyName
                                                             withCompletion:^(WebAPIResponse *response)
                                 {
                                     dispatch_async(dispatch_get_main_queue(), ^(void){
                                         if(response.code == WebAPIResponseCodeSuccess){
                                             Log(@"%@",response.responseObject);
                                             NSArray* dataList = [response.responseObject objectForKey:kDataKeyData];
                                             
                                             ///若数据存在，则解析内容，并显示
                                             if (dataList.count >0) {
                                                 for (NSDictionary *userDic in dataList) {
                                                     [weakSelf.searchResult addObject:userDic];
                                                 }
                                                 [weakSelf.searchDisplayController.searchResultsTableView reloadData];
                                             }
                                             ///若不存在内容，则隐藏视图。
                                             else{
                                                 
                                             }
                                         }
                                     });
                                 }];
    
}

@end
