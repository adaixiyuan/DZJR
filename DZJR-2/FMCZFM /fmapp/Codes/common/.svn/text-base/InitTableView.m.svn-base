//
//  InitTableView.m
//  fmapp
//
//  Created by 张利广 on 14-6-16.
//  Copyright (c) 2014年 yk. All rights reserved.
//

#define KUserCallPhoneButtonTag 1980111     //用户拨打电话按键
#define KUserNavigationButtonTag 1980112    //用户导航按键

#define KUserSearchTextFileViewTag 235084

#define KUserSearchCancelButtonTag 235088

#define KUserSearchWhiteColorBGViewTag 235089

#import "InitTableView.h"
#import "HTTPClient.h"
#import "CurrentUserInformation.h"
#import "CityFreeRideMainListView.h"
#import "HTTPClient+ExploreModules.h"
#import "HTTPClient+MeModulesSetup.h"
#import "QuestionDetailViewController.h"
#import "SearchAndReceiveViewController.h"
#import "StationActivityDescriptionWebView.h"
#import "SearchOrCityOrInformationTableViewCell.h"
#import "MyPrizeOrAnnouncementDataInfor.h"
#import "ShareWebViewController.h"
#import "StationActivityCell.h"
#import "NearbyMerchantList.h"
#import "NearbyBusinessViewController.h"
#import "NearbyMerchantCell.h"
#import "AnnouncementCell.h"
#import "MerchantInfo.h"

@interface InitTableView ()<UISearchBarDelegate>

///数据类型,
///@See 顺风车中 1，表示车主；2表示乘客
///@See 找到了中 1. 寻找 ；2.认领 ；3.鸣谢
@property (nonatomic , assign)      NSInteger   dataStyleType;

@property (nonatomic , weak)        UITableView *tableView;
///模块类别
///@See 模块类型 1.找到了；2.都市顺风车；3.信息网；4.特约商家
@property (nonatomic , assign)      NSInteger   dataModuleStyleType;

@property (nonatomic , strong)      DataPage    *dataSource;

@property (nonatomic , strong)      MerchantInfo    *selfMechantItemInfor;
@property (nonatomic , strong)      AFHTTPRequestOperation *requestInformation;
@property (nonatomic , strong)      SearchAndReceiveDataInfor *userSelectedItemInfor;
@property (nonatomic,  copy)        NSString            *businessID;

/*!
 *@brief 判断用户是否进行搜索测试
 *@See 若搜索则设为YES，若不搜索则设置为NO，默认为NO。
 */
@property (nonatomic , assign)      BOOL            userIsSearchCityFreeInfoBool;

/*!
 *@brief 用户进行搜索的字符串
 *@See 若用户进行了搜索，则有内容。若没有搜索，则无内容
 */
@property (nonatomic , strong)      NSString    *userSearchInformationString;

@property (nonatomic, weak)   UISearchBar               *searchBar;


/** 初始化界面布局内容
 
 *@return void
 */
- (void)initWithTableViewFrame;

/** 初始化数据源内容
 
 *@return void
 */
- (void)initWithTableViewDataSource;


/** 根据用户熟人的关键字初始化数据源内容
 
 *@return void
 */
- (void)initWithTableviewDataSourceForUserSearchKeyString;


/** 初始化用户按键操作事件
 
 *@return void
 */
- (void)initWithUserOperationButtonEvent:(id)sender;

@end

@implementation InitTableView

- (id)initWithFrame:(CGRect)frame withDataStyle:(NSInteger)m_dataStyle withModuleStyle:(NSInteger)m_moduleStyle
{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code
        
        self.dataModuleStyleType = m_moduleStyle;
        self.dataStyleType = m_dataStyle;
        self.dataSource = [DataPage page];
        [self initWithTableViewFrame];
    }
    return self;
}
- (id)initWithFrame:(CGRect)frame withBusinessID:(NSString *)businessID withModuleStyle:(NSInteger)m_moduleStyle
{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code

    self.dataModuleStyleType = m_moduleStyle;
    self.businessID=businessID;
    self.dataSource = [DataPage page];
        
    [self initWithTableViewFrame];
    }
    return self;

}
- (id)initWithFrame:(CGRect)frame withMerchantInfor:(MerchantInfo *)m_Infor{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code
        
        self.dataModuleStyleType = 5;
        self.dataStyleType = 1;
        self.selfMechantItemInfor = m_Infor;
        
        [self initWithTableViewDataSource];
    }
    return self;
}

- (void)initWithUserUpdateTheDataContentWithClickOperation{
    [self.tableView triggerPullToRefresh];
}

- (void)initWithTableViewFrame{
    
    //添加TableView
    CGSize tableSize = self.frame.size;
    UITableView *mainTableView = [[UITableView alloc] initWithFrame:CGRectMake(0.0f, 0.0f, tableSize.width, tableSize.height)];
    mainTableView.delegate = self;
    mainTableView.dataSource = self;
    
    if (self.dataModuleStyleType == 2) {
        
        self.userIsSearchCityFreeInfoBool = NO;
//        mainTableView.tableHeaderView = [self creatTableHeaderView];
        mainTableView.tableHeaderView = [self createSearchBarView];

    }
    mainTableView.tag = 1000;
    mainTableView.showsVerticalScrollIndicator = NO;
    mainTableView.backgroundColor = [UIColor clearColor];
    mainTableView.separatorStyle = UITableViewCellSelectionStyleNone;
    self.tableView = mainTableView;
    [self addSubview:self.tableView];
    
    if (self.dataModuleStyleType != 5) {
        
        __weak __typeof(&*self)weakSelf = self;
        [self.tableView addPullToRefreshWithActionHandler:^(void){
            [weakSelf refreshListData];
        }];
        ConfiguratePullToRefreshViewAppearanceForScrollView(self.tableView);
        [self.tableView triggerPullToRefresh];
    }
    
}
- (void)refreshListData
{
    //停掉当前未完成的请求操作
    [self.requestInformation cancel];
    //清空当前数据源中所有数据
    [self.dataSource cleanAllData];
    [self.tableView reloadData];
    if (self.dataModuleStyleType == 2) {
        UIView *backGroundView = (UIView*)self.tableView.tableHeaderView;
        UIView  *whiteColorBGView = [backGroundView viewWithTag:KUserSearchWhiteColorBGViewTag];
        UITextField *userSearchTextField = (UITextField *)[whiteColorBGView viewWithTag:KUserSearchTextFileViewTag];
        [userSearchTextField setText:@""];
        self.userSearchInformationString = [[NSString alloc]initWithFormat:@"%@",@""];
        self.userIsSearchCityFreeInfoBool = NO;
    }
    [self loadMoreListData];
}

- (void)loadMoreListData
{
    if (self.dataModuleStyleType == 2) {
        if (self.userIsSearchCityFreeInfoBool == YES) {
            [self initWithTableviewDataSourceForUserSearchKeyString];
        }else{
            [self initWithTableViewDataSource];
        }
    }else {
        [self initWithTableViewDataSource];
    }
}
-(UIView*)creatTableHeaderView{
    
    UIView *backView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, KProjectScreenWidth, 47.0f)];
    backView.backgroundColor = KDefaultOrNightScrollViewColor;
    
    UIView  *whiteColorBackGroundView = [[UIView alloc]initWithFrame:CGRectMake(10.0f, 8.50f,KProjectScreenWidth-20,30.0f)];
    if (ThemeCategory==5) {
        [whiteColorBackGroundView setBackgroundColor:[UIColor grayColor]];

    }
    else
    {
        [whiteColorBackGroundView setBackgroundColor:[UIColor whiteColor]];
 
    }
    [whiteColorBackGroundView setTag:KUserSearchWhiteColorBGViewTag];
    [whiteColorBackGroundView.layer setCornerRadius:4.0f];
    [whiteColorBackGroundView.layer setMasksToBounds:YES];
    //放大镜图标
    UIImageView *searchImageView = [[UIImageView alloc] initWithFrame:CGRectMake(12, 6, 18, 18)];
    [searchImageView setImage:[UIImage imageNamed:@"CityRideInfor_Search.png"]];
    [searchImageView setBackgroundColor:[UIColor clearColor]];
    [whiteColorBackGroundView addSubview:searchImageView];
    
    ///设置取消按键内容
    UIButton    *userSearchCancelButton =[[UIButton alloc]init];
    [userSearchCancelButton setTag:KUserSearchCancelButtonTag];
    [userSearchCancelButton addTarget:self action:@selector(initWithUserCancelSearchInforButton:) forControlEvents:UIControlEventTouchUpInside];
    [userSearchCancelButton.layer setBorderWidth:0.5f];
    [userSearchCancelButton.layer setCornerRadius:4.0f];
    [userSearchCancelButton.layer setMasksToBounds:YES];
    [userSearchCancelButton.titleLabel setFont:[UIFont systemFontOfSize:14.0f]];
    [userSearchCancelButton setTitleColor:[UIColor colorWithRed:127.0f/255.0f
                                                          green:127.0f/255.0f
                                                           blue:127.0f/255.0f
                                                          alpha:1.0f]
                                 forState:UIControlStateNormal];
    [userSearchCancelButton setTitle:@"取消" forState:UIControlStateNormal];
    [userSearchCancelButton setFrame:CGRectMake(160.0f, 10.5f, 50.0f, 19.0f)];
    [userSearchCancelButton setBackgroundImage:createImageWithColor([UIColor colorWithRed:232.0f/255.0f
                                                                                    green:232.0f/255.0f
                                                                                     blue:232.0f/255.0f
                                                                                    alpha:1.0f])
                                      forState:UIControlStateNormal];
    [userSearchCancelButton.layer setBorderColor:[[UIColor colorWithRed:165.0f/255.0f
                                                                  green:165.0f/255.0f
                                                                   blue:166.0f/255.0f
                                                                  alpha:1.0] CGColor]];
    
    [backView addSubview:userSearchCancelButton];
    
    //搜索文本框
    UITextField *searchTextField = [[UITextField alloc] initWithFrame:CGRectMake(38.0f, 0.0f, 304, 30.0f)];
    searchTextField.delegate = self;
    [searchTextField setPlaceholder:@"搜索"];
    searchTextField.returnKeyType = UIReturnKeySearch;
    [searchTextField setTag:KUserSearchTextFileViewTag];
    searchTextField.backgroundColor = [UIColor clearColor];
    searchTextField.font = [UIFont systemFontOfSize:15.0f];
    [searchTextField setTextAlignment:NSTextAlignmentLeft];
    [searchTextField setKeyboardType:UIKeyboardTypeDefault];
    [searchTextField setClearButtonMode:UITextFieldViewModeWhileEditing];
    [searchTextField setContentVerticalAlignment:UIControlContentVerticalAlignmentCenter];
    [whiteColorBackGroundView addSubview:searchTextField];
    
    [backView addSubview:whiteColorBackGroundView];
    
    return backView ;
}

#pragma mark -
#pragma mark - 初始化用户搜索取消按键
- (void)initWithUserCancelSearchInforButton:(id)sender{
    
    UIButton *button = (UIButton *)sender;
    UIView  *backGroundView = (UIView *)[button superview];
    
    UIView  *whiteColorBGView = [backGroundView viewWithTag:KUserSearchWhiteColorBGViewTag];
    UITextField *userSearchTextField = (UITextField *)[whiteColorBGView viewWithTag:KUserSearchTextFileViewTag];
    
    [userSearchTextField setText:@""];
    [userSearchTextField canBecomeFirstResponder];
    self.userSearchInformationString = [[NSString alloc]initWithFormat:@"%@",@""] ;
    
    [UIView animateWithDuration:0.3 animations:^(){
        [whiteColorBGView setFrame:CGRectMake(10.0f, 8.50f, 300.0f,30.0f)];
        [button setFrame:CGRectMake(160.0f, 10.5f, 50.0f, 19.0f)];
        [userSearchTextField setFrame:CGRectMake(38.0f, 0.0f, 304, 30.0f)];
    } completion:^(BOOL finished) {
        if (finished) {
            [self endEditing:YES];
        }
        
    }];
}

- (void)initWithTableViewDataSource{
    
    ///找到了数据请求
    if (self.dataModuleStyleType == 1){
        __weak __typeof(&*self)weakSelf = self;
        self.requestInformation = [[HTTPClient sharedHTTPClient] getSearchOrRecevieDataInforWithIntPage:[self.dataSource nextPageIndex]
                                                                                         withnumPerPage:[self.dataSource pageSize]
                                                                                           withDataType:self.dataStyleType
                                                                                         withcompletion:^(WebAPIResponse *response) {
                                                                                             
                                                                                             dispatch_async(dispatch_get_main_queue(), ^(void){
                                                                                                 //关掉PullToRefreshView
                                                                                                 if (weakSelf.tableView.pullToRefreshView.state == SVPullToRefreshStateLoading)
                                                                                                 {
                                                                                                     UpdateLastRefreshDataForPullToRefreshViewOnView([weakSelf tableView]);
                                                                                                     [weakSelf.tableView.pullToRefreshView stopAnimating];
                                                                                                 }
                                                                                                 
                                                                                                 if(response.code == WebAPIResponseCodeSuccess){
                                                                                                     
                                                                                                     NSMutableArray *searchAndReceiveDataList = [NSMutableArray array];
                                                                                                     for (NSDictionary *dic in [response.responseObject objectForKey:kDataKeyData])
                                                                                                     {
                                                                                                         SearchAndReceiveDataInfor *itemSearchDataInfor = [SearchAndReceiveDataInfor initWithSearchAndReceiveItemWithUnserializedJSONDic:dic];
                                                                                                         if (itemSearchDataInfor) {
                                                                                                             [searchAndReceiveDataList addObject:itemSearchDataInfor];
                                                                                                         }
                                                                                                     }
                                                                                                     //页数
                                                                                                     NSNumber* pages = ObjForKeyInUnserializedJSONDic(response.responseObject,@"totalPage");
                                                                                                     if (pages) {
                                                                                                         weakSelf.dataSource.pageCount = [pages unsignedIntegerValue];
                                                                                                     }
                                                                                                     [weakSelf.dataSource appendPage:searchAndReceiveDataList];
                                                                                                     [weakSelf.tableView reloadData];
                                                                                                 }
                                                                                                 else{
                                                                                                     ShowAutoHideMBProgressHUD(weakSelf.superview,NETERROR_LOADERR_TIP);
                                                                                                 }
                                                                                             });
                                                                                         }];
        
    }
    
    //获取都市顺风车内容
    else if (self.dataModuleStyleType == 2){
        __weak __typeof(&*self)weakSelf = self;
        self.requestInformation = [[HTTPClient sharedHTTPClient] getCityFreeRideDataWithIntPage:[self.dataSource nextPageIndex] withnumPerPage:[self.dataSource pageSize] withDataType:self.dataStyleType withcompletion:^(WebAPIResponse *response) {
            dispatch_async(dispatch_get_main_queue(), ^(void){
                
                //关掉PullToRefreshView
                if (weakSelf.tableView.pullToRefreshView.state == SVPullToRefreshStateLoading)
                {
                    UpdateLastRefreshDataForPullToRefreshViewOnView([weakSelf tableView]);
                    [weakSelf.tableView.pullToRefreshView stopAnimating];
                }
                if (response.code == WebAPIResponseCodeSuccess) {
                    
                    NSMutableArray *searchAndReceiveDataList = [NSMutableArray array];
                    for (NSDictionary *dic in [response.responseObject objectForKey:kDataKeyData])
                    {
                        SearchAndReceiveDataInfor *itemSearchDataInfor = [SearchAndReceiveDataInfor initWIthCityFreeRideItemWithUnserializedJSONDic:dic];
                        if (itemSearchDataInfor) {
                            [searchAndReceiveDataList addObject:itemSearchDataInfor];
                        }
                    }
                    //页数
                    NSNumber* pages = ObjForKeyInUnserializedJSONDic(response.responseObject,@"totalPage");
                    if (pages) {
                        weakSelf.dataSource.pageCount = [pages unsignedIntegerValue];
                    }
                    [weakSelf.dataSource appendPage:searchAndReceiveDataList];
                    [weakSelf.tableView reloadData];
                }
            });
        }];
    }
    
    //信息网模块内容
    //信息网模块内容
    else if (self.dataModuleStyleType == 3){
        __weak __typeof(&*self)weakSelf = self;
        self.requestInformation = [[HTTPClient sharedHTTPClient] getInforNetworkDataInforWithIntPage:[self.dataSource nextPageIndex]
                                                                                      withnumPerPage:[self.dataSource pageSize]
                                                                                        withDataType:self.dataStyleType
                                                                                      withcompletion:^(WebAPIResponse *response) {
                                                                                          
                                                                                          dispatch_async(dispatch_get_main_queue(), ^(void){
                                                                                              //关掉PullToRefreshView
                                                                                              if (weakSelf.tableView.pullToRefreshView.state == SVPullToRefreshStateLoading)
                                                                                              {
                                                                                                  UpdateLastRefreshDataForPullToRefreshViewOnView([weakSelf tableView]);
                                                                                                  [weakSelf.tableView.pullToRefreshView stopAnimating];
                                                                                              }
                                                                                              
                                                                                              Log(@"信息网数据内容:%@",response.responseObject);
                                                                                              if(response.code == WebAPIResponseCodeSuccess){
                                                                                                  
                                                                                                  NSMutableArray *searchAndReceiveDataList = [NSMutableArray array];
                                                                                                  for (NSDictionary *dic in [response.responseObject objectForKey:kDataKeyData])
                                                                                                  {
                                                                                                      SearchAndReceiveDataInfor *itemSearchDataInfor = [SearchAndReceiveDataInfor initWithSearchAndReceiveItemWithUnserializedJSONDic:dic];
                                                                                                      if (itemSearchDataInfor) {
                                                                                                          [searchAndReceiveDataList addObject:itemSearchDataInfor];
                                                                                                      }
                                                                                                  }
                                                                                                  //页数
                                                                                                  NSNumber* pages = ObjForKeyInUnserializedJSONDic(response.responseObject,@"totalPage");
                                                                                                  if (pages) {
                                                                                                      weakSelf.dataSource.pageCount = [pages unsignedIntegerValue];
                                                                                                  }
                                                                                                  [weakSelf.dataSource appendPage:searchAndReceiveDataList];
                                                                                                  [weakSelf.tableView reloadData];
                                                                                              }
                                                                                              else{
                                                                                                  ShowAutoHideMBProgressHUD(weakSelf.superview,NETERROR_LOADERR_TIP);
                                                                                              }
                                                                                          });
                                                                                      }];
        
        
    }
    
    
    //特约商务列表内容
    else if (self.dataModuleStyleType == 4){
        
        NSString *longitudeString = [[NSString alloc]initWithFormat:@"%lf",[CurrentUserInformation sharedCurrentUserInfo].userCoordinate.longitude];
        NSString *latitudeString = [[NSString alloc]initWithFormat:@"%lf",[CurrentUserInformation sharedCurrentUserInfo].userCoordinate.latitude];
        
        __weak __typeof(&*self)weakSelf = self;
        self.requestInformation = [[HTTPClient sharedHTTPClient]getNearbyMerchantInformationWithLongitude:longitudeString
                                                                                             withLatitude:latitudeString
                                                                                            withStyleType:self.dataStyleType
                                                                                           withPageNumber:[self.dataSource nextPageIndex]
                                                                                           withcompletion:^(WebAPIResponse *response) {
                                                                                               dispatch_async(dispatch_get_main_queue(), ^(void){
                                                                                                   //关掉PullToRefreshView
                                                                                                   if (weakSelf.tableView.pullToRefreshView.state == SVPullToRefreshStateLoading)
                                                                                                   {
                                                                                                       UpdateLastRefreshDataForPullToRefreshViewOnView([weakSelf tableView]);
                                                                                                       [weakSelf.tableView.pullToRefreshView stopAnimating];
                                                                                                   }
                                                                                                   
                                                                                                   if(response.code == WebAPIResponseCodeSuccess){
                                                                                                       
                                                                                                       NSMutableArray *questionList = [NSMutableArray array];
                                                                                                       
                                                                                                       
                                                                                                       for (NSDictionary *dic in [response.responseObject objectForKey:kDataKeyData])
                                                                                                       {
                                                                                                           MerchantInfo *announcementItem = [MerchantInfo initMerchantInforWithUnserializedJSONDic:dic];
                                                                                                           if (announcementItem) {
                                                                                                               [questionList addObject:announcementItem];
                                                                                                           }
                                                                                                       }
                                                                                                       
                                                                                                       //页数
                                                                                                       NSNumber* pages = ObjForKeyInUnserializedJSONDic(response.responseObject,@"totalPage");
                                                                                                       if (pages) {
                                                                                                           weakSelf.dataSource.pageCount = [pages unsignedIntegerValue];
                                                                                                       }
                                                                                                       
                                                                                                       [weakSelf.dataSource appendPage:questionList];
                                                                                                       [weakSelf.tableView reloadData];
                                                                                                       
                                                                                                   }else{
                                                                                                       ShowAutoHideMBProgressHUD(weakSelf,NETERROR_LOADERR_TIP);
                                                                                                   }
                                                                                               });
                                                                                           }];
        
    }
    
    //特约商户详情
    else if (self.dataModuleStyleType == 5) {
        self.requestInformation = [[HTTPClient sharedHTTPClient] getNearbyMerchantDetailInformationWithId:self.selfMechantItemInfor.infoIdentity
                                                                                          withScreenStyle:@"c"
                                                                                           withCompletion:^(WebAPIResponse *response) {
                                                                                               
                                                                                               dispatch_async(dispatch_get_main_queue(), ^(void){
                                                                                                   
                                                                                                   if (response.code == WebAPIResponseCodeSuccess) {
                                                                                                       self.selfMechantItemInfor = [MerchantInfo initMerchantInforDetailWithUnserializedJSONDic:[response.responseObject objectForKey:kDataKeyData] withInfor:self.selfMechantItemInfor];
                                                                                                       [self initWithTableViewFrame];
                                                                                                   }
                                                                                                   
                                                                                               });
                                                                                           }];
    }
    
    //我的奖品内容
    else if (self.dataModuleStyleType == 7){
        
        
        if (self.dataStyleType == 1) {
            __weak __typeof(&*self)weakSelf = self;
            self.requestInformation =  [ [HTTPClient sharedHTTPClient] getUserPersonalPrizeDataInforWithUserID:[CurrentUserInformation sharedCurrentUserInfo].userID withIntPage:[self.dataSource nextPageIndex] withnumPerPage:[self.dataSource pageSize] completion:^(WebAPIResponse *response) {
                dispatch_async(dispatch_get_main_queue(), ^(void){
                    //关掉PullToRefreshView
                    if (weakSelf.tableView.pullToRefreshView.state == SVPullToRefreshStateLoading)
                    {
                        UpdateLastRefreshDataForPullToRefreshViewOnView([weakSelf tableView]);
                        [weakSelf.tableView.pullToRefreshView stopAnimating];
                    }
                    if(response.code == WebAPIResponseCodeSuccess){
                        NSMutableArray *questionList = [NSMutableArray array];
                        
                        
                        for (NSDictionary *dic in [response.responseObject objectForKey:kDataKeyData])
                        {
                            MyPrizeOrAnnouncementDataInfor *announcementItem = [MyPrizeOrAnnouncementDataInfor initWithMyPrizeInforithUnserializedJSONDic:dic];
                            if (announcementItem) {
                                [questionList addObject:announcementItem];
                            }
                        }
                        //页数
                        NSNumber* pages = ObjForKeyInUnserializedJSONDic(response.responseObject,@"totalPage");
                        if (pages) {
                            weakSelf.dataSource.pageCount = [pages unsignedIntegerValue];
                        }
                        
                        [weakSelf.dataSource appendPage:questionList];
                        [weakSelf.tableView reloadData];
                        
                    }else{
                        ShowAutoHideMBProgressHUD(HUIKeyWindow,NETERROR_LOADERR_TIP);
                    }
                    
                });
            }];

        }else if (self.dataStyleType == 2){
            
            Log(@"选中的活动内容")
            __weak __typeof(&*self)weakSelf = self;
            self.requestInformation =  [ [HTTPClient sharedHTTPClient] getUserPersonalPrizeDataInforForShakeOrShakeWithUserID:[CurrentUserInformation sharedCurrentUserInfo].userID withIntPage:[self.dataSource nextPageIndex] withnumPerPage:[self.dataSource pageSize] completion:^(WebAPIResponse *response) {
                dispatch_async(dispatch_get_main_queue(), ^(void){
                    //关掉PullToRefreshView
                    if (weakSelf.tableView.pullToRefreshView.state == SVPullToRefreshStateLoading)
                    {
                        UpdateLastRefreshDataForPullToRefreshViewOnView([weakSelf tableView]);
                        [weakSelf.tableView.pullToRefreshView stopAnimating];
                    }
                    if(response.code == WebAPIResponseCodeSuccess){
                        NSMutableArray *questionList = [NSMutableArray array];
                        
                        
                        for (NSDictionary *dic in [response.responseObject objectForKey:kDataKeyData])
                        {
                            MyPrizeOrAnnouncementDataInfor *announcementItem = [MyPrizeOrAnnouncementDataInfor initWithBroadcastinStationActivityUnserializedJSONDic:dic];
                            if (announcementItem) {
                                [questionList addObject:announcementItem];
                            }
                        }
                        //页数
                        NSNumber* pages = ObjForKeyInUnserializedJSONDic(response.responseObject,@"totalPage");
                        if (pages) {
                            weakSelf.dataSource.pageCount = [pages unsignedIntegerValue];
                        }
                        
                        [weakSelf.dataSource appendPage:questionList];
                        [weakSelf.tableView reloadData];
                        
                    }else{
                        ShowAutoHideMBProgressHUD(HUIKeyWindow,NETERROR_LOADERR_TIP);
                    }
                    
                });
            }];

        }
        
    }
    ///我要曝光设置
    else if (self.dataModuleStyleType == 6){
        __weak __typeof(&*self)weakSelf = self;
        self.requestInformation = [[HTTPClient sharedHTTPClient] getExposureFreshThingDataInforWithIntPage:[self.dataSource nextPageIndex]
                                                                                            withnumPerPage:[self.dataSource pageSize]
                                                                                              withDataType:self.dataStyleType
                                                                                            withcompletion:^(WebAPIResponse *response) {
                                                                                                
                                                                                                dispatch_async(dispatch_get_main_queue(), ^(void){
                                                                                                    //关掉PullToRefreshView
                                                                                                    if (weakSelf.tableView.pullToRefreshView.state == SVPullToRefreshStateLoading)
                                                                                                    {
                                                                                                        UpdateLastRefreshDataForPullToRefreshViewOnView([weakSelf tableView]);
                                                                                                        [weakSelf.tableView.pullToRefreshView stopAnimating];
                                                                                                    }
                                                                                                    
                                                                                                    Log(@"信息网数据内容:%@",response.responseObject);
                                                                                                    if(response.code == WebAPIResponseCodeSuccess){
                                                                                                        
                                                                                                        NSMutableArray *searchAndReceiveDataList = [NSMutableArray array];
                                                                                                        for (NSDictionary *dic in [response.responseObject objectForKey:kDataKeyData])
                                                                                                        {
                                                                                                            SearchAndReceiveDataInfor *itemSearchDataInfor = [SearchAndReceiveDataInfor initWithSearchAndReceiveItemWithUnserializedJSONDic:dic];
                                                                                                            if (itemSearchDataInfor) {
                                                                                                                [searchAndReceiveDataList addObject:itemSearchDataInfor];
                                                                                                            }
                                                                                                        }
                                                                                                        //页数
                                                                                                        NSNumber* pages = ObjForKeyInUnserializedJSONDic(response.responseObject,@"totalPage");
                                                                                                        if (pages) {
                                                                                                            weakSelf.dataSource.pageCount = [pages unsignedIntegerValue];
                                                                                                        }
                                                                                                        [weakSelf.dataSource appendPage:searchAndReceiveDataList];
                                                                                                        [weakSelf.tableView reloadData];
                                                                                                    }
                                                                                                    else{
                                                                                                        ShowAutoHideMBProgressHUD(weakSelf.superview,NETERROR_LOADERR_TIP);
                                                                                                    }
                                                                                                });
                                                                                            }];
        
        
    }

    //特约商务列表内容
    else if (self.dataModuleStyleType == 8){
        
        NSString *longitudeString = [[NSString alloc]initWithFormat:@"%lf",[CurrentUserInformation sharedCurrentUserInfo].userCoordinate.longitude];
        NSString *latitudeString = [[NSString alloc]initWithFormat:@"%lf",[CurrentUserInformation sharedCurrentUserInfo].userCoordinate.latitude];
        __weak __typeof(&*self)weakSelf = self;
        self.requestInformation = [[HTTPClient sharedHTTPClient]getNearbyMerchantForSpecialBusinessWithLongitude:longitudeString
                                                                                             withLatitude:latitudeString
                                                                                            withStyleType:self.dataStyleType
                                                                                           withPageNumber:[self.dataSource nextPageIndex]
                                                                                           withcompletion:^(WebAPIResponse *response) {
                                                                                               dispatch_async(dispatch_get_main_queue(), ^(void){
                                                                                                   //关掉PullToRefreshView
                                                                                                   if (weakSelf.tableView.pullToRefreshView.state == SVPullToRefreshStateLoading)
                                                                                                   {
                                                                                                       UpdateLastRefreshDataForPullToRefreshViewOnView([weakSelf tableView]);
                                                                                                       [weakSelf.tableView.pullToRefreshView stopAnimating];
                                                                                                   }
                                                                                                   
                                                                                                   if(response.code == WebAPIResponseCodeSuccess){
                                                                                                       
                                                                                                       NSMutableArray *questionList = [NSMutableArray array];
                                                                                                       
                                                                                                       
                                                                                                       for (NSDictionary *dic in [response.responseObject objectForKey:kDataKeyData])
                                                                                                       {
                                                                                                           MerchantInfo *announcementItem = [MerchantInfo initMerchantInforWithUnserializedJSONDic:dic];
                                                                                                           if (announcementItem) {
                                                                                                               [questionList addObject:announcementItem];
                                                                                                           }
                                                                                                       }
                                                                                                       
                                                                                                       //页数
                                                                                                       NSNumber* pages = ObjForKeyInUnserializedJSONDic(response.responseObject,@"totalPage");
                                                                                                       if (pages) {
                                                                                                           weakSelf.dataSource.pageCount = [pages unsignedIntegerValue];
                                                                                                       }
                                                                                                       
                                                                                                       [weakSelf.dataSource appendPage:questionList];
                                                                                                       [weakSelf.tableView reloadData];
                                                                                                       
                                                                                                   }else{
                                                                                                       ShowAutoHideMBProgressHUD(weakSelf,NETERROR_LOADERR_TIP);
                                                                                                   }
                                                                                               });
                                                                                           }];
        
    }
    //适用商家列表内容
    else if (self.dataModuleStyleType == 9){
        
        __weak __typeof(&*self)weakSelf = self;
        
        NSString *longitudeString = [[NSString alloc]initWithFormat:@"%lf",[CurrentUserInformation sharedCurrentUserInfo].userCoordinate.longitude];
        NSString *latitudeString = [[NSString alloc]initWithFormat:@"%lf",[CurrentUserInformation sharedCurrentUserInfo].userCoordinate.latitude];

        self.requestInformation = [[HTTPClient sharedHTTPClient] getCarWelfareBusinessWithBusinessID:self.businessID WithLongitude:longitudeString withLatitude:latitudeString withcompletion:^(WebAPIResponse *response) {
                                                                                                              dispatch_async(dispatch_get_main_queue(), ^(void){
                                                                                                          //关掉PullToRefreshView
                                                                                                          if (weakSelf.tableView.pullToRefreshView.state == SVPullToRefreshStateLoading)
                                                                                                          {
                                                                                                              UpdateLastRefreshDataForPullToRefreshViewOnView([weakSelf tableView]);
                                                                                                              [weakSelf.tableView.pullToRefreshView stopAnimating];
                                                                                                          }
                                                                                                          
                                                                                                          if(response.code == WebAPIResponseCodeSuccess){
                                                                                                              
                                                                                                              NSMutableArray *questionList = [NSMutableArray array];
                                                                                                              
                                                                                                              
                                                                                                              for (NSDictionary *dic in [response.responseObject objectForKey:kDataKeyData])
                                                                                                              {
                                                                                                                  MerchantInfo *announcementItem = [MerchantInfo initBusinessInforWithUnserializedJSONDic:dic];
                                                                                                                  if (announcementItem) {
                                                                                                                      [questionList addObject:announcementItem];
                                                                                                                  }
                                                                                                              }
                                                                                                              
                                                                                                              //页数
                                                                                                              NSNumber* pages = ObjForKeyInUnserializedJSONDic(response.responseObject,@"totalPage");
                                                                                                              if (pages) {
                                                                                                                  weakSelf.dataSource.pageCount = [pages unsignedIntegerValue];
                                                                                                              }
                                                                                                              
                                                                                                              [weakSelf.dataSource appendPage:questionList];
                                                                                                              [weakSelf.tableView reloadData];
                                                                                                              
                                                                                                          }else{
                                                                                                              ShowAutoHideMBProgressHUD(weakSelf,NETERROR_LOADERR_TIP);
                                                                                                          }
                                                                                                      });
                                                                                                  }];
        
    }

}


- (void)initWithTableviewDataSourceForUserSearchKeyString{
    //获取都市顺风车内容
    if (self.dataModuleStyleType == 2){
        __weak __typeof(&*self)weakSelf = self;
        self.requestInformation = [[HTTPClient sharedHTTPClient] getCityFreeRideDataWithSearchKey:self.userSearchInformationString withIntPage:[self.dataSource nextPageIndex] withnumPerPage:[self.dataSource pageSize] withDataType:self.dataStyleType withcompletion:^(WebAPIResponse *response) {
            
            dispatch_async(dispatch_get_main_queue(), ^(void){
                
                //关掉PullToRefreshView
                if (weakSelf.tableView.pullToRefreshView.state == SVPullToRefreshStateLoading)
                {
                    UpdateLastRefreshDataForPullToRefreshViewOnView([weakSelf tableView]);
                    [weakSelf.tableView.pullToRefreshView stopAnimating];
                }
                if (response.code == WebAPIResponseCodeSuccess) {
                    
                    NSMutableArray *searchAndReceiveDataList = [NSMutableArray array];
                    for (NSDictionary *dic in [response.responseObject objectForKey:kDataKeyData])
                    {
                        SearchAndReceiveDataInfor *itemSearchDataInfor = [SearchAndReceiveDataInfor initWIthCityFreeRideItemWithUnserializedJSONDic:dic];
                        if (itemSearchDataInfor) {
                            [searchAndReceiveDataList addObject:itemSearchDataInfor];
                        }
                    }
                    //页数
                    NSNumber* pages = ObjForKeyInUnserializedJSONDic(response.responseObject,@"totalPage");
                    if (pages) {
                        weakSelf.dataSource.pageCount = [pages unsignedIntegerValue];
                    }
                    [weakSelf.dataSource appendPage:searchAndReceiveDataList];
                    [weakSelf.tableView reloadData];
                }
            });
        }];
    }
}

- (void)initWithUserOperationButtonEvent:(id)sender{
    UIButton *button = (UIButton *)sender;
    
    ///拨打电话
    if (button.tag == KUserCallPhoneButtonTag) {
        NSString *telNum = [[NSString alloc] initWithFormat:@"telprompt://%@",self.selfMechantItemInfor.infoTel]; //number为号码字符串
        [[UIApplication sharedApplication] openURL:[NSURL URLWithString:telNum]]; //拨号
    }
    
    //导航
    else if (button.tag == KUserNavigationButtonTag){
        CLLocationCoordinate2D currentCoordinate = [[CurrentUserInformation sharedCurrentUserInfo] userCoordinate];
        
        if ([[[UIDevice currentDevice] systemVersion] floatValue] < 6.0) { // ios6以下，调用google map
            NSString *theString = [NSString stringWithFormat:@"http://maps.apple.com/?saddr=%f,%f&daddr=%f,%f",currentCoordinate.latitude,currentCoordinate.longitude, self.selfMechantItemInfor.infoCoordinate.latitude, self.selfMechantItemInfor.infoCoordinate.longitude];
            theString = [theString stringByAddingPercentEscapesUsingEncoding: NSUTF8StringEncoding];
            
            NSURL *url = [[NSURL alloc] initWithString:theString];
            [[UIApplication sharedApplication] openURL:url];
        } else { // 直接调用ios自己带的apple map
            CLLocationCoordinate2D to = self.selfMechantItemInfor.infoCoordinate;
            MKMapItem *toLocation = [[MKMapItem alloc] initWithPlacemark:[[MKPlacemark alloc] initWithCoordinate:to addressDictionary:nil]];
            
            toLocation.name = @"Destination";
            [MKMapItem openMapsWithItems:[NSArray arrayWithObjects:[MKMapItem mapItemForCurrentLocation], toLocation, nil]
                           launchOptions:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:MKLaunchOptionsDirectionsModeDriving, [NSNumber numberWithBool:YES], nil]
                                                                     forKeys:[NSArray arrayWithObjects:MKLaunchOptionsDirectionsModeKey, MKLaunchOptionsShowsTrafficKey, nil]]];
        }
    }
}


- (NSInteger )numberOfSectionsInTableView:(UITableView *)tableView{
    
    NSInteger numberOfSections = 1;
    return numberOfSections;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    
    NSInteger numberOfRows = 1;
    
    if (self.dataModuleStyleType == 1){
        numberOfRows = [self.dataSource count] + 1;
    }
    else if (self.dataModuleStyleType == 2 ){
        numberOfRows = [self.dataSource count] + 1;
    }
    else if (self.dataModuleStyleType == 3 ){
        numberOfRows = [self.dataSource count] + 1;
    }
    else if (self.dataModuleStyleType == 4 || self.dataModuleStyleType == 8||self.dataModuleStyleType == 9) {
        numberOfRows = [self.dataSource count] + 1;
    }
    else if (self.dataModuleStyleType == 6 ){
        numberOfRows = [self.dataSource count] + 1;
    }

    else if (self.dataModuleStyleType == 7){
        numberOfRows = [self.dataSource count] + 1;
    }
    return numberOfRows;
}

- (void)_configureCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row >= [self.dataSource count]) {
        return;
    }
    
    if (self.dataModuleStyleType == 1||
        self.dataModuleStyleType == 2||
        self.dataModuleStyleType == 3||
        self.dataModuleStyleType == 6){
        SearchAndReceiveDataInfor *itemInfor = [self.dataSource.data objectAtIndex:(indexPath.row)];
        SearchOrCityOrInformationTableViewCell*searchInforCell = (SearchOrCityOrInformationTableViewCell* )cell;
        [searchInforCell setSelectedCellIndexPath:indexPath];
        [searchInforCell setUserSelectedCellDelegate:self];
        
        if (self.dataModuleStyleType == 1) {
            [searchInforCell initWithTableViewCellDataInformation:itemInfor withInitCellStyle:self.dataModuleStyleType withDataStyle:self.dataStyleType];
        }else if (self.dataModuleStyleType == 2){
            [searchInforCell initWithTableViewCellDataInformation:itemInfor withInitCellStyle:self.dataModuleStyleType withDataStyle:self.dataStyleType];
        }else if (self.dataModuleStyleType == 3){
            [searchInforCell initWithTableViewCellDataInformation:itemInfor
                                                withInitCellStyle:1
                                                    withDataStyle:self.dataStyleType];
        }

        else if (self.dataModuleStyleType == 6){
            [searchInforCell initWithTableViewCellDataInformation:itemInfor
                                                withInitCellStyle:1
                                                    withDataStyle:self.dataStyleType];
        }

        
    }else if (self.dataModuleStyleType == 4 || self.dataModuleStyleType == 8||self.dataModuleStyleType == 9){
        MerchantInfo *ItemInfor = [self.dataSource.data objectAtIndex:(indexPath.row)];
        NearbyMerchantCell* announcementCell = (NearbyMerchantCell* )cell;
        [announcementCell initWithNearbyMerchantInformation:ItemInfor];
    }
    else if (self.dataModuleStyleType == 7){
        
        if (self.dataStyleType == 1) {
            MyPrizeOrAnnouncementDataInfor *announcementItemInfor = [self.dataSource.data objectAtIndex:(indexPath.row)];
            AnnouncementCell* announcementCell = (AnnouncementCell* )cell;
            [announcementCell initWithDisplayMySelfPrizeItemCellWithInfor:announcementItemInfor];
        }
        else if (self.dataStyleType == 2){
            MyPrizeOrAnnouncementDataInfor *announcementItemInfor = [self.dataSource.data objectAtIndex:(indexPath.row)];
            StationActivityCell* announcementCell = (StationActivityCell* )cell;
            [announcementCell initWithDisplaywithDataInfor:announcementItemInfor];
        }

    }
    
    return;
}
#pragma mark - UITableViewDelegate
- (BOOL)_isLoadMoreCellAtIndexPath:(NSIndexPath *)indexPath
{
    return (indexPath.row == [self.dataSource count]);
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    CGFloat heightForRow = 0.0f;
    
    if([self _isLoadMoreCellAtIndexPath:indexPath])
        return kSizeLoadMoreCellHeight;
    
    ///特约商户详情界面
    if (self.dataModuleStyleType == 5) {
        
        if (indexPath.section == 0) {
            heightForRow = 200.0f;
        }
        
        else if (indexPath.section == 1){
            //判断是否有优惠活动
            if (self.selfMechantItemInfor.infoActivityState == 1) {
                ///若存在优惠活动
                
                //活动内容
                if (indexPath.row == 0) {
                    CGSize cellContentLabelSize = [self.selfMechantItemInfor.infoActivityContent sizeWithFont:[UIFont systemFontOfSize:16.0f]
                                                                                            constrainedToSize:CGSizeMake(284, MAXFLOAT)
                                                                                                lineBreakMode:NSLineBreakByWordWrapping];
                    heightForRow = 50+ cellContentLabelSize.height + 20;
                }
                
                //商家介绍
                else if (indexPath.row == 1){
                    
                    CGSize cellContentLabelSize = [self.selfMechantItemInfor.infoMainBusiness sizeWithFont:[UIFont systemFontOfSize:16.0f]
                                                                                         constrainedToSize:CGSizeMake(284, MAXFLOAT)
                                                                                             lineBreakMode:NSLineBreakByWordWrapping];
                    heightForRow = 50 + cellContentLabelSize.height + 20;
                }
            }
            
            else{
                ///若不存在优惠活动
                CGSize cellContentLabelSize = [self.selfMechantItemInfor.infoMainBusiness sizeWithFont:[UIFont systemFontOfSize:16.0f]
                                                                                     constrainedToSize:CGSizeMake(284, MAXFLOAT)
                                                                                         lineBreakMode:NSLineBreakByWordWrapping];
                heightForRow = 50 + cellContentLabelSize.height + 20;
            }
        }
        
    }
    ///找到了
    if (self.dataModuleStyleType == 1||self.dataModuleStyleType == 3||self.dataModuleStyleType == 6) {
        
        if (indexPath.row < [self.dataSource.data count]) {
            //            heightForRow =  210.0;
            SearchAndReceiveDataInfor *searchAndReceiveInfo = (SearchAndReceiveDataInfor *)[self.dataSource.data objectAtIndex:[indexPath row]];
            
            CGFloat isCanDeleteHeight = 0;
            if (![[CurrentUserInformation sharedCurrentUserInfo].userID isEqualToString:searchAndReceiveInfo.userPersonalId]) {
                isCanDeleteHeight = 30.0f;
            }
            if (searchAndReceiveInfo.userPersonalSendImageSizeInfor.height == 0) {//无图片
                heightForRow = searchAndReceiveInfo.userPersonalContentHeight + 124.0f - 30+25;
            }else{//有图片
                heightForRow =searchAndReceiveInfo.userPersonalContentHeight + searchAndReceiveInfo.userPersonalSendImageSizeInfor.height + 134.0f - 30+25;
            }
        }
    }
    ///顺风车
    else if (self.dataModuleStyleType == 2){
        
        if (indexPath.row < [self.dataSource.data count]) {
            SearchAndReceiveDataInfor *searchAndReceiveInfo = (SearchAndReceiveDataInfor *)[self.dataSource.data objectAtIndex:[indexPath row]];
            
            CGFloat isCanDeleteHeight = 0;
            if (![[CurrentUserInformation sharedCurrentUserInfo].userID isEqualToString:searchAndReceiveInfo.userPersonalId]) {
                isCanDeleteHeight = 30.0f;
            }
            if (searchAndReceiveInfo.userPersonalSendImageSizeInfor.height == 0) {//无图片
                heightForRow = searchAndReceiveInfo.userPersonalContentHeight + 124.0f - isCanDeleteHeight+15;
            }else{//有图片
                heightForRow =searchAndReceiveInfo.userPersonalContentHeight + searchAndReceiveInfo.userPersonalSendImageSizeInfor.height + 134.0f - isCanDeleteHeight+15;
            }
        }
    }
    
    ///特约商户列表
    else if (self.dataModuleStyleType == 4 || self.dataModuleStyleType == 8||self.dataModuleStyleType == 9){
        
        if (indexPath.row < [self.dataSource.data count]) {
            heightForRow =  93.0;
        }
    }
    
    else if (self.dataModuleStyleType == 7){
        
        if (self.dataStyleType == 1) {
            if (indexPath.row < [self.dataSource.data count]) {
                heightForRow =  80.0;
            }
        }else if (self.dataStyleType == 2){
            
            if (indexPath.row < [self.dataSource.data count]) {
                return 193.0f;
            }
        }
    }
    return heightForRow;
}

- (UITableViewCell *)createCellWithIdentifier:(NSString *)cellIdentifier
{
    if ([cellIdentifier isEqualToString:kHUILoadMoreCellIdentifier])
    {
        return CreateLoadMoreCell();
    }
    
    if (self.dataModuleStyleType == 1 ||
        self.dataModuleStyleType == 2 ||
        self.dataModuleStyleType == 3 ||
        self.dataModuleStyleType == 6) {
        return [[SearchOrCityOrInformationTableViewCell alloc] init];
    }
    
    else if (self.dataModuleStyleType == 4 || self.dataModuleStyleType == 8||self.dataModuleStyleType == 9){
        return [[NearbyMerchantCell alloc] init];
    }
    
    else if (self.dataModuleStyleType == 7){
        
        if (self.dataStyleType == 1) {
            return [[AnnouncementCell alloc] init];
        }
        else if (self.dataStyleType == 2){
             return   [[StationActivityCell alloc] init];
        }
        
    }
    
    return [[SearchOrCityOrInformationTableViewCell alloc] init];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    NSString *cellIdentifier = @"DataInforTableCell";
    BOOL isLoadMoreCell = [self _isLoadMoreCellAtIndexPath:indexPath];
    cellIdentifier = isLoadMoreCell? kHUILoadMoreCellIdentifier: cellIdentifier;
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellIdentifier];
    if (!cell) {
        cell = [self createCellWithIdentifier:cellIdentifier];
    }
    
    if (!isLoadMoreCell)
        [self _configureCell:cell forRowAtIndexPath:indexPath];
    else
    {
        if ([self.dataSource canLoadMore])
        {
            __weak __typeof(&*self)weakSelf = self;
            [(HUILoadMoreCell*)cell setLoadMoreOperationDidStartedBlock:^{
                [weakSelf loadMoreListData];
            }];
            [(HUILoadMoreCell*)cell startLoadMore];
        }
        else
        {
            if (self.tableView.pullToRefreshView.state == SVPullToRefreshStateLoading) {
                cell.textLabel.text = LOADMORE_LOADING;
            }else{
                cell.textLabel.text = LOADMORE_LOADOVER;
            }
        }
    }
    
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    
    CGFloat heightForHeader = 0.0f;
    if (self.dataModuleStyleType == 5) {
        
        if (section == 1) {
            heightForHeader = 58.0f +20.0f;
            
        }
        
    }
    return heightForHeader;
}


- (UIView   *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    UIView *sectionHeaderView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, KProjectScreenWidth, 58+20.0f)];
    //sectionHeaderView.backgroundColor = [UIColor colorWithRed:232/255.0f green:230/255.0f blue:232/255.0f alpha:1];
    sectionHeaderView.backgroundColor=[UIColor blackColor];
    sectionHeaderView.layer.shadowColor = [[UIColor grayColor] CGColor];
    sectionHeaderView.layer.shadowOffset = CGSizeMake(0, 0);
    sectionHeaderView.layer.shadowOpacity = 0.7f;
    sectionHeaderView.layer.shadowRadius = 1.0f;
    sectionHeaderView.layer.shadowPath = [UIBezierPath bezierPathWithRect:sectionHeaderView.bounds].CGPath;
    
    //地址按钮
    UIButton *addressButton = [UIButton buttonWithType:UIButtonTypeCustom];
    [addressButton setBackgroundImage:createImageWithColor([UIColor colorWithRed:208/255.0f
                                                                           green:208/255.0f
                                                                            blue:208/255.0f
                                                                           alpha:1])
                             forState:UIControlStateNormal];
    [addressButton setBackgroundImage:createImageWithColor([UIColor colorWithRed:0
                                                                           green:0
                                                                            blue:0
                                                                           alpha:0.2f])
                             forState:UIControlStateHighlighted];
    addressButton.tag = KUserNavigationButtonTag;
    addressButton.layer.borderColor = [[UIColor colorWithRed:198/255.0f green:198/255.0f blue:198/255.0f alpha:1.0f] CGColor];
    [addressButton.titleLabel setFont:[UIFont systemFontOfSize:12]];
    [addressButton.titleLabel setTextAlignment:NSTextAlignmentLeft];
    addressButton.contentHorizontalAlignment = UIControlContentHorizontalAlignmentLeft;
    addressButton.contentEdgeInsets = UIEdgeInsetsMake(0,8, 0, 20);
    [addressButton setTitleColor:[UIColor colorWithRed:95/255.0f green:95/255.0f blue:95/255.0f alpha:1] forState:UIControlStateNormal];
    [addressButton addTarget:self action:@selector(initWithUserOperationButtonEvent:) forControlEvents:UIControlEventTouchUpInside];
    addressButton.layer.masksToBounds = YES;
    [addressButton.layer setCornerRadius:10.0f];
    ////地址指示图片
    UIImageView *addressIndicatorImageView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"NearbyShops_AddressButtonIndicator.png"]];
    addressIndicatorImageView.frame = CGRectZero;
    [addressButton addSubview:addressIndicatorImageView];
    [sectionHeaderView addSubview:addressButton];
    
    //预约视图设置
    UIButton*restaurantReserveButton = [UIButton buttonWithType:UIButtonTypeCustom];
    [restaurantReserveButton setFrame:CGRectMake(204.0f, 10.0f, 105.0f, 37.0f)];
    [restaurantReserveButton addTarget:self action:@selector(initWithUserOperationButtonEvent:) forControlEvents:UIControlEventTouchUpInside];
    [restaurantReserveButton setImage:[UIImage imageNamed:@"Merchant_Reserve.png"] forState:UIControlStateNormal];
    [sectionHeaderView addSubview:restaurantReserveButton];
    
    return sectionHeaderView;
}

- (void)initWithUserOperationButtonTypeStyle:(ButtonOperationTypeStyle)m_ButtonStyle withIndexPath:(NSIndexPath *)m_IndexPath{
    SearchAndReceiveDataInfor *selectedItemInfor = (SearchAndReceiveDataInfor *)[self.dataSource.data objectAtIndex:m_IndexPath.row];
    self.userSelectedItemInfor = selectedItemInfor;
    ///拨打电话设置
    if (m_ButtonStyle == ButtonForCallPhoneStyle) {
        
        if ([selectedItemInfor.userPersonalPhoneNumber length] == 11) {
            //设置号码
            NSString *telNum = [[NSString alloc]initWithFormat:@"telprompt://%@",selectedItemInfor.userPersonalPhoneNumber];
            //拨号
            [[UIApplication sharedApplication] openURL:[NSURL URLWithString:telNum]];
        }
    }
    ///删除数据信息内容
    else if (m_ButtonStyle == ButtonForDeleteOperationStyle){
        
        UIActionSheet   *actionSheet = [[UIActionSheet alloc]initWithTitle:nil delegate:self
                                                         cancelButtonTitle:@"取消"
                                                    destructiveButtonTitle:@"删除本条信息"
                                                         otherButtonTitles: nil];
        [actionSheet showInView:self];
        
    }
    
}

- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex{
    if (buttonIndex == 0) {
        
        ///删除找到了数据内容
        if (self.dataModuleStyleType == 1) {
            WaittingMBProgressHUD(HUIKeyWindow, @"删除中...");
            [FMHTTPClient operationWithUserDeleteSearchOrRecevieItemDataWithItemID:self.userSelectedItemInfor.userPersonalSendInforID withUserID:[CurrentUserInformation sharedCurrentUserInfo].userID withcompletion:^(WebAPIResponse *response) {
                dispatch_async(dispatch_get_main_queue(), ^(void){
                    
                    if (response.code == WebAPIResponseCodeSuccess) {
                        ConfiguratePullToRefreshViewAppearanceForScrollView(self.tableView);
                        [self.tableView triggerPullToRefresh];
                        FinishMBProgressHUD(HUIKeyWindow);
                    }
                    else{
                        FailedMBProgressHUD(HUIKeyWindow, @"删除失败");
                    }
                });
            }];
        }
        
        ///顺风车删除
        else if (self.dataModuleStyleType == 2){
            WaittingMBProgressHUD(HUIKeyWindow, @"删除中...");
            [FMHTTPClient operationWithUserDeleteCityFreeRideItemDataWithItemID:self.userSelectedItemInfor.userPersonalSendInforID withUserID:[CurrentUserInformation sharedCurrentUserInfo].userID withcompletion:^(WebAPIResponse *response) {
                dispatch_async(dispatch_get_main_queue(), ^(void){
                    
                    if (response.code == WebAPIResponseCodeSuccess) {
                        ConfiguratePullToRefreshViewAppearanceForScrollView(self.tableView);
                        [self.tableView triggerPullToRefresh];
                        FinishMBProgressHUD(HUIKeyWindow);
                    }
                    else{
                        FailedMBProgressHUD(HUIKeyWindow, @"删除失败");
                    }
                });
            }];
            
        }
        
        ///我要曝光设置
        else if (self.dataModuleStyleType == 6){
            
//            operationWithUserDeleteExposureFreshThingItemDataWithItemID
            
            WaittingMBProgressHUD(HUIKeyWindow, @"删除中...");
            [FMHTTPClient operationWithUserDeleteExposureFreshThingItemDataWithItemID:self.userSelectedItemInfor.userPersonalSendInforID withUserID:[CurrentUserInformation sharedCurrentUserInfo].userID withcompletion:^(WebAPIResponse *response) {
                dispatch_async(dispatch_get_main_queue(), ^(void){
                    
                    if (response.code == WebAPIResponseCodeSuccess) {
                        ConfiguratePullToRefreshViewAppearanceForScrollView(self.tableView);
                        [self.tableView triggerPullToRefresh];
                        FinishMBProgressHUD(HUIKeyWindow);
                    }
                    else{
                        FailedMBProgressHUD(HUIKeyWindow, @"删除失败");
                    }
                });
            }];
        }
        ///信息网删除
        else if (self.dataModuleStyleType == 3){
            
            //            operationWithUserDeleteExposureFreshThingItemDataWithItemID
            
            WaittingMBProgressHUD(HUIKeyWindow, @"删除中...");
            [FMHTTPClient operationWithUserDeleteInforNetworkItemDataWithItemID:self.userSelectedItemInfor.userPersonalSendInforID withUserID:[CurrentUserInformation sharedCurrentUserInfo].userID withcompletion:^(WebAPIResponse *response) {
                dispatch_async(dispatch_get_main_queue(), ^(void){
                    
                    if (response.code == WebAPIResponseCodeSuccess) {
                        ConfiguratePullToRefreshViewAppearanceForScrollView(self.tableView);
                        [self.tableView triggerPullToRefresh];
                        FinishMBProgressHUD(HUIKeyWindow);
                    }
                    else{
                        FailedMBProgressHUD(HUIKeyWindow, @"删除失败");
                    }
                });
            }];
        }

    }
}


- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    if ([self _isLoadMoreCellAtIndexPath:indexPath]){
        return;
    }
    [tableView deselectRowAtIndexPath:indexPath animated:NO];
    
    ///找到了
    if (self.dataModuleStyleType == 1){
        
        SearchAndReceiveDataInfor *selectedItemInfor = (SearchAndReceiveDataInfor *)[self.dataSource.data objectAtIndex:indexPath.row];
        
        QuestionDetailViewController *detailView = [[QuestionDetailViewController alloc]initWithQuestionId:selectedItemInfor.userPersonalSendQuestionIDString];
        detailView.userSendInforIsPublic = YES;
        UINavigationController *navController = ((SearchAndReceiveViewController *)self.superview.superview.nextResponder).navigationController;
        [navController pushViewController:detailView animated:YES];
    }
    ///顺风车
    else if (self.dataModuleStyleType == 2){
        SearchAndReceiveDataInfor *selectedItemInfor = (SearchAndReceiveDataInfor *)[self.dataSource.data objectAtIndex:indexPath.row];
        
        QuestionDetailViewController *detailView = [[QuestionDetailViewController alloc]initWithQuestionId:selectedItemInfor.userPersonalSendQuestionIDString];
        [detailView setUserSendInforIsPublic:1];
        UINavigationController *navController = ((CityFreeRideMainListView *)self.superview.superview.nextResponder).navigationController;
        [navController pushViewController:detailView animated:YES];
    }
    
    ///特约商户
    else if (self.dataModuleStyleType == 4 || self.dataModuleStyleType == 8||self.dataModuleStyleType == 9) {
        MerchantInfo *selectedInfor = (MerchantInfo *)[self.dataSource.data objectAtIndex:indexPath.row];
//        NSString *urlString = [NSString stringWithFormat:@"%@BusinessUser/BusinessDetail/?id=%@&source=%@",kBaseAPIURL,selectedInfor.infoIdentity,KProjectCityCodeString];
        
        UIImageView *imageview = [[UIImageView alloc]init];
        ///设置头部图片内容
        [imageview setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@%@",KMediaServerImagesInforURL,selectedInfor.infoSmallImageUrlStr]] placeholderImage:createImageWithColor(KUIImageViewDefaultColor)];
        Log(@"image is %@",[NSString stringWithFormat:@"%@%@",KMediaServerImagesInforURL,selectedInfor.infoSmallImageUrlStr]);
        
        
        StationActivityDescriptionWebView *webViewControl=[[StationActivityDescriptionWebView alloc]initWithBusinessWebURLString:nil withDataInforID:selectedInfor.infoIdentity WithImageUrl:selectedInfor.infoSmallImageUrlStr];
        
        
        UINavigationController *navController = ((NearbyMerchantList *)self.superview.superview.nextResponder).navigationController;
        
        [navController pushViewController:webViewControl animated:YES];
    }
    ///信息网
    else if (self.dataModuleStyleType == 3){
        SearchAndReceiveDataInfor *selectedItemInfor = (SearchAndReceiveDataInfor *)[self.dataSource.data objectAtIndex:indexPath.row];
        
        QuestionDetailViewController *detailView = [[QuestionDetailViewController alloc]initWithQuestionId:selectedItemInfor.userPersonalSendQuestionIDString];
        [detailView setUserSendInforIsPublic:1];
        UINavigationController *navController = ((CityFreeRideMainListView *)self.superview.superview.nextResponder).navigationController;
        [navController pushViewController:detailView animated:YES];
    }

    if (self.dataModuleStyleType == 6){
        
        SearchAndReceiveDataInfor *selectedItemInfor = (SearchAndReceiveDataInfor *)[self.dataSource.data objectAtIndex:indexPath.row];
        
        QuestionDetailViewController *detailView = [[QuestionDetailViewController alloc]initWithQuestionId:selectedItemInfor.userPersonalSendQuestionIDString];
        detailView.userSendInforIsPublic = YES;
        UINavigationController *navController = ((SearchAndReceiveViewController *)self.superview.nextResponder).navigationController;
        [navController pushViewController:detailView animated:YES];
    }

    else if (self.dataModuleStyleType == 7){
        
        if (self.dataStyleType == 1) {
            MyPrizeOrAnnouncementDataInfor *announcementItemInfor = [self.dataSource.data objectAtIndex:(indexPath.row)];
            
            NSString*urlStringParam = [[NSString alloc]initWithFormat:@"%@ShakeOff/Prize/?id=%@&userId=%@&source=%@",kBaseAPIURL,announcementItemInfor.dataSelfDataID,[CurrentUserInformation sharedCurrentUserInfo].userID,KProjectCityCodeString];
//            ShareWebViewController *webView = [[ShareWebViewController alloc]initWithWebURLString:urlStringParam withTitle:@"奖品详情" withStyle:InitNavigationWebStyle withImageInfor:[UIImage imageNamed:@"Icon.png"]];
            ShareWebViewController *webView = [[ShareWebViewController alloc]initWithWebURLString:urlStringParam withTitle:@"奖品详情" withStyle:InitNavigationWebStyle withImageInfor:[UIImage imageNamed:@"Icon.png"] withShareWebDataStyle:WebDataForUserShakeResultStyle withDataInforID:announcementItemInfor.dataSelfDataID];
            [webView setIsNeedShareWebInfor:NO];
            UINavigationController *navController = ((NearbyMerchantList *)self.superview.superview.nextResponder).navigationController;
            [navController pushViewController:webView animated:YES];
        }
        else if (self.dataStyleType == 2){
            MyPrizeOrAnnouncementDataInfor *announcementItem = (MyPrizeOrAnnouncementDataInfor *)[self.dataSource.data objectAtIndex:indexPath.row];
            
            if ([announcementItem.dataForStateStyle integerValue] == 1||[announcementItem.dataForStateStyle integerValue] == 2) {
                
                
                UIImageView *imageview = [[UIImageView alloc]init];
                [imageview setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@%@",KMediaServerImagesInforURL,announcementItem.dataForItsImageURL]] placeholderImage:createImageWithColor(KUIImageViewDefaultColor)];
                StationActivityDescriptionWebView *descriptionWebView = [[StationActivityDescriptionWebView alloc]initWithDescriptionWebViewWithURL:nil withWiADId:announcementItem.dataSelfDataID withImage:imageview.image ];
                [descriptionWebView setTitle:@"活动详情"];
                UINavigationController *navController = ((NearbyMerchantList *)self.superview.superview.nextResponder).navigationController;

                [navController pushViewController:descriptionWebView animated:YES];
            }else{
                
                UIImageView *imageview = [[UIImageView alloc]init];
                [imageview setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@%@",KMediaServerImagesInforURL,announcementItem.dataForItsImageURL]] placeholderImage:createImageWithColor(KUIImageViewDefaultColor)];
                NSString *urlString = [NSString stringWithFormat:@"%@/Activity/Album/?id=%@&source=%@",kBaseAPIURL,announcementItem.dataSelfDataID,KProjectCityCodeString];
                
                ShareWebViewController *webViewController = [[ShareWebViewController alloc]initWithWebURLString:urlString withTitle:@"活动剪影" withStyle:InitNavigationWebStyle withImageInfor:imageview.image withShareWebDataStyle:WebDataForDescriptionDataStyle withDataInforID:announcementItem.dataSelfDataID];
                UINavigationController *navController = ((NearbyMerchantList *)self.superview.superview.nextResponder).navigationController;
                [navController pushViewController:webViewController animated:YES];
            }
        }
    }
}



- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField{
    
    if (textField.tag == KUserSearchTextFileViewTag) {
        Log(@"开始操作");
        
        UIView  *backGroundView = (UIView *)[textField superview];
        
        UIView *cancelBackGroundView = (UIView *)self.tableView.tableHeaderView;
        
        UIButton    *cancelButton = (UIButton *)[cancelBackGroundView viewWithTag:KUserSearchCancelButtonTag];
        
        [UIView animateWithDuration:0.3 animations:^(){
            
            [backGroundView setFrame:CGRectMake(10.0f, 8.50f, 240.0f,30.0f)];
            [cancelButton setFrame:CGRectMake(260.0f, 8.5f, 50.0f, 29.0f)];
            [textField setFrame:CGRectMake(42.0f, 0.0f, 200, 30.0f)];
        } completion:^(BOOL finished) {
            if (finished) {
                
            }
            
        }];
    }
    return YES;
}

- (BOOL)textFieldShouldEndEditing:(UITextField *)textField{
    
    if (textField.tag == KUserSearchTextFileViewTag) {
        UIView  *backGroundView = (UIView *)[textField superview];
        UIView *cancelBackGroundView = (UIView *)self.tableView.tableHeaderView;
        
        UIButton    *cancelButton = (UIButton *)[cancelBackGroundView viewWithTag:KUserSearchCancelButtonTag];
        [UIView animateWithDuration:0.3 animations:^(){
            [backGroundView setFrame:CGRectMake(10.0f, 8.50f, 300.0f,30.0f)];
            [cancelButton setFrame:CGRectMake(160.0f, 10.5f, 50.0f, 19.0f)];
            [textField setFrame:CGRectMake(38.0f, 0.0f, 304, 30.0f)];
        } completion:^(BOOL finished) {
            if (finished) {
            }
            
        }];
    }
    return YES;
}
- (BOOL)textFieldShouldReturn:(UITextField *)textField{
    
    if (textField.tag == KUserSearchTextFileViewTag) {
        
        Log(@"textField.text is %@ \n\n length is %d",textField.text,[textField.text length])
        
        if (!IsStringEmptyOrNull(textField.text)) {
            self.userIsSearchCityFreeInfoBool = YES;
            
            if (self.userSearchInformationString ) {
                self.userSearchInformationString = nil;
            }
            self.userSearchInformationString = [[NSString alloc]initWithFormat:@"%@",textField.text];
            
            Log(@"你可以搜送请求了。。");
            
            //停掉当前未完成的请求操作
            [self.requestInformation cancel];
            //清空当前数据源中所有数据
            [self.dataSource cleanAllData];
            [self.tableView reloadData];
            [self initWithTableviewDataSourceForUserSearchKeyString];
        }
        
        [self endEditing:YES];
    }
    return YES;
}

- (BOOL)textFieldShouldClear:(UITextField *)textField{
    [self endEditing:YES];
    return YES;
}

-(UIView *)createSearchBarView
{
    
    CGFloat height=(CGFloat)KProjectScreenHeight/568;
    
    if(height<1)
    {
        height=1;
    }

    // 搜索框
    UIView *searchViewBg = [[UIView alloc] initWithFrame:CGRectMake(0,
                                                                    0,
                                                                    KProjectScreenWidth,
                                                                    40*height)];
    searchViewBg.backgroundColor = [UIColor whiteColor];
    
    UISearchBar *m_searchBar = [[UISearchBar alloc] initWithFrame:CGRectMake(0, 0, KProjectScreenWidth, 40*height)];
    m_searchBar.backgroundImage=createImageWithColor(KDefaultOrNightScrollViewColor);
    m_searchBar.barStyle=UIBarStyleDefault;
    m_searchBar.showsCancelButton=NO;
    m_searchBar.delegate = self;
    m_searchBar.alpha = 1;
    m_searchBar.placeholder = @"搜索";
    self.searchBar = m_searchBar;
    
    [searchViewBg addSubview:m_searchBar];
    
    return searchViewBg;
    
    
}
-(void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText
{
    searchBar.showsCancelButton=YES;
    [searchBar becomeFirstResponder];
    
}
- (void)searchBarTextDidBeginEditing:(UISearchBar *)searchBar
{
    searchBar.showsCancelButton=YES;
    [searchBar becomeFirstResponder];

}
- (void)searchBarCancelButtonClicked:(UISearchBar *)searchBar
{
    searchBar.showsCancelButton=NO;
    [searchBar resignFirstResponder];
    searchBar.text=nil;
}
-(void)searchBarSearchButtonClicked:(UISearchBar *)searchBar
{
    
    searchBar.showsCancelButton=NO;
    [searchBar resignFirstResponder];

    if (!IsStringEmptyOrNull(searchBar.text)) {
        self.userIsSearchCityFreeInfoBool = YES;
        
        if (self.userSearchInformationString ) {
            self.userSearchInformationString = nil;
        }
        self.userSearchInformationString = [[NSString alloc]initWithFormat:@"%@",searchBar.text];
        
        Log(@"你可以搜送请求了。。");
        
        //停掉当前未完成的请求操作
        [self.requestInformation cancel];
        //清空当前数据源中所有数据
        [self.dataSource cleanAllData];
        [self.tableView reloadData];
        [self initWithTableviewDataSourceForUserSearchKeyString];
    }
    
    [self endEditing:YES];

    
}
@end
