//
//  CreateFriendCircleController.m
//  fmapp
//
//  Created by 张利广 on 14-11-1.
//  Copyright (c) 2014年 yk. All rights reserved.
//


#define KCellFCircleNameLabelTag        170111
#define KCellFCircleUsersCountLabelTag  170112
#import "CreateFriendCircleController.h"
#import "FriendCircPostsViewController.h"
#import "CurrentUserInformation.h"
#import "FMSettings.h"
#import "HTTPClient+Friends.h"
#import "HTTPClient.h"

@interface CreateFriendCircleController ()<UITableViewDataSource,UITableViewDelegate,UITextFieldDelegate>
@property (nonatomic , weak)        UITextField         *userFCircleNameTextField;
@property (nonatomic , strong)      DataPage            *dataSource;
@property (nonatomic , weak)        UITableView         *tableView;
@property (nonatomic , strong)      AFHTTPRequestOperation      *requestOperation;
@property (nonatomic , strong)      FriendCircleModel   *userEditFCircleInfor;
///判断用户是否选择了Cell数据
///@See 若userSelectedCellBool = YES，则表明加入到某个圈子，若userSelectedCellBool = No， 则表示创建一个圈子
@property (nonatomic , assign)      BOOL                userSelectedCellBool;
@property (nonatomic , assign)      CreateFriendCircleStyle userCreateFCStyle;
@property (nonatomic , strong)      FriendCircleModel   *userCurrFCircleModel;
@property (nonatomic,copy)          NSString            *circleName;
@property (nonatomic,copy)          NSString            *circleId;

///初始化创建圈子界面框架
- (void)initWithFriendCircleFrame;
///初始化用户提交创建圈子信息内容
- (void)initWithUserSubmitButtonEvent;

- (void)initWithFriendCircleListArray;

- (void)friendCircleNameTextFieldChanged:(NSNotification *)notification;

- (void)leftBackBarButtonEvent;
@end

@implementation CreateFriendCircleController

- (id)init{
    self = [super init];
    if (self) {
        // Custom initialization
        self.enableCustomNavbarBackButton = FALSE;
        self.userCreateFCStyle = CreateFriendCircleFirstStyle;
        self.dataSource = [DataPage page];
    }
    return self;
}

- (id)initWithCreateFriendCircleStyle:(CreateFriendCircleStyle)fcStyle withCurrFC:(FriendCircleModel *)currFCModel{
    self = [super init];
    if (self) {
        // Custom initialization
        self.enableCustomNavbarBackButton = FALSE;
        self.userCreateFCStyle = fcStyle;
        self.userCurrFCircleModel = currFCModel;
        self.dataSource = [DataPage page];
    }
    return self;
}
- (id)initWithCreateCircleWithCircleName:(NSString *)circleName AndWithCircleId:(NSString *)circleId
{
    self = [super init];
    if (self) {
        // Custom initialization
        self.enableCustomNavbarBackButton = FALSE;
        self.userCreateFCStyle = CreateFriendCircleFirstStyle;
        self.dataSource = [DataPage page];
        self.circleName=circleName;
        self.circleId=circleId;
        
        
    }
    return self;
 
}
- (void)loadView{
    self.view = [[UIView alloc] initWithFrame:HUIApplicationFrame()];
    self.view.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
    self.view.backgroundColor = KDefaultOrNightScrollViewColor;
}
- (void)viewDidLoad
{
    
    [super viewDidLoad];
    [self settingNavTitle:@"创建圈子"];
    [self setRightNavButtonFA:FMIconSubmitSend withFrame:kNavButtonRect actionTarget:self action:@selector(initWithUserSubmitButtonEvent)];
    
    [self setLeftNavButtonFA:FMIconLeftArrow withFrame:kNavButtonRect actionTarget:self action:@selector(leftBackBarButtonEvent)];
    
    [self initWithFriendCircleFrame];
    
    //监测输入文本变化
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(friendCircleNameTextFieldChanged:)
                                                 name:UITextFieldTextDidChangeNotification object:nil];
    // Do any additional setup after loading the view.
}
- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)viewDidUnload{
    [self.dataSource cleanAllData];
    [self.tableView setDelegate:Nil];
    [self.tableView setDataSource:Nil];
    [self.requestOperation cancel];
}
- (void)leftBackBarButtonEvent{
    NSArray *controllerArray = [self.navigationController viewControllers];
    
    if (controllerArray.count > 2) {
        [self.navigationController popToViewController:(UIViewController *)[controllerArray objectAtIndex:0] animated:YES];
    }else{
        [self.navigationController popViewControllerAnimated:YES];
    }
    
}
- (void)initWithFriendCircleFrame{
    
    self.userSelectedCellBool = NO;
    self.userEditFCircleInfor = [[FriendCircleModel alloc]init];
    [self.userEditFCircleInfor setFriendCirCreateUserId:[CurrentUserInformation sharedCurrentUserInfo].userID];
    
    UILabel *topLabel=[[UILabel alloc]initWithFrame:CGRectMake(0, 20, KProjectScreenWidth, 20)];
    topLabel.backgroundColor=[UIColor clearColor];
    topLabel.text=@"圈子是一个主题下";
    topLabel.textColor=KSubTitleContentTextColor;
    topLabel.font=[UIFont systemFontOfSize:15];
    topLabel.textAlignment=NSTextAlignmentCenter;
    [self.view addSubview:topLabel];
    
    UILabel *topnextLabel=[[UILabel alloc]initWithFrame:CGRectMake(0, 40, KProjectScreenWidth, 20)];
    topnextLabel.backgroundColor=[UIColor clearColor];
    topnextLabel.text=@"一起记录与分享的私密空间";
    topnextLabel.textColor=KSubTitleContentTextColor;
    topnextLabel.font=[UIFont systemFontOfSize:15];
    topnextLabel.textAlignment=NSTextAlignmentCenter;
    [self.view addSubview:topnextLabel];
  
    
    //手机号/用户名
    UIView *fCircleNameBgView = [[UIView alloc] initWithFrame:CGRectMake(0.0f, 70.0f, KProjectScreenWidth, 52.0f)];
    if (ThemeCategory==5) {
        fCircleNameBgView.alpha=0.7;
    }
    fCircleNameBgView.backgroundColor = [UIColor whiteColor];
    fCircleNameBgView.layer.borderWidth = 0.5f;
    fCircleNameBgView.layer.borderColor = [KBorderColorSetup CGColor];
    fCircleNameBgView.layer.cornerRadius = 4.0f;
    
    ////文本框
    UITextField *fCircleNameTextField = [[UITextField alloc] initWithFrame:CGRectMake(10.0f,
                                                                                      1.0f,
                                                                                      KProjectScreenWidth-30,
                                                                                      50.0f)];
    [fCircleNameTextField setDelegate:self];
    [fCircleNameTextField setContentVerticalAlignment:UIControlContentVerticalAlignmentCenter];
    [fCircleNameTextField setClearButtonMode:UITextFieldViewModeWhileEditing];
    [fCircleNameTextField setReturnKeyType:UIReturnKeyDone];
    [fCircleNameTextField setFont:[UIFont systemFontOfSize:18.0f]];
    [fCircleNameTextField setTextColor:KContentTextColor];
    [fCircleNameTextField setPlaceholder:@"圈子主题（8个字以内）"];
    [fCircleNameTextField setText:@""];
    [fCircleNameTextField becomeFirstResponder];
    [fCircleNameBgView  addSubview:fCircleNameTextField];
    self.userFCircleNameTextField = fCircleNameTextField;
    
    self.userFCircleNameTextField.text=self.circleName;
    
    [self.view addSubview:fCircleNameBgView];
    
    UILabel *footerLabel = [[UILabel alloc]init];
    [footerLabel setFrame:CGRectMake(20.0f, 125.0f, KProjectScreenWidth-40, 40.0f)];
    [footerLabel setBackgroundColor:[UIColor clearColor]];
    [footerLabel setText:@"圈子名称可以为你的爱车品牌、兴趣爱好，也可以为你的当前情绪状态，或者其它任何事情。"];
    [footerLabel setTextAlignment:NSTextAlignmentCenter];
    [footerLabel setTextColor:KSubTitleContentTextColor];
    footerLabel.font = [UIFont systemFontOfSize:14.0f];
    footerLabel.numberOfLines=2;
//    [self.view addSubview:footerLabel];
    
    UITableView *tbview = [[UITableView alloc]initWithFrame:self.view.bounds style:UITableViewStylePlain];
    tbview.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
    [tbview setFrame:CGRectMake(0.0f, 122.0f, KProjectScreenWidth, self.view.bounds.size.height- 62.0f)];
    tbview.separatorStyle = UITableViewCellSeparatorStyleNone;
    tbview.backgroundColor = [UIColor clearColor];
    tbview.dataSource = self;
    tbview.delegate = self;
    
    
    [self.view addSubview:tbview];
    self.tableView = tbview;
    [self.tableView setHidden:YES];
}
- (void)loadMoreListData{
    [self initWithFriendCircleListArray];
}

- (void)userJoinSomeOneFCircleRequestOperation{
    
    __weak __typeof(&*self)weakSelf = self;
    WaittingMBProgressHUD(HUIKeyWindow, @"正在加入...");
    [FMHTTPClient getFriendCircleJoinThisCircleWith:[CurrentUserInformation sharedCurrentUserInfo].userID withCircleId:self.userEditFCircleInfor.friendCirId withcompletion:^(WebAPIResponse *response) {
        Log(@"response.responseObject is %@",response.responseObject);
  
        dispatch_async(dispatch_get_main_queue(), ^(void){
            
            if(response.code == WebAPIResponseCodeSuccess){
                FinishMBProgressHUD(HUIKeyWindow);
                
                [FMShareSetting setAppUserFriendCirclePushLatestId:weakSelf.userEditFCircleInfor.friendCirId];
                [FMShareSetting setAppUserFriendCircleCountMemberInteger:weakSelf.userEditFCircleInfor.friendCirCurrentUsersCount];
                [FMShareSetting setAppUserFriendCirclePushLatesQuestionID:@"0"];
                [FMShareSetting setAppUserFriendCircleHasNORead:NO];
                
                MessageCellData *modelData = [[MessageCellData alloc]init];
                [modelData setUserId:@"-5"];
                [modelData setUserName:weakSelf.userFCircleNameTextField.text];
                [modelData setLastContent:@"里面还没有聊天内容"];
                [modelData setCellType:ImForFriendCircleType];
                [modelData setUnreadMsgCount:0];
                [modelData setUnReadFlag:0];
                NSTimeInterval time = [[NSDate date] timeIntervalSince1970];
                NSDate *systemNSData = [[NSDate alloc]init];    //格式化时间戳
                NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];
                [dateFormatter setDateFormat:@"MM-dd HH:mm"];
                [modelData setMsgCreateDateTime:[dateFormatter stringFromDate:systemNSData]];
                [modelData setMsgTimeStamp:time];
                //设置标签内容
                
                ///进入朋友圈互动界面
                FriendCircPostsViewController *viewController = [[FriendCircPostsViewController alloc]initWithFriendCircleModel:self.userEditFCircleInfor];
                [weakSelf.navigationController pushViewController:viewController animated:YES];
                
                
                ///触发圈子内容通知
                [[NSNotificationCenter defaultCenter] postNotificationName:FMUserChangedFriendCircleNotification
                                                                    object:modelData];
            }
            else if (response.code == WebAPIResponseCodeFailed) {
                
                FailedMBProgressHUD(HUIKeyWindow, StringForKeyInUnserializedJSONDic(response.responseObject, @"msg"));
            }else if (response.code ==WebAPIResponseCodeNetError){
                FailedMBProgressHUD(HUIKeyWindow, @"网络错误");
            }
            
            else{
                FailedMBProgressHUD(HUIKeyWindow, @"创建失败");
            }
            
        });
    }];
}
- (void)userCreateOneFCircleRequestOperation{
    __weak __typeof(&*self)weakSelf = self;
    FriendCircleModel *model = [[FriendCircleModel alloc]init];
    [model setFriendCirCreateUserId:[CurrentUserInformation sharedCurrentUserInfo].userID];
    [model setFriendCirName:self.userFCircleNameTextField.text];
    WaittingMBProgressHUD(HUIKeyWindow, @"正在创建...");
    [FMHTTPClient getFriendCircleCreateInforWith:model withcompletion:^(WebAPIResponse *response) {
        dispatch_async(dispatch_get_main_queue(), ^(void){
            
            if(response.code == WebAPIResponseCodeSuccess){
                
                FinishMBProgressHUD(HUIKeyWindow);
                
                NSString *friendCirId = StringForKeyInUnserializedJSONDic(response.responseObject, kDataKeyData);
                
                if (!IsStringEmptyOrNull(friendCirId)) {
                    [FMShareSetting setAppUserFriendCirclePushLatestId:friendCirId];
                    [FMShareSetting setAppUserFriendCircleCountMemberInteger:1];
                }
                [weakSelf.userEditFCircleInfor setFriendCirId:friendCirId];
                [weakSelf.userEditFCircleInfor setFriendCirName:self.userFCircleNameTextField.text];
                [weakSelf.userEditFCircleInfor setFriendCirCurrentUsersCount:1];
                [FMShareSetting setAppUserFriendCirclePushLatesQuestionID:@"0"];
                [FMShareSetting setAppUserFriendCircleHasNORead:NO];
                
                
                MessageCellData *modelData = [[MessageCellData alloc]init];
                [modelData setUserId:@"-5"];
                [modelData setUserName:weakSelf.userFCircleNameTextField.text];
                [modelData setLastContent:@"里面还没有聊天内容"];
                [modelData setCellType:ImForFriendCircleType];
                NSTimeInterval time = [[NSDate date] timeIntervalSince1970];
                NSDate *systemNSData = [[NSDate alloc]init];    //格式化时间戳
                NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];
                [dateFormatter setDateFormat:@"MM-dd HH:mm"];
                [modelData setMsgCreateDateTime:[dateFormatter stringFromDate:systemNSData]];
                [modelData setMsgTimeStamp:time];
                ///进入朋友圈互动界面
                FriendCircPostsViewController *viewController = [[FriendCircPostsViewController alloc]initWithFriendCircleModel:weakSelf.userEditFCircleInfor];
                [weakSelf.navigationController pushViewController:viewController animated:YES];
                
                ///触发圈子内容通知
                [[NSNotificationCenter defaultCenter] postNotificationName:FMUserChangedFriendCircleNotification object:modelData];
            }else if (response.code == WebAPIResponseCodeFailed) {
                
                //                NSString
                FailedMBProgressHUD(HUIKeyWindow, StringForKeyInUnserializedJSONDic(response.responseObject, @"msg"));
            }
            else if (response.code ==WebAPIResponseCodeNetError){
                FailedMBProgressHUD(HUIKeyWindow, @"网络错误");
            }
            
            else{
                FailedMBProgressHUD(HUIKeyWindow, @"创建失败");
            }
        });
    }];
}
- (void)initWithUserSubmitButtonEvent{
    
    [self.view endEditing:YES];
    if (IsStringEmptyOrNull(self.userFCircleNameTextField.text)) {
        ShowImportErrorAlertView(@"圈子名不能为空");
        return;
    }
    
    if ([self countOfUsername:self.userFCircleNameTextField.text] >= 17) {
        
        ShowImportErrorAlertView(@"圈子名不能大于8个字");
        return;
    }
    
    ///首次使用圈子功能，则无需退出操作
    if (self.userCreateFCStyle == CreateFriendCircleFirstStyle) {
        
        //若userSelectedCellBool = YES，则表明加入到某个圈子，
        if ([self.userFCircleNameTextField.text isEqualToString:self.circleName]) {
            self.userSelectedCellBool = YES;
            self.userEditFCircleInfor.friendCirId=self.circleId;
            self.userEditFCircleInfor.friendCirName=self.circleName;
        }
        
        if (self.userSelectedCellBool == YES) {
            
            [self userJoinSomeOneFCircleRequestOperation];
        }
        //若userSelectedCellBool = No， 则表示创建一个圈子
        else{
            [self userCreateOneFCircleRequestOperation];
        }
    }
    else if (self.userCreateFCStyle == CreateFriendCircleSecondStyle){
        
        //若userSelectedCellBool = YES，则表明加入到某个圈子，
        if (self.userSelectedCellBool == YES) {
            [self userJoinSomeOneFCircleRequestOperation];
        }
        //若userSelectedCellBool = No， 则表示创建一个圈子
        else{
            [self userCreateOneFCircleRequestOperation];
        }
    }
}
///用户退出圈子
- (void)userSignoutFriendCircle{
    __weak __typeof(&*self)weakSelf = self;
    WaittingMBProgressHUD(HUIKeyWindow, @"正在切换...");
    [FMHTTPClient getFriendCircleLogoutThisCircleWith:[CurrentUserInformation sharedCurrentUserInfo].userID withCircleId:self.userCurrFCircleModel.friendCirId withcompletion:^(WebAPIResponse *response) {
        dispatch_async(dispatch_get_main_queue(), ^(void){
            
            if(response.code == WebAPIResponseCodeSuccess){
                
                //若userSelectedCellBool = YES，则表明加入到某个圈子，
                if (weakSelf.userSelectedCellBool == YES) {
                    [weakSelf userJoinSomeOneFCircleRequestOperation];
                }
                //若userSelectedCellBool = No， 则表示创建一个圈子
                else{
                    [weakSelf userCreateOneFCircleRequestOperation];
                }
                
            }else{
                FinishMBProgressHUD(HUIKeyWindow);
                ShowImportErrorAlertView(@"切换失败，请稍后重试...");
            }
        });
    }];
}

- (void)initWithFriendCircleListArray{
    
    __weak __typeof(&*self)weakSelf = self;
    self.requestOperation = [FMHTTPClient getFriendCircleInforWithFriCirName:self.userFCircleNameTextField.text withPage:[self.dataSource nextPageIndex] withcompletion:^(WebAPIResponse *response) {
        dispatch_async(dispatch_get_main_queue(), ^(void){
            
            //关掉PullToRefreshView
            if (weakSelf.tableView.pullToRefreshView.state == SVPullToRefreshStateLoading)
            {
                UpdateLastRefreshDataForPullToRefreshViewOnView([weakSelf tableView]);
                [weakSelf.tableView.pullToRefreshView stopAnimating];
            }
            
            if(response.code == WebAPIResponseCodeSuccess){
                
                //车友信息
                NSArray* dataList = [response.responseObject objectForKey:kDataKeyData];
                
                NSMutableArray* userList = [NSMutableArray array];
                for (NSDictionary* dic in dataList) {
                    FriendCircleModel *itemObject = [FriendCircleModel initWithFriendCircleModelWithUnserializedJSONDic:dic];
                    [userList addObject:itemObject];
                }
                [weakSelf.dataSource appendPage:userList];
                //页数
                weakSelf.dataSource.pageCount = IntForKeyInUnserializedJSONDic(response.responseObject,kDataKeyPageCount);
                [weakSelf.tableView setHidden:NO];
                [weakSelf.tableView reloadData];
            }
        });
    }];
}


- (BOOL)_isLoadMoreCellAtIndexPath:(NSIndexPath *)indexPath
{
    return (indexPath.row == [self.dataSource count]);
}


#pragma mark - UITableViewDataSource
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if([self _isLoadMoreCellAtIndexPath:indexPath])
        return kSizeLoadMoreCellHeight;
    if (indexPath.row < [self.dataSource.data count]) {
        return 47.0;
    }
    return 47.0;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [self.dataSource count] ; //添加一行显示“正在加载”或“加载完毕”;
}

- (UITableViewCell *)createCellWithIdentifier:(NSString *)cellIdentifier
{
    if ([cellIdentifier isEqualToString:kHUILoadMoreCellIdentifier])
    {
        return CreateLoadMoreCell();
        
    }
    UITableViewCell *cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellIdentifier];
    cell.contentView.backgroundColor = KDefaultOrNightBackGroundColor;
    cell.backgroundColor = KDefaultOrNightBackGroundColor;
    
    //设置选中Cell后的背景图
    UIView *selectedView = [[UIView alloc] initWithFrame:cell.bounds];
    [selectedView setBackgroundColor:[FMThemeManager.skin buttonHighlightColor]];
    cell.selectedBackgroundView = selectedView;
    
    
    //用户名
    UILabel *nameLabel = [[UILabel alloc] init];
    
    nameLabel.frame = CGRectMake(25, 12, KProjectScreenWidth/3, 23);
    nameLabel.tag = KCellFCircleNameLabelTag;
    nameLabel.font = [UIFont systemFontOfSize:15.0f];
    nameLabel.textColor = [FMThemeManager.skin textColor];
    nameLabel.backgroundColor = [UIColor clearColor];
    [cell.contentView addSubview:nameLabel];
    
    //右侧Label
    UILabel *signatureLabel = [[UILabel alloc] initWithFrame:CGRectMake(KProjectScreenWidth - 120.0f, 2.0f,105, 38)];
    signatureLabel.tag = KCellFCircleUsersCountLabelTag;
    signatureLabel.textAlignment = UITextAlignmentRight;
    signatureLabel.font = [UIFont systemFontOfSize:12.0f];
    signatureLabel.textColor = KSubTitleContentTextColor;
    [cell addSubview:signatureLabel];
    
    //添加分隔线
    UIView *underLineSeparatorView = [[UIView alloc] initWithFrame:CGRectMake(17.0f, 46.5, (KProjectScreenWidth - 17.0f), 0.5f)];
    underLineSeparatorView.backgroundColor = [FMThemeManager.skin sepratorColor];
    [cell.contentView addSubview:underLineSeparatorView];
    return cell;
}


- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    static NSString *cellKeyString = nil;
    if (indexPath.row < [self.dataSource count]) {
        cellKeyString = @"FriendCircleCell";
    }else{
        cellKeyString = kHUILoadMoreCellIdentifier;
    }
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellKeyString];
    
    if (!cell) {
        cell = [self createCellWithIdentifier:(NSString *)cellKeyString];
    }
    
    if (indexPath.row >= [self.dataSource count]) {
        if ([self.dataSource canLoadMore])
        {
            __weak __typeof(&*self)weakSelf = self;
            [(HUILoadMoreCell*)cell setLoadMoreOperationDidStartedBlock:^{
                [weakSelf loadMoreListData];
            }];
            cell.textLabel.text = LOADMORE_LOADING;
            [(HUILoadMoreCell*)cell startLoadMore];
        }else{
            if (tableView.pullToRefreshView.state == SVPullToRefreshStateLoading) {
                cell.textLabel.text = LOADMORE_LOADING;
            }else{
                cell.textLabel.text = LOADMORE_LOADOVER;
            }
        }
        
    }else{
        
        FriendCircleModel *itemObject = (FriendCircleModel *)[self.dataSource.data objectAtIndex:indexPath.row];
        
        ///圈子名内容信息
        UILabel *nameLabel  = (UILabel *)[cell.contentView viewWithTag:KCellFCircleNameLabelTag];
        if (!IsStringEmptyOrNull(itemObject.friendCirName)) {
            [nameLabel setText:itemObject.friendCirName];
        }
        
        ///圈子人数内容内容信息
        UILabel *createTimeLabel = (UILabel *)[cell viewWithTag:KCellFCircleUsersCountLabelTag];
        [createTimeLabel setText:[NSString stringWithFormat:@"%d人",itemObject.friendCirCurrentUsersCount]];
    }
    
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    if ([self _isLoadMoreCellAtIndexPath:indexPath]){
        return;
    }
    [tableView deselectRowAtIndexPath:indexPath animated:NO];
    
    FriendCircleModel *fCircleModel = (FriendCircleModel *)[self.dataSource.data objectAtIndex:indexPath.row];
    [self.userFCircleNameTextField setText:fCircleModel.friendCirName];
    [self.userEditFCircleInfor setFriendCirName: self.userFCircleNameTextField.text];
    [self.userEditFCircleInfor setFriendCirId:fCircleModel.friendCirId];
    
    [self.tableView setHidden:YES];
    self.userSelectedCellBool = YES;
}
- (void)scrollViewDidScroll:(UIScrollView *)scrollView{
    
    [self.view endEditing:YES];
}

#pragma mark - 判断字符数
-(NSInteger) countOfUsername:(NSString *)userName
{
    int i,count = [userName length],chinese = 0,ascii = 0;unichar cha;
    for(i = 0;i < count;i++){
        cha=[userName characterAtIndex:i];
        if(isascii(cha)){
            ascii++;
        }else{
            chinese += 2;
        }
    }
    if(ascii == 0 && chinese == 0){
        return 0;
    }
    return chinese+ascii;
}


- (BOOL)textFieldShouldClear:(UITextField *)textField{
    return YES;
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField{
    
    [self initWithUserSubmitButtonEvent];
    return YES;
}

- (void)friendCircleNameTextFieldChanged:(NSNotification *)notification{
    
    if (IsStringEmptyOrNull(self.userFCircleNameTextField.text) || [self.userFCircleNameTextField.text length] <= 0) {
        [self.tableView setHidden:YES];
        return;
    }
    if ([self countOfUsername:self.userFCircleNameTextField.text] > 16) {
        [self.tableView setHidden:YES];
        return;
    }
    [self.tableView setHidden:NO];
    self.userSelectedCellBool = NO;
    [self.dataSource cleanAllData];
    [self.requestOperation cancel];
    [self initWithFriendCircleListArray];
}

@end
