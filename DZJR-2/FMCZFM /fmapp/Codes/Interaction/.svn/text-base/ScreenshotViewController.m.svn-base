//
//  KKNewViewController.m
//  ScreenshotDemo
//
//  Created by MacZS on 14/8/19.
//  Copyright (c) 2014年 WWK. All rights reserved.
//

#import "ScreenshotViewController.h"
#import "UIImage+Screenshot.h"
#import "ACEDrawingView.h"
#import <QuartzCore/QuartzCore.h>
#import "PublishQuestionViewController.h"
#import "SliderViewController.h"

//分享
#import <AGCommon/UINavigationBar+Common.h>
#import <AGCommon/UIImage+Common.h>
#import <AGCommon/UIDevice+Common.h>
#import <ShareSDK/ShareSDK.h>
#import <AGCommon/NSString+Common.h>

#define kScreenWidth            [UIScreen mainScreen].bounds.size.width
#define kScreenHeight           [UIScreen mainScreen].bounds.size.height
#define kButtonWidth            49          // Button宽高
#define kButtonBaseTag          10000
#define kDifference             ([UIScreen mainScreen].bounds.size.width-49*5)/6  // Button之间间距
#define kSliderWidth            [UIScreen mainScreen].bounds.size.width-18*2
#define kSliderHeight           23
#define kSpaceWidth             18          // Slider两端与屏幕的间距
#define kNavigationBarHeight    44
#define kStatusHeight           20

#define kSliderMaxValue         5.0f
#define kSliderMinValue         1.0f

#define kActionSheetColor       100
#define kActionSheetTool        101

@interface ScreenshotViewController ()<UIActionSheetDelegate, ACEDrawingViewDelegate>
@property (strong, nonatomic) ACEDrawingView        *drawingView;
@property (strong, nonatomic) UISlider              *lineWidthSlider;
@property (strong, nonatomic) UIImageView           *imageView;
@property (strong, nonatomic) UIImage               *resultImage;
@property (nonatomic,assign)  BOOL                  shotForYesOrNO;

@end

@implementation ScreenshotViewController


- (void)loadView{
    self.view = [[UIView alloc] initWithFrame:HUIApplicationFrame()];
    self.view.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
    self.view.backgroundColor = KDefaultOrNightScrollViewColor;
}

- (id)init{
    self = [super init];
    if (self) {
        self.enableCustomNavbarBackButton = FALSE;
//        [SliderViewController sharedSliderController].canShowLeft=NO;
        self.shotForYesOrNO=YES;

    }
    return self;
}


- (void)viewWillAppear:(BOOL)animated{
    
    if (self.shotForYesOrNO) {
        // 截图得到的图片
        UIImage *screenShotImage = [UIImage screenshot];
        self.imageView.image = screenShotImage;
        self.imageView.userInteractionEnabled = YES;
        self.shotForYesOrNO=NO;

    }
}

- (void)viewDidLoad
{
    [super viewDidLoad];
	// Do any additional setup after loading the view.
    [self settingNavTitle:@"创意截屏"];
    [self settingNavigationBarItem];
    self.navButtonSize=KNavSize;
    //取消
    [self setLeftNavButtonFA:FMIconCancelCross
                   withFrame:kNavButtonRect
                actionTarget:self
                      action:@selector(navigationBarCancelItemClicked:)];


    // 画板，涂鸦在上面操作
    self.drawingView = [[ACEDrawingView alloc]
                        initWithFrame:CGRectMake(0, 0, kScreenWidth-120, kScreenHeight*0.65)];
    self.drawingView.delegate = self;
    self.drawingView.lineColor = [UIColor redColor];
    
    
    // 初始化
    self.resultImage = [[UIImage alloc] init];
    // 加载截图的ImageView
    self.imageView = [[UIImageView alloc] initWithFrame:CGRectMake(60, 30, kScreenWidth-120, kScreenHeight*0.625)];
    [self.imageView addSubview:self.drawingView];
    [self.view addSubview:self.imageView];
    
    
    // 粗细选择Slider
    self.lineWidthSlider = [[UISlider alloc]
                            initWithFrame:CGRectMake(kSpaceWidth, kScreenHeight-113 -30, kSliderWidth, kSliderHeight)];
    self.lineWidthSlider.maximumValue = kSliderMaxValue;
    self.lineWidthSlider.minimumValue = kSliderMinValue;
    self.lineWidthSlider.value = kSliderMaxValue;
    self.lineWidthSlider.hidden = YES;
    [self.lineWidthSlider addTarget:self
                             action:@selector(widthChange:)
                   forControlEvents:UIControlEventValueChanged];
    [self.view addSubview:self.lineWidthSlider];
    self.lineWidthSlider.value = self.drawingView.lineWidth;
    
    
    // 初始化底部按钮导航栏
    [self initBottomView];
    
    
    //重新获取路况通知
    [[NSNotificationCenter defaultCenter] addObserver: self
                                             selector: @selector(initWithUserFinshScreenshot:)
                                                 name: @"UserGOBackScreenShotView"
                                               object: nil];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


- (void) settingNavigationBarItem
{
    self.navButtonSize = KNavSize;
    ///设置分享
    [self setRightNavButtonFA:FMIconShare
                    withFrame:kNavButtonRect
                 actionTarget:self
                       action:@selector(setRightShareButtonEvent)];
}

- (void)setRightShareButtonEvent{
    //    else if (itemButton.tag == kRightItemButtonTag) {
    //TODO: 1.构造一个Container（iPhone可省略）
    id<ISSContainer> container = [ShareSDK container];
    [container setIPhoneContainerWithViewController:self];
    
    //TODO: 3.使用customShareList构造shareList，项目的顺序也会反映在菜单顺序之中
    NSArray *shareList = [ShareSDK customShareListWithType:
                          SHARE_TYPE_NUMBER(ShareTypeSinaWeibo),
                          SHARE_TYPE_NUMBER(ShareTypeWeixiSession),
                          SHARE_TYPE_NUMBER(ShareTypeWeixiTimeline),
                          SHARE_TYPE_NUMBER(ShareTypeSMS),
                          SHARE_TYPE_NUMBER(ShareTypeMail),
                          SHARE_TYPE_NUMBER(ShareTypeCopy),
                          nil];
    
    
    id<ISSContent> publishContent = nil;
    
    NSString *urlString = [NSString stringWithFormat:@"%@",@"分享的内容啊"];
    NSString *titleString = nil;
    NSString *contentString = nil;
    NSString *description = nil;
    
    

    self.resultImage = [self onScreenShotImage:self.imageView.image addDrawingImage:self.drawingView.image];
    NSData *imageData = UIImagePNGRepresentation(self.resultImage);
    
    NSData *contentImageData = [[NSData alloc] initWithBytes:[imageData bytes] length:imageData.length];
//    id<ISSCAttachment> attachment = [ShareSDK attachmentWithData:contentImageData mimeType:@"" fileName:@"1031.jpg"];
    NSString *fileName=[NSString stringWithFormat:@"%@.jpg",KProjectRadioFMNumber];
    id<ISSCAttachment> attachment = [ShareSDK attachmentWithData:contentImageData mimeType:@"" fileName:fileName];


    publishContent = [ShareSDK content:contentString
                        defaultContent:@""
                                 image:attachment
                                 title:titleString
                                   url:urlString
                           description:description
                             mediaType:SSPublishContentMediaTypeImage];
    
    
    id<ISSShareOptions> shareOptions =
    [ShareSDK simpleShareOptionsWithTitle:@"分享内容"
                        shareViewDelegate:nil];
    
    //TODO: 4.将container（iPhone上可为nil）和shareList传入 showShareActionSheet 方法
    [ShareSDK showShareActionSheet:container
                         shareList:shareList
                           content:publishContent
                     statusBarTips:NO
                       authOptions:nil
                      shareOptions:shareOptions
                            result:nil];
}

- (void) navigationBarItemClicked:(id) sender
{
    [self dismissModalViewControllerAnimated:YES];
}

// 初始化底部按钮导航栏
- (void)initBottomView
{
    UIView *bottomView = [[UIView alloc] initWithFrame:CGRectMake(0, kScreenHeight-113, kScreenWidth, 49)];
    bottomView.backgroundColor = KDefaultOrNightBackGroundColor;
    [self.view addSubview:bottomView];
    
    NSArray *buttonName = [[NSArray alloc] initWithObjects:@"ScreenshotFont.png",
                           @"ScreenshotColor.png",
                           @"ScreenshotDraw.png",
                           @"ScreenshotCancel.png",
                           @"ScreenshotFinish.png", nil];
    
    // 五个按钮
    for (int i=0; i<5; i++) {
        UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
        button.frame = CGRectMake(kDifference*(i+1)+kButtonWidth*i, 0, kButtonWidth, kButtonWidth);
        button.tag = kButtonBaseTag+i;
        
        [button setImage:[UIImage imageNamed:[NSString stringWithFormat:@"%@", [buttonName objectAtIndex:i]]] forState:UIControlStateNormal];
        
        [button addTarget:self action:@selector(buttonClick:) forControlEvents:UIControlEventTouchUpInside];
        if (ThemeCategory==5) {
            button.alpha=0.7;
        }
        [bottomView addSubview:button];
    }
}


#pragma mark -
#pragma mark - Slider Methods
- (void)widthChange:(UISlider *)sender
{
    self.drawingView.lineWidth = sender.value;
}

#pragma mark -
#pragma mark - ActionSheet Delegate Methods
- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (actionSheet.cancelButtonIndex != buttonIndex) {
        // 颜色选择
        if (actionSheet.tag == kActionSheetColor) {
            switch (buttonIndex) {
                case 0:
                    self.drawingView.lineColor = [UIColor blackColor];
                    break;
                    
                case 1:
                    self.drawingView.lineColor = [UIColor redColor];
                    break;
                    
                case 2:
                    self.drawingView.lineColor = [UIColor greenColor];
                    break;
                    
                case 3:
                    self.drawingView.lineColor = [UIColor blueColor];
                    break;
            }
            
        }
        // 绘图工具选择
        else {
            switch (buttonIndex) {
                case 0:
                    self.drawingView.drawTool = ACEDrawingToolTypePen;
                    break;
                    
                case 1:
                    self.drawingView.drawTool = ACEDrawingToolTypeLine;
                    break;
                    
                case 2:
                    self.drawingView.drawTool = ACEDrawingToolTypeRectagleStroke;
                    break;
                    
                case 3:
                    self.drawingView.drawTool = ACEDrawingToolTypeEllipseStroke;
                    break;
            }
        }
    }
}



#pragma mark -
#pragma mark - Button Clicked Methods
- (void)buttonClick:(UIButton *)btn
{
    // 线条粗细设置
    if (btn.tag == kButtonBaseTag+0) {
        self.lineWidthSlider.hidden = !self.lineWidthSlider.hidden;
    }
    // 颜色选择
    else if (btn.tag == kButtonBaseTag+1) {
        UIActionSheet *actionSheet = [[UIActionSheet alloc] initWithTitle:@"请选择颜色"
                                                                 delegate:self
                                                        cancelButtonTitle:@"取消"
                                                   destructiveButtonTitle:nil
                                                        otherButtonTitles:@"黑色", @"红色",
                                      @"绿色", @"蓝色", nil];
        
        [actionSheet setTag:kActionSheetColor];
        [actionSheet showInView:self.view];
    }
    // 形状选择
    else if (btn.tag == kButtonBaseTag+2) {
        UIActionSheet *actionSheet = [[UIActionSheet alloc] initWithTitle:@"请选择形状"
                                                                 delegate:self
                                                        cancelButtonTitle:@"取消"
                                                   destructiveButtonTitle:nil
                                                        otherButtonTitles:@"任意线条", @"直线",
                                      @"矩形", @"椭圆", nil];
        
        [actionSheet setTag:kActionSheetTool];
        [actionSheet showInView:self.view];
    }
    // 撤销操作(全部撤销)
    else if (btn.tag == kButtonBaseTag+3) {
        [self.drawingView clear];
    }
    // 完成操作，完成后用截图进行互动
    else if (btn.tag == kButtonBaseTag+4) {
        
        self.resultImage = [self onScreenShotImage:self.imageView.image addDrawingImage:self.drawingView.image];
        UIImageView *screenImage = [[UIImageView alloc]initWithImage:self.resultImage];
        UIImageWriteToSavedPhotosAlbum(screenImage.image, self, nil, nil);

        PublishQuestionViewController *publishQuestionController = [[PublishQuestionViewController alloc] initWithPulishQuestionScreenShotImage:screenImage.image];
        FMNavigationController *navController = [[FMNavigationController alloc] initWithRootViewController:publishQuestionController];
        [self presentModalViewController:navController animated:YES];
    }
    
}

// 将self.imageView上的图片与self.drawingView的图片合成到一张图片上
- (UIImage *)onScreenShotImage:(UIImage *)screenShotImage addDrawingImage:(UIImage *)drawingImage
{
    UIGraphicsBeginImageContext(screenShotImage.size);
    [screenShotImage drawInRect:CGRectMake(0, 0, screenShotImage.size.width, screenShotImage.size.height)];
    [drawingImage drawInRect:CGRectMake(0, 0, screenShotImage.size.width, screenShotImage.size.height)];
    UIImage *resultImage = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    return resultImage;
}

- (void)initWithUserFinshScreenshot:(NSNotification *) notification{

    [self.navigationController popViewControllerAnimated:YES];
}
- (void) navigationBarCancelItemClicked:(id) sender
{
    [self dismissModalViewControllerAnimated:YES];
}


@end
