//
//  UserInformationController.m
//  fmapp
//
//  Created by 张利广 on 14-5-21.
//  Copyright (c) 2014年 yk. All rights reserved.
//

#import "UserInformationController.h"
#import "HTTPClient.h"
#import "FMImageView.h"
//#import "f"
#import "GenderViewController.h"
#import "CurrentUserInformation.h"
#import "ShareWebViewController.h"
#import "HTTPClient+MeModulesSetup.h"
#import "UserAudioInfoViewController.h"
#import "UserNameOrSignatureController.h"
#import "PhoneNumberVerificationViewController.h"


#define kUserNameButtonTag 111011                                   //用户个人姓名按键
#define kUserGenderButtonTag 111012                                 //用户个人性别按键
#define kUserMobileButtonTag 111013                                 //用户个人手机号按键
#define kUserSignatureButtonTag 111014                              //用户个人个性签名按键
#define kUserVoiceButtonTag 111015                                  //用户个人语音简介信息按键
#define KUserCameraButtonTag 111020                                 //用户头像操作按键
#define KUserAddPhotoAlertViewTag 111074                            ///用户个人上传头像提示
#define KUserAddPhototActionSheetTag 111032                         ///用户上传头像选择设置
#define kSaveUserInfoAlertViewTag 111034                            //提示用户是否保存信息

@interface UserInformationController ()

///用户编辑协议设置
@property (nonatomic , strong)      id<UserInfoDelegate>            userInforDelegate;

///判断用户本次是否更改个人信息
///@See 默认为NO，即没有编辑；若为YES，则退出该界面时，是否保存信息
@property (nonatomic , assign)      BOOL                            userIsEidtPersonalInfor;

///判断是否编辑了头像信息
///@See 默认为NO， 即没有编辑；若为YES，则需要重新上传个人头像图片
@property (nonatomic , assign)      BOOL                            userIsEidtPhotoInforBool;

///用户个人姓名
@property (nonatomic , weak)        UILabel                         *userPersonalNameLabel;
///用户个人性别
@property (nonatomic , weak)        UILabel                         *userPersonalGenderLabel;
///用户个人手机号
@property (nonatomic , weak)        UILabel                         *userPersonalMobileLabel;
///用户个人个性签名
@property (nonatomic , weak)        UILabel                         *userPersonalSignatureLabel;
///用户个人语音信息
@property (nonatomic , weak)        UILabel                         *userPersonalVoiceLabel;
///用户个人性别编码
@property (nonatomic , assign)      int                             userGenderIntStyle;

@property (nonatomic , strong)      NSString                        *userPersonalPhotoImageStringURL;

@property (nonatomic , weak)        UIImageView                     *cameraButtonImageView;
///用户个人信息参数内容
@property (nonatomic , strong)      NSMutableDictionary             *userPersonalInforDictionary;


- (void)initWithBackButtonEvnet;
/** 初始化用户个人信息内容
 
 *@return void
 **/
- (void) initWithUserPersonalInformation;

/** 初始化保存用户修改后的信息
 
 *@return void
 **/
- (void) initWithSaveUserPersonalInformation;

/** 初始化用户个人信息内容界面控件
 
 *@return void
 **/
- (void) initWithUserInformationControllerFrame;

/** 初始化用户个人信息界面操作按键事件
 
 *@return void
 **/
- (void) initWIthUserOperationButtonEvent:(id)sender;


//- (void)initWithUserPerosnalPhotoImage;

@end

@implementation UserInformationController

- (id)init{
    self = [super init];
    if (self) {
    }
    
    return self;
}

- (void)loadView{
    self.view = [[UIView alloc] initWithFrame:HUIApplicationFrame()];
    self.view.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
    self.view.backgroundColor = KDefaultOrNightScrollViewColor;
}

- (id)initWithUserEditInforDelegate:(id<UserInfoDelegate>)m_userEidtDelegate {
    self = [super init];
    if (self) {
        self.enableCustomNavbarBackButton = NO;
        self.userInforDelegate = m_userEidtDelegate;
    }
    return self;
}

- (void)viewDidLoad
{
    
    [self settingNavTitle:@"个人信息"];
    [self initWithUserInformationControllerFrame];
    [super viewDidLoad];
	// Do any additional setup after loading the view.
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


- (void)viewDidAppear:(BOOL)animated{
    
    [super viewDidAppear:animated];
    //初始化用户个人信息内容
    [self initWithUserPersonalInformation];
}
#pragma mark -
#pragma mark - 初始化用户个人信息内容
- (void)initWithUserPersonalInformation{
    if (!IsNormalMobileNum([CurrentUserInformation sharedCurrentUserInfo].userMobile)) {
        [self.userPersonalMobileLabel setText:@"未绑定"];
    }else{
        [self.userPersonalMobileLabel setText:[CurrentUserInformation sharedCurrentUserInfo].userMobile];
        [self.userPersonalMobileLabel setTextColor:KContentTextCanEditColor];
    }
    self.userPersonalInforDictionary = [[NSMutableDictionary alloc]initWithDictionary:[CurrentUserInformation sharedCurrentUserInfo].userPersonalAudioInforDictionary];
    if (self.userPersonalInforDictionary.count > 0 ) {
        NSString *audioLength = [[NSString alloc]initWithFormat:@"%@",ObjForKeyInUnserializedJSONDic(self.userPersonalInforDictionary, @"voiceLen")];
        if (IsStringEmptyOrNull(audioLength)) {
            [self.userPersonalVoiceLabel setText:@"未录音"];
        }else{
            [self.userPersonalVoiceLabel setText:audioLength];
            [self.userPersonalVoiceLabel setTextColor:KContentTextCanEditColor];
        }
    }
}
#pragma mark -
#pragma mark - 初始化用户个人信息内容界面控件
-(void)initWithUserInformationControllerFrame{
    
    self.userGenderIntStyle = [CurrentUserInformation sharedCurrentUserInfo].userSex;
    self.navButtonSize=KNavSize;
    [self setLeftNavButtonFA:FMIconLeftArrow
                   withFrame:kNavButtonRect
                actionTarget:self
                      action:@selector(initWithBackButtonEvnet)];
    
    self.userIsEidtPersonalInfor = NO;
    self.userIsEidtPhotoInforBool = NO;
    self.userPersonalPhotoImageStringURL = [[NSString alloc]initWithFormat:@"%@",@""];
    
    UIScrollView *mainScrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0.0f, 0.0f,KProjectScreenWidth, 416 + (HUIIsIPhone5() ? 88 : 0))];
    mainScrollView.showsVerticalScrollIndicator = NO;
    mainScrollView.backgroundColor = [UIColor clearColor];
    [mainScrollView setContentSize:CGSizeMake(KProjectScreenWidth, 416 + (HUIIsIPhone5() ? 88 : 0) + 20)];
    
    //一、用户基本信息视图
    UIView *userBasicInfoView = [[UIView alloc] initWithFrame:CGRectMake(0, 10, KProjectScreenWidth, 206.5)];
    userBasicInfoView.layer.borderWidth = 0.5f;
    [userBasicInfoView setBackgroundColor:[UIColor whiteColor]];
    userBasicInfoView.layer.borderColor = [KDefaultOrNightSepratorColor CGColor];
    
    
    ///头像内容
    
    UILabel *headerPiclabel = [[UILabel alloc]initWithFrame:CGRectMake(20.0f, 25.0f, 40.0f, 20.0f)];
    [headerPiclabel setText:@"头像"];
    [headerPiclabel setTextColor:KDefaultOrNightTextColor];
    [headerPiclabel setTextAlignment:NSTextAlignmentLeft];
    [headerPiclabel setBackgroundColor:[UIColor clearColor]];
    [headerPiclabel setFont:[UIFont systemFontOfSize:16.0f]];
    [userBasicInfoView addSubview:headerPiclabel];
    
    
    UIButton    *cameraButton = [[UIButton alloc]init];
    [cameraButton setFrame:CGRectMake(KProjectScreenWidth-30-46, 12.0f, 46.0f, 46.0f)];
    [cameraButton setTag:KUserCameraButtonTag];
    
    UIImageView *cameraButtonImage = [[UIImageView alloc]init];
    [cameraButtonImage setFrame:CGRectMake(0.0f,0.0f, 46.0f, 46.0f)];
    
    [cameraButtonImage setImage:[UIImage imageNamed:@"Me_DefaultCar.png"]];
    self.cameraButtonImageView = cameraButtonImage;
    [cameraButton addSubview:self.cameraButtonImageView];
    [cameraButton addTarget:self action:@selector(initWIthUserOperationButtonEvent:)
           forControlEvents:UIControlEventTouchUpInside];
    [userBasicInfoView addSubview:cameraButton];
    
    ////分割线
    UIView *firstSectionSeperatorView = [[UIView alloc] initWithFrame:CGRectMake(20, 70.0f, KProjectScreenWidth-20, 0.5f)];
    firstSectionSeperatorView.backgroundColor = KDefaultOrNightSepratorColor;
    [userBasicInfoView addSubview:firstSectionSeperatorView];
    
    //1.用户名
    UIButton *userNameButton = [UIButton buttonWithType:UIButtonTypeCustom];
    userNameButton.tag = kUserNameButtonTag;
    userNameButton.frame = CGRectMake(0, 70.5f, KProjectScreenWidth, 45);
    [userNameButton setBackgroundImage:createImageWithColor([UIColor whiteColor])
                              forState:UIControlStateNormal];
    [userNameButton setBackgroundImage:createImageWithColor(KDefaultOrNightButtonHighlightColor)
                              forState:UIControlStateHighlighted];
    [userNameButton addTarget:self action:@selector(initWIthUserOperationButtonEvent:)
             forControlEvents:UIControlEventTouchUpInside];
    ////用户名key Label
    UILabel *userNameKeyLabel = [[UILabel alloc] initWithFrame:CGRectMake(20, 0, 90, 45)];
    userNameKeyLabel.text = @"用户名";
    [userNameKeyLabel setTextColor:KDefaultOrNightTextColor];
    userNameKeyLabel.backgroundColor = [UIColor clearColor];
    userNameKeyLabel.font = [UIFont systemFontOfSize:16.0f];
    [userNameButton addSubview:userNameKeyLabel];
    ////用户名value Label
    UILabel *userNameValueLabel = [[UILabel alloc] initWithFrame:CGRectMake(KProjectScreenWidth-30-160,0,160.0f, 45)];
    [userNameValueLabel setTextColor:KContentTextCanEditColor];
    [userNameValueLabel setBackgroundColor:[UIColor clearColor]];
    [userNameValueLabel setTextAlignment:NSTextAlignmentRight];
    [userNameValueLabel setText:[[CurrentUserInformation sharedCurrentUserInfo] userName]];
    [userNameValueLabel setFont:[UIFont systemFontOfSize:16.0f]];
    self.userPersonalNameLabel = userNameValueLabel;
    [userNameButton addSubview:self.userPersonalNameLabel];
    ////用户名箭头
    UIImageView *userNameArrowImageView = [[UIImageView alloc]initWithFrame:CGRectMake(KProjectScreenWidth-25, 16, 8.5f, 13.0f)];
    [userNameArrowImageView setImage:[UIImage imageNamed:@"More_CellArrow.png"]];
    [userNameArrowImageView setUserInteractionEnabled:YES];
    [userNameButton addSubview:userNameArrowImageView];
    [userBasicInfoView addSubview:userNameButton];
    
    ///分割线
    UIView *secondeSectionSeperatorView = [[UIView alloc] initWithFrame:CGRectMake(20, 115.5f, KProjectScreenWidth-20, 0.5f)];
    secondeSectionSeperatorView.backgroundColor = KDefaultOrNightSepratorColor;
    [userBasicInfoView addSubview:secondeSectionSeperatorView];
    
    //2.性别
    UIButton *sexButton = [UIButton buttonWithType:UIButtonTypeCustom];
    sexButton.tag = kUserGenderButtonTag;
    sexButton.frame = CGRectMake(0, 116, KProjectScreenWidth, 45);
    [sexButton setBackgroundImage:createImageWithColor([UIColor whiteColor])
                         forState:UIControlStateNormal];
    [sexButton setBackgroundImage:createImageWithColor(KDefaultOrNightButtonHighlightColor)
                         forState:UIControlStateHighlighted];
    [sexButton addTarget:self action:@selector(initWIthUserOperationButtonEvent:)
        forControlEvents:UIControlEventTouchUpInside];
    ////性别key Label
    UILabel *sexKeyLabel = [[UILabel alloc] initWithFrame:CGRectMake(20, 0, 90, 45)];
    sexKeyLabel.text = @"性别";
    [sexKeyLabel setTextColor:KDefaultOrNightTextColor];
    sexKeyLabel.backgroundColor = [UIColor clearColor];
    sexKeyLabel.font = [UIFont systemFontOfSize:16.0f];
    [sexButton addSubview:sexKeyLabel];
    ////性别value Label
    UILabel *sexValueLabel = [[UILabel alloc] initWithFrame:CGRectMake(KProjectScreenWidth-30-160,0,160.0f, 45)];
    [sexValueLabel setTextColor:KContentTextCanEditColor];
    [sexValueLabel setBackgroundColor:[UIColor clearColor]];
    [sexValueLabel setTextAlignment:NSTextAlignmentRight];
    [sexValueLabel setFont:[UIFont systemFontOfSize:16.0f]];
    if ([[CurrentUserInformation sharedCurrentUserInfo] userSex] == 1) {
        [sexValueLabel setText:@"男"];
    }else{
        [sexValueLabel setText:@"女"];
    }
    self.userPersonalGenderLabel = sexValueLabel;
    [sexButton addSubview:self.userPersonalGenderLabel];
    ////性别箭头
    UIImageView *sexArrowImageView = [[UIImageView alloc]initWithFrame:CGRectMake(KProjectScreenWidth-25, 16, 8.5f, 13.0f)];
    [sexArrowImageView setImage:[UIImage imageNamed:@"More_CellArrow.png"]];
    [sexArrowImageView setUserInteractionEnabled:YES];
    [sexButton addSubview:sexArrowImageView];
    [userBasicInfoView addSubview:sexButton];
    
    ///分割线
    UIView *thirdSectionSeperatorView = [[UIView alloc] initWithFrame:CGRectMake(20, 161.0f, KProjectScreenWidth-20, 0.5f)];
    thirdSectionSeperatorView.backgroundColor = KDefaultOrNightSepratorColor;
    [userBasicInfoView addSubview:thirdSectionSeperatorView];
    
    //3.手机号
    UIButton *mobileButton = [UIButton buttonWithType:UIButtonTypeCustom];
    mobileButton.tag = kUserMobileButtonTag;
    mobileButton.frame = CGRectMake(0, 161.5f, KProjectScreenWidth, 45);
    [mobileButton setBackgroundImage:createImageWithColor([UIColor whiteColor])
                            forState:UIControlStateNormal];
    [mobileButton setBackgroundImage:createImageWithColor(KDefaultOrNightButtonHighlightColor)
                            forState:UIControlStateHighlighted];
    [mobileButton addTarget:self action:@selector(initWIthUserOperationButtonEvent:)
           forControlEvents:UIControlEventTouchUpInside];
    ////手机号key Label
    UILabel *mobileKeyLabel = [[UILabel alloc] initWithFrame:CGRectMake(20, 0, 90, 45)];
    mobileKeyLabel.text = @"手机号";
    [mobileKeyLabel setTextColor:KDefaultOrNightTextColor];
    mobileKeyLabel.backgroundColor = [UIColor clearColor];
    mobileKeyLabel.font = [UIFont systemFontOfSize:16.0f];
    [mobileButton addSubview:mobileKeyLabel];
    ////手机号value Label
    UILabel *mobileValueLabel = [[UILabel alloc] initWithFrame:CGRectMake(KProjectScreenWidth-30-160,0,160.0f, 45)];
    [mobileValueLabel setTextColor:[UIColor grayColor]];
    [mobileValueLabel setBackgroundColor:[UIColor clearColor]];
    [mobileValueLabel setTextAlignment:NSTextAlignmentRight];
    [mobileValueLabel setFont:[UIFont systemFontOfSize:16.0f]];
    if (!IsNormalMobileNum([CurrentUserInformation sharedCurrentUserInfo].userMobile)) {
        [mobileValueLabel setText:@"未绑定"];
    }else{
        [mobileValueLabel setText:[CurrentUserInformation sharedCurrentUserInfo].userMobile];
        [mobileValueLabel setTextColor:KContentTextCanEditColor];
    }
    
    self.userPersonalMobileLabel = mobileValueLabel;
    [mobileButton addSubview:mobileValueLabel];
    ///手机号箭头
    UIImageView *mobileArrowImageView = [[UIImageView alloc]initWithFrame:CGRectMake(KProjectScreenWidth-25, 16, 8.5f, 13.0f)];
    [mobileArrowImageView setImage:[UIImage imageNamed:@"More_CellArrow.png"]];
    [mobileArrowImageView setUserInteractionEnabled:YES];
    [mobileButton addSubview:mobileArrowImageView];
    [userBasicInfoView addSubview:mobileButton];
    
    [mainScrollView addSubview:userBasicInfoView];
    
    
    //一、用户基本信息视图
    UIView *userSecondInfoView = [[UIView alloc] initWithFrame:CGRectMake(0, 235, KProjectScreenWidth, 90.5)];
    userSecondInfoView.layer.borderWidth = 0.5f;
    [userSecondInfoView setBackgroundColor:[UIColor whiteColor]];
    userSecondInfoView.layer.borderColor = [KDefaultOrNightSepratorColor CGColor];
    
    ///二.用户个性签名
    UIButton    *personalSignatureButton = [UIButton buttonWithType:UIButtonTypeCustom];
    personalSignatureButton.frame = CGRectMake(0, 0.0f, KProjectScreenWidth, 45);
    [personalSignatureButton setTag:kUserSignatureButtonTag];
    [personalSignatureButton setBackgroundImage:createImageWithColor([UIColor whiteColor])
                                       forState:UIControlStateNormal];
    [personalSignatureButton setBackgroundImage:createImageWithColor(KDefaultOrNightButtonHighlightColor)
                                       forState:UIControlStateHighlighted];
    [personalSignatureButton addTarget:self action:@selector(initWIthUserOperationButtonEvent:)
                      forControlEvents:UIControlEventTouchUpInside];
    //
    ////手机号key Label
    UILabel *personalSignatureKeyLabel = [[UILabel alloc] initWithFrame:CGRectMake(20, 1, 70, 43)];
    personalSignatureKeyLabel.text = @"个性签名";
    [personalSignatureKeyLabel setTextColor:KDefaultOrNightTextColor];
    personalSignatureKeyLabel.backgroundColor = [UIColor clearColor];
    personalSignatureKeyLabel.font = [UIFont systemFontOfSize:16.0f];
    [personalSignatureButton addSubview:personalSignatureKeyLabel];
    
    ///签名内容
    UILabel *signatureValueLabel = [[UILabel alloc] initWithFrame:CGRectMake(100.0f,0,KProjectScreenWidth-10-100, 45)];
    if (IsStringEmptyOrNull([CurrentUserInformation sharedCurrentUserInfo].userPersonalSignatureString)) {
        [signatureValueLabel setTextColor:[UIColor grayColor]];
        [signatureValueLabel setText:@"未填写"];
    }else{
        signatureValueLabel.text = [CurrentUserInformation sharedCurrentUserInfo].userPersonalSignatureString;
        [signatureValueLabel setTextColor:KContentTextCanEditColor];
    }
    
    [signatureValueLabel setTextAlignment:NSTextAlignmentRight];
    [signatureValueLabel setBackgroundColor:[UIColor clearColor]];
    [signatureValueLabel setTextAlignment:NSTextAlignmentRight];
    [signatureValueLabel setFont:[UIFont systemFontOfSize:16.0f]];
    self.userPersonalSignatureLabel = signatureValueLabel;
    [personalSignatureButton addSubview:self.userPersonalSignatureLabel];
    [userSecondInfoView addSubview:personalSignatureButton];
    
    ///分割线
    UIView *sectionSeperatorView = [[UIView alloc] initWithFrame:CGRectMake(20, 45, KProjectScreenWidth-20, 0.5f)];
    sectionSeperatorView.backgroundColor = KDefaultOrNightSepratorColor;
    [userSecondInfoView addSubview:sectionSeperatorView];
    
    ///语音简介按键
    UIButton    *personalVoiceButton = [UIButton buttonWithType:UIButtonTypeCustom];
    personalVoiceButton.frame = CGRectMake(0,45.5f, KProjectScreenWidth, 45);
    [personalVoiceButton setTag:kUserVoiceButtonTag];
    [personalVoiceButton setBackgroundImage:createImageWithColor([UIColor whiteColor])
                                   forState:UIControlStateNormal];
    [personalVoiceButton setBackgroundImage:createImageWithColor(KDefaultOrNightButtonHighlightColor)
                                   forState:UIControlStateHighlighted];
    [personalVoiceButton addTarget:self action:@selector(initWIthUserOperationButtonEvent:)
                  forControlEvents:UIControlEventTouchUpInside];
    ///语音介绍内容
    UILabel *voiceHeaderLable = [[UILabel alloc]initWithFrame:CGRectMake(20.0f, 10, 70.0f, 25.0f)];
    voiceHeaderLable.text = @"语音简介";
    [voiceHeaderLable setTextColor:KDefaultOrNightTextColor];
    voiceHeaderLable.backgroundColor = [UIColor clearColor];
    voiceHeaderLable.font = [UIFont systemFontOfSize:16.0f];
    [personalVoiceButton addSubview:voiceHeaderLable];
    
    ///签名内容
    UILabel *voiceValueLabel = [[UILabel alloc] initWithFrame:CGRectMake(100.0f,0,KProjectScreenWidth-35-100, 45)];
    [voiceValueLabel setTextColor:KContentTextCanEditColor];
    [voiceValueLabel setText:@"未录音"];
    [voiceValueLabel setTextColor:[UIColor grayColor]];
    [voiceValueLabel setTextAlignment:NSTextAlignmentRight];
    [voiceValueLabel setBackgroundColor:[UIColor clearColor]];
    [voiceValueLabel setTextAlignment:NSTextAlignmentRight];
    [voiceValueLabel setFont:[UIFont systemFontOfSize:16.0f]];
    self.userPersonalVoiceLabel = voiceValueLabel;
    [personalVoiceButton addSubview:self.userPersonalVoiceLabel];
    ///语音简介箭头
    UIImageView *voiceArrowImageView = [[UIImageView alloc]initWithFrame:CGRectMake(KProjectScreenWidth-25, 16, 8.5f, 13.0f)];
    [voiceArrowImageView setImage:[UIImage imageNamed:@"More_CellArrow.png"]];
    [voiceArrowImageView setUserInteractionEnabled:YES];
    [personalVoiceButton addSubview:voiceArrowImageView];
    [userSecondInfoView addSubview:personalVoiceButton];
    [mainScrollView addSubview:userSecondInfoView];
    [self.view addSubview:mainScrollView];
    
    if (!IsStringEmptyOrNull([CurrentUserInformation sharedCurrentUserInfo].userPersonalPhotoImagesURLKey)) {
        
        self.userPersonalPhotoImageStringURL = [[NSString alloc]initWithString:[CurrentUserInformation sharedCurrentUserInfo].userPersonalPhotoImagesURLKey];
        NSURL *url = [NSURL URLWithString:[NSString stringWithFormat:@"%@%@",KMediaServerImagesInforURL,self.userPersonalPhotoImageStringURL]];
        [self.cameraButtonImageView setImageWithURL:url placeholderImage:[UIImage imageNamed:@"Me_DefaultCar.png"]];
    }
}

#pragma mark -
#pragma mark - 初始化用户个人信息界面操作按键事件
- (void)initWIthUserOperationButtonEvent:(id)sender{
    
    UIButton *button = (UIButton *)sender;
    if (button.tag == KUserCameraButtonTag) {
        NSInteger   personalGradeInteger = [[CurrentUserInformation sharedCurrentUserInfo].userPersonalGradeString integerValue];
        
        
        if (personalGradeInteger < 10) {
            UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"" message:@"等级达到一个月亮以上才可上传自定义头像" delegate:self cancelButtonTitle:nil otherButtonTitles:@"确定", nil];
            [alertView setTag:KUserAddPhotoAlertViewTag];
            [alertView show];
            
            return;
        }
        
        UIActionSheet   *actionSheet = [[UIActionSheet alloc]initWithTitle:nil delegate:self
                                                         cancelButtonTitle:@"取消" destructiveButtonTitle:nil otherButtonTitles:@"拍照",@"从相册选择", nil];
        [actionSheet setTag:KUserAddPhototActionSheetTag];
        [actionSheet showInView:self.view];
        
    }
    //用户个人姓名按键
    else if (button.tag == kUserNameButtonTag) {
        UserNameOrSignatureController *viewController = [[UserNameOrSignatureController alloc]initWithUserPerosnalInfor:self.userPersonalNameLabel.text withUserDelegate:self withInitStyle:UserNameStyleType];
        [self.navigationController pushViewController:viewController animated:YES];
    }
    
    //用户个人性别按键
    else if (button.tag == kUserGenderButtonTag){
        
        NSInteger   userGenderInteger = 3;
        
        if ([self.userPersonalGenderLabel.text isEqualToString:@"男"]) {
            userGenderInteger = 1;
        }
        else if ([self.userPersonalGenderLabel.text isEqualToString:@"女"]){
            userGenderInteger = 0;
        }
        else{
            userGenderInteger = 1;
        }
        GenderViewController    *viewcontroller = [[GenderViewController alloc]initWithSexValue:userGenderInteger andDelegate:self];
        [self.navigationController pushViewController:viewcontroller animated:YES];
    }
    
    //用户个人手机号按键
    else if (button.tag == kUserMobileButtonTag){
        PhoneNumberVerificationViewController *viewController = [[PhoneNumberVerificationViewController alloc]initWithUserOperationStyle:UserSetupPhoneOperationStyle];
        [self.navigationController pushViewController:viewController animated:YES];
    }
    
    //用户个人个性签名按键
    else if (button.tag == kUserSignatureButtonTag){
        NSString *signatureContent = @"";
        if (![self.userPersonalSignatureLabel.text isEqualToString:@"未填写"]) {
            signatureContent = self.userPersonalSignatureLabel.text;
        }
        UserNameOrSignatureController *viewController = [[UserNameOrSignatureController alloc]initWithUserPerosnalInfor:signatureContent withUserDelegate:self withInitStyle:UserSignatureStyleType];
        [self.navigationController pushViewController:viewController animated:YES];
    }
    
    //用户个人语音简介信息按键
    else if (button.tag == kUserVoiceButtonTag){
        
        if ([self.userPersonalVoiceLabel.text isEqualToString:@"未录音"]) {
            UserAudioInfoViewController *viewController = [[UserAudioInfoViewController alloc]initWithUserVoiceFrameWithInitStyle:InitAudioModalStyle];
            FMNavigationController *navigationContro = [[FMNavigationController alloc]initWithRootViewController:viewController];
            [self presentModalViewController:navigationContro animated:YES];
        }else{
            UserAudioInfoViewController *viewController = [[UserAudioInfoViewController alloc]initWithUserVoiceFrameWithInitStyle:InitAudioNavigationStyle];
            [self.navigationController pushViewController:viewController animated:YES];
        }
    }
}

#pragma mark -
#pragma mark - Method For UserInfoDelegate

- (void)changedWithName:(NSString *)userName{
    
    [self.userPersonalNameLabel setText:userName];
}

- (void)changedWithSex:(NSInteger)sexValue{
    
    ///表示性别改为女
    if (sexValue == 0) {
        [self.userPersonalGenderLabel  setText:@"女"];
        self.userGenderIntStyle = 2;
    }else {
        [self.userPersonalGenderLabel  setText:@"男"];
        self.userGenderIntStyle = 1;
    }
}

- (void)changedWithUserPersonalSignatureInfor:(NSString *)signatureContent{
    
    
    if (!IsStringEmptyOrNull(self.userPersonalSignatureLabel.text)) {
        
        if (![self.userPersonalSignatureLabel.text isEqualToString:signatureContent]) {
            self.userIsEidtPersonalInfor = YES;
        }
        self.userPersonalSignatureLabel.text = signatureContent;
        [self.userPersonalSignatureLabel setTextColor:KContentTextCanEditColor];
    }else{
        [self.userPersonalSignatureLabel setText:@"未填写"];
    }
}

- (void)initWithBackButtonEvnet{
    
    
    
    NSInteger sexValue = 1;
    if ([self.userPersonalGenderLabel.text isEqualToString:@"女"]) {//女
        sexValue = 2;
    }else if ([self.userPersonalGenderLabel.text isEqualToString:@"男"]){//男
        sexValue = 1;
    }
    if (![[[CurrentUserInformation sharedCurrentUserInfo] userName] isEqualToString:self.userPersonalNameLabel.text]){
        self.userIsEidtPersonalInfor = YES;
    }else if([[CurrentUserInformation sharedCurrentUserInfo] userSex] != sexValue) {
        self.userIsEidtPersonalInfor = YES;
    }
    if (self.userIsEidtPersonalInfor) {//修改过用户信息
        UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@"提示" message:@"你的信息已修改，是否保存？" delegate:self cancelButtonTitle:@"不保存" otherButtonTitles:@"保存", nil];
        alertView.tag = kSaveUserInfoAlertViewTag;
        [alertView show];
        return;
    }
    
    [self.navigationController popViewControllerAnimated:YES];
}

- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    if (alertView.tag == kSaveUserInfoAlertViewTag) {
        if(buttonIndex == 1){//保存
            [self initWithSaveUserPersonalInformation];
        }else{
            [self.navigationController popViewControllerAnimated:YES];
        }
    }
}

-  (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex{
    if (actionSheet.tag == KUserAddPhototActionSheetTag) {
        
        ///若不是取消
        if (buttonIndex != 2) {
            //选择照片
            UIImagePickerController *imagePickerController = [[UIImagePickerController alloc] init];
            imagePickerController.modalTransitionStyle = UIModalTransitionStyleCoverVertical;
            imagePickerController.delegate = self;
            imagePickerController.allowsEditing = YES;
            [imagePickerController.view setTag:KUserCameraButtonTag];
            if(buttonIndex == 0){//拍照
                imagePickerController.sourceType = UIImagePickerControllerSourceTypeCamera;
                imagePickerController.allowsEditing = YES;
                imagePickerController.modalTransitionStyle = UIModalTransitionStyleCoverVertical;
            }else if(buttonIndex == 1){//相册
                imagePickerController.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
                imagePickerController.allowsEditing = YES;
            }
            
            [self presentModalViewController:imagePickerController animated:YES];
        }
    }
}

#pragma mark -
#pragma mark -UIImagePickerControllerDelegate
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    UIImage *imageinfo = [info objectForKey:@"UIImagePickerControllerEditedImage"];
    UIImageWriteToSavedPhotosAlbum(imageinfo, nil, nil, nil);//将照片保存到相册
    [self.cameraButtonImageView setImage:imageinfo];
    [picker dismissModalViewControllerAnimated:YES];
    self.userIsEidtPersonalInfor = YES;
    self.userIsEidtPhotoInforBool = YES;
    self.navigationItem.rightBarButtonItem.enabled = YES;//保存按钮可用
}

- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker {
    [picker dismissModalViewControllerAnimated:YES];
}


#pragma mark -
#pragma mark - 保存参数操作
- (void)initWithUSerRequestUploadParamOperation{
    
    NSString    *userAudioParam = [[NSString alloc]initWithFormat:@"%@",[[CurrentUserInformation sharedCurrentUserInfo].userPersonalAudioInforDictionary JSONString]];
    
    
    [[HTTPClient sharedHTTPClient] getWithUserPersonalInformationWithUserId:[CurrentUserInformation sharedCurrentUserInfo].userID withUserName:self.userPersonalNameLabel.text withUserGenderStyle:self.userGenderIntStyle withSignature:self.userPersonalSignatureLabel.text withUserPhototImageURL:self.userPersonalPhotoImageStringURL withAudioParam:userAudioParam completion:^(WebAPIResponse *response) {
        
        Log(@"%@",response.responseObject);
        
        
        if(response.code == WebAPIResponseCodeSuccess){
            
            dispatch_async(dispatch_get_main_queue(), ^(void){
                if (response.code == WebAPIResponseCodeSuccess) {
                    
                    ///用户名
                    [[CurrentUserInformation sharedCurrentUserInfo] setUserName:self.userPersonalNameLabel.text];
                    
                    ///用户个人性别
                    [[CurrentUserInformation sharedCurrentUserInfo] setUserSex:self.userGenderIntStyle];
                    
//                        [self.userInforDelegate changedWithName:self.userPersonalNameLabel.text];
//                        [self.userInforDelegate changedWithSex:self.userGenderIntStyle];
                        
                 [[NSNotificationCenter defaultCenter] postNotificationName:FMChangeMyInformationNotification object:nil];
                    ///用户个人个性签名
                    [[CurrentUserInformation sharedCurrentUserInfo] setUserPersonalSignatureString: self.userPersonalSignatureLabel.text];
                    
                    ///用户头像
                    if (self.userIsEidtPhotoInforBool == YES) {
                        [[CurrentUserInformation sharedCurrentUserInfo]setUserPersonalPhotoImagesURLKey:self.userPersonalPhotoImageStringURL];
                        [[CurrentUserInformation sharedCurrentUserInfo] setUserCarBrandImageUrl:self.userPersonalPhotoImageStringURL];
                        [[CurrentUserInformation sharedCurrentUserInfo] setUserAvatar:self.userPersonalPhotoImageStringURL];
                    }
                    self.userIsEidtPhotoInforBool = NO;
                    FinishMBProgressHUD(HUIKeyWindow);
                    ///添加头像修改通知
                    [[NSNotificationCenter defaultCenter] postNotificationName:FMUserAvatarModifyNotification
                                                                        object:nil];
                    [self.navigationController popViewControllerAnimated:YES];
                }
                else {
                    
                    ShowImportErrorAlertView([NSString stringWithFormat:@"%@",[response.responseObject objectForKey:@"msg"]]);
                    FailedMBProgressHUD(HUIKeyWindow, @"修改失败");
                }
            });
        }
    }];
}

#pragma mark -
#pragma mark - 初始化保存用户修改后的信息
- (void)initWithSaveUserPersonalInformation{

    WaittingMBProgressHUD(HUIKeyWindow, @"正在上传....");
    ///已编辑个人头像
    if (self.userIsEidtPhotoInforBool == YES) {
        
        [FMImageClient imageUpload:self.cameraButtonImageView.image
                        imageType:@"4"
                        completion:^(WebAPIResponse *response) {
            
            dispatch_async(dispatch_get_main_queue(), ^(void){
                if (response.code == WebAPIResponseCodeSuccess) {
                    NSDictionary    *imageParamDictionary = [[NSDictionary alloc]initWithDictionary:ObjForKeyInUnserializedJSONDic(response.responseObject, kDataKeyData)];
                    if (imageParamDictionary.count > 0) {
                        NSString    *imageURLString = [[NSString alloc]initWithFormat:@"%@",StringForKeyInUnserializedJSONDic(imageParamDictionary, @"pic_url")];
                        if (!IsStringEmptyOrNull(imageURLString)) {
                            self.userPersonalPhotoImageStringURL = [[NSString alloc]initWithFormat:@"%@",imageURLString];
                            [self initWithUSerRequestUploadParamOperation];
                        }
                    }
                }
            });
        }];
    }
    ///未编辑个人头像
    else{
        [self initWithUSerRequestUploadParamOperation];
    }
}
@end