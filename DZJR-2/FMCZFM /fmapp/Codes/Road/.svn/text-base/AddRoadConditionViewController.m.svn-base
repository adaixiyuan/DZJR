//
//  AddRoadConditionViewController.m
//  fmapp
//
//  Created by 李 喻辉 on 14-6-24.
//  Copyright (c) 2014年 yk. All rights reserved.
//

#import "AddRoadConditionViewController.h"
#import "ExpressView.h"
#import "FMSettings.h"
#import "HTTPClient+RoadCondition.h"
#import "UserPutoutDataParameterController.h"
#import "RoadConditionInfo.h"
#import "CurrentUserInformation.h"
#import "FMImageView.h"
#import "AppDelegate.h"
#include <libkern/OSAtomic.h>

#define kAddRoadConditionViewHMargin       10
#define kAddRoadConditionViewVMargin       10
#define KExpressButtonSize                 40

#define kExpressionButtonTag               1001
#define kKeyBoardButtonTag                 1002
#define kCameraButtonTag                   1003
#define kRoadConditionButtonTag            1004
#define kImageDataTag                      1011
#define KUserShareRoadButton               1033
#define KUserNotShareRoadButton             1034

#define KPublishExpressHeight              216         //表情键盘高度

#define kMaxImageCount                      4           

@interface AddRoadConditionViewController () <ExpressViewDelegate,UIImagePickerControllerDelegate,
                                                UINavigationControllerDelegate,UserParameterInforDelegate,
                                                UITableViewDataSource, UITableViewDelegate,UITextFieldDelegate>

@property (nonatomic,weak)UITextField           *textView;
@property (nonatomic,weak)UIButton              *expressButton;         //表情按钮
@property (nonatomic,weak)ExpressView           *expressionView;        //表情键盘
@property (nonatomic,weak)UIView                *photoView;             //图片区
@property (nonatomic,strong)NSMutableArray      *imageList;
@property (nonatomic,weak)UIButton              *cameraButton;          //
@property (nonatomic,weak)UILabel               *roadLabel;             //路况标签
@property (nonatomic,weak)UITableView           *tableView;
@property (strong)NSMutableArray                *tips;
@property (strong)NSMutableArray                *publishImageCache;     //图片上传缓存FMImage
@property (nonatomic, weak) AFHTTPRequestOperation    *requestDataOperation;  //请求列表数据的操作
@property (nonatomic , strong) NSString         *audioGenerateString;
@property (nonatomic , assign)  NSInteger        userCanShareRoad;

@end

@implementation AddRoadConditionViewController

//- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
//{
//    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
//    if (self) {
//        self.enableCustomNavbarBackButton = FALSE;
//    }
//    return self;
//}

- (id)init{
    self = [super init];
    if (self) {
        self.enableCustomNavbarBackButton = FALSE;
        self.audioGenerateString = [[NSString alloc]initWithFormat:@"%@",@""];
    }
    return self;
}

- (id)initWithAudioGenerateString:(NSString *)audioString{
    self = [super init];
    if (self) {
        self.enableCustomNavbarBackButton = FALSE;
        self.audioGenerateString = [[NSString alloc]initWithFormat:@"%@",audioString];
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
	// Do any additional setup after loading the view.
    self.userCanShareRoad = 1;
    [self settingNavTitle:@"路况上报"];
    self.imageList = [NSMutableArray array];
    //[self.navigationController setNavigationBarHidden:YES animated:NO];//动画隐藏导航栏
    [self setNavButton];
    [self settingContentView];
    [self addKeyboardNotification];
    //监测输入文本变化
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(textChanged:)
                                                 name:UITextFieldTextDidChangeNotification object:nil];
    [self.textView becomeFirstResponder];
    
    ///若语音的内容为空，则需要自己定位并将定位显示在文本框里面
    if ( IsStringEmptyOrNull(self.audioGenerateString)) {
        //定位通知
        [[NSNotificationCenter defaultCenter] addObserver: self
                                                 selector: @selector(locationUpdateNotification:)
                                                     name: FMLocationSuccessNotification
                                                   object: nil];
        
        //启动定位
        [ShareAppDelegate startLocationUpdate];
    }

}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)settingContentView
{
    CGRect rc = self.view.bounds;
    //文本视图
    CGRect rcText = CGRectMake(kAddRoadConditionViewHMargin,
                               kAddRoadConditionViewVMargin,
                               rc.size.width - 2 * kAddRoadConditionViewHMargin,
                               40);
    
    UIView* textbgView = [[UIView alloc]initWithFrame:rcText];
    textbgView.layer.borderWidth = 0.5;
    textbgView.layer.cornerRadius= 4.0f;
    textbgView.layer.borderColor = [[ThemeManager sharedThemeManager].skin baseTintColor].CGColor;
    
    
    UITextField* textView = [[UITextField alloc] initWithFrame:CGRectMake(8,
                                                                          8,
                                                                          rcText.size.width - KExpressButtonSize,
                                                                          rcText.size.height - 16)];
    [textView setReturnKeyType:UIReturnKeyDone];
    [textView setFont:[UIFont systemFontOfSize:18.0f]];
    [textView setText:self.audioGenerateString];

    [textView setTextColor:KDefaultOrNightTextColor];
    textView.placeholder = @"分享当前路况...";
    textView.delegate = self;
    self.textView = textView;
    [textbgView addSubview:textView];
    
    //TableView
    UITableView* tbView = [[UITableView alloc] initWithFrame:CGRectMake(0,
                                                                        CGRectGetMaxY(rcText),
                                                                        rc.size.width,
                                                                        rc.size.height)
                                                       style:UITableViewStylePlain];
    tbView.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
    tbView.backgroundColor = [UIColor whiteColor];
    tbView.dataSource = self;
    tbView.delegate = self;
    tbView.hidden = YES;
    self.tableView = tbView;
    [self.view addSubview:tbView];
    
    //表情视图
    CGRect rcExpress = CGRectMake(0, rc.size.height , rc.size.width, KPublishExpressHeight);    //默认隐藏到底部
    ExpressView* expressionView = [[ExpressView alloc] initWithFrame:rcExpress];
    expressionView.delegate = self;
    [self.view addSubview:expressionView];
    self.expressionView = expressionView;
    
    //表情按钮
    UIButton *expressionOrKeyboardButton = [UIButton buttonWithType:UIButtonTypeCustom];
    expressionOrKeyboardButton.tag = kExpressionButtonTag;
    [expressionOrKeyboardButton setImage:kExpressBoradImage forState:UIControlStateNormal];
    [expressionOrKeyboardButton addTarget:self action:@selector(buttonClicked:) forControlEvents:UIControlEventTouchUpInside];
    [expressionOrKeyboardButton setFrame:CGRectMake(rcText.size.width - KExpressButtonSize + 5,
                                                    5,
                                                    KExpressButtonSize - 10,
                                                    rcText.size.height - 10)];
    self.expressButton = expressionOrKeyboardButton;
    [textbgView addSubview:expressionOrKeyboardButton];
    [self.view addSubview:textbgView];
    
    //拍照图片
    CGRect rcPhotoView = CGRectMake(kAddRoadConditionViewHMargin,
                                    kAddRoadConditionViewVMargin + CGRectGetMaxY(rcText)+10.0f,
                                    rc.size.width - 2 * kAddRoadConditionViewHMargin,
                                    80);
    UIView* photoView = [[UIView alloc] initWithFrame:rcPhotoView];
    photoView.layer.cornerRadius= 2.0f;
    photoView.backgroundColor = [UIColor colorWithRed:243/255.0f green:243/255.0f blue:243/255.0f alpha:1];
    [self.view addSubview:photoView];
    self.photoView = photoView;
    //拍照按钮
    [self updateCameraButton:0];
    
    //路况按钮
    CGRect rcRoadButton = CGRectMake(kAddRoadConditionViewHMargin,
                                    kAddRoadConditionViewVMargin + CGRectGetMaxY(rcPhotoView)+10.0f,
                                    100,
                                    36);
    [self initRoadConditionButton:rcRoadButton];
    
   
    
    
    CGRect hiddedInInteractionSize = CGRectMake(kAddRoadConditionViewHMargin,
                                                 kAddRoadConditionViewVMargin + 25.0f + CGRectGetMaxY(rcPhotoView)+rcRoadButton.size.height,
                                                 20.0f,
                                                 16.5);
    
    UIButton *interactionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [interactionBtn setFrame:hiddedInInteractionSize];
    [interactionBtn setTag:KUserShareRoadButton];
    [interactionBtn addTarget:self action:@selector(buttonClicked:) forControlEvents:UIControlEventTouchUpInside];
    [interactionBtn setBackgroundImage:[UIImage imageNamed:@"RoadConditionForInteraction.png"] forState:UIControlStateNormal];
    [self.view addSubview:interactionBtn];
    
    //提示窗口置前
    [self.view bringSubviewToFront:tbView];
    [self.view bringSubviewToFront:expressionView];
    
}

- (void)setNavButton
{

    self.navButtonSize = KNavSize;
    //取消
    [self setLeftNavButtonFA:FMIconCancelCross
                   withFrame:kNavButtonRect
                actionTarget:self
                      action:@selector(cancelButtonClick)];
    
    [self setRightNavButtonFA:FMIconSubmitSend
                    withFrame:kNavButtonRect
                 actionTarget:self
                       action:@selector(publishRoadCondition)];
    
}

- (void)initRoadConditionButton:(CGRect)frameRect
{
    UIButton *roadButton = [UIButton buttonWithType:UIButtonTypeCustom];

    roadButton.tag = kRoadConditionButtonTag;
    [roadButton setBackgroundImage:createImageWithColor(KDefaultOrNightButtonHighlightColor)
                               forState:UIControlStateNormal];
    [roadButton setBackgroundImage:createImageWithColor(KContentTextLightGrayColor)
                               forState:UIControlStateHighlighted];
    roadButton.layer.cornerRadius = 4.0;
    roadButton.layer.masksToBounds = YES;
    
    [roadButton setFrame:frameRect];
    [roadButton addTarget:self action:@selector(buttonClicked:)
              forControlEvents:UIControlEventTouchUpInside];
    
    ////指示图片
    UIImageView *userRoadImageView = [[UIImageView alloc] initWithFrame:CGRectMake(6, 9, 15, 19)];
    userRoadImageView.image = [UIImage imageNamed:@"upload_road_state_icon.png"];
    [roadButton addSubview:userRoadImageView];
    
    ////名称
    UILabel *roadLabel = [[UILabel alloc] initWithFrame:CGRectMake(22,2, 50, 32)];
    roadLabel.font = kFontWithDefaultSize;
    roadLabel.textColor = KDefaultOrNightTextColor;
    roadLabel.textAlignment = NSTextAlignmentCenter;
    roadLabel.backgroundColor = [UIColor clearColor];
    roadLabel.text = @"拥堵";
    self.roadLabel = roadLabel;
    [roadButton addSubview:roadLabel];
    
    //箭头
    UIImageView *arrowImageView = [[UIImageView alloc] initWithFrame:CGRectMake(80, 13, 8, 10)];
    arrowImageView.image = [UIImage imageNamed:@"right_arrow_icon.png"];
    [roadButton addSubview:arrowImageView];
    
    [self.view addSubview:roadButton];
    

}

#pragma mark -导航栏Item点击时
- (void) cancelButtonClick
{
    [self dismissModalViewControllerAnimated:YES];
}

#pragma mark -按钮点击时
-(void) buttonClicked:(id)sender
{
    UIButton *button=(UIButton *)sender;
    CGRect rc = self.view.bounds;
    if(button.tag == kExpressionButtonTag)
    {
        //获取键盘视图
        UIView *keyboardView = GetKeyBoardView();
        [UIView beginAnimations:@"HiddenKeyboard" context:nil];
        [UIView setAnimationDuration:0.3f];
        //隐藏键盘
        if(keyboardView != nil)
        {
            CGRect keyboardFrame = keyboardView.frame;
            keyboardFrame.origin.y = [UIScreen mainScreen].bounds.size.height;
            keyboardView.frame = keyboardFrame;
        }
        //显示表情
        self.expressionView.frame = CGRectMake(0,rc.size.height - KPublishExpressHeight, rc.size.width, KPublishExpressHeight);
        [UIView commitAnimations];
        
        [self.expressButton setImage:kKeyBoardImage forState:UIControlStateNormal];
        
        button.tag = kKeyBoardButtonTag;
        
        
    }
    
    else if(button.tag == kKeyBoardButtonTag){
        UIView *keyboardView = GetKeyBoardView();
        [UIView beginAnimations:@"ShowKeyboard" context:nil];
        [UIView setAnimationDuration:0.3f];
        //显示键盘
        CGRect keyboardFrame = keyboardView.frame;
        keyboardFrame.origin.y = [UIScreen mainScreen].bounds.size.height - keyboardView.frame.size.height;
        keyboardView.frame = keyboardFrame;
        //隐藏表情
        self.expressionView.frame = CGRectMake(0, rc.size.height, rc.size.width, KPublishExpressHeight);
        
        [UIView commitAnimations];
        
        [self.expressButton setImage:kExpressBoradImage forState:UIControlStateNormal];
        button.tag = kExpressionButtonTag;
    }
    
    else if(button.tag == kCameraButtonTag){
        
        if(![UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]){
            return;
        }
        UIImagePickerController *imagePickerController = [[UIImagePickerController alloc] init];
        imagePickerController.modalTransitionStyle = UIModalTransitionStyleCoverVertical;
        imagePickerController.delegate = self;
        imagePickerController.sourceType = UIImagePickerControllerSourceTypeCamera;
        imagePickerController.allowsEditing = NO;
        [self presentModalViewController:imagePickerController animated:YES];
    }
    
    else if(button.tag == kRoadConditionButtonTag){
        NSMutableArray *roadArray = [NSMutableArray arrayWithObjects:@"拥堵", @"缓慢", @"畅行" , @"事故",nil];
        UserPutoutDataParameterController *viewController = [[UserPutoutDataParameterController alloc] initWithWithParameterInfor:self.roadLabel.text
                                                                                                                   withParamArray:roadArray
                                                                                                                     withDelegate:self
                                                                                                               withParamStyleTyle:ParameterOtherStyle
                                                                                                                        withTitle:@"路况类型"];
        [self.navigationController pushViewController:viewController animated:YES];
    }
    else if (button.tag == KUserShareRoadButton
             ||button.tag == KUserNotShareRoadButton){
        if (button.tag == KUserShareRoadButton) {
            self.userCanShareRoad = 0;
            [button setBackgroundImage:[UIImage imageNamed:@"RoadConditionNotInteraction.png"]
                              forState:UIControlStateNormal];
            button.tag = KUserNotShareRoadButton;
        }
        else if (button.tag == KUserNotShareRoadButton){
            self.userCanShareRoad = 1;
            [button setBackgroundImage:[UIImage imageNamed:@"RoadConditionForInteraction.png"]
                              forState:UIControlStateNormal];
            button.tag = KUserShareRoadButton;
            
        }
    }
        
}
#pragma mark -调整拍照按钮的位置
- (void)updateCameraButton:(NSInteger)posIndex
{
    CGFloat gap = 10.0;                     //定义图片间隔
    CGRect rc = self.photoView.bounds;
    CGFloat picSize = rc.size.height - 2 * gap;
    CGRect rcButton = CGRectMake((posIndex + 1)*gap + posIndex *picSize ,
                                 gap,
                                 picSize,
                                 picSize);
    
    
    if(self.cameraButton == nil){
        UIButton* cameraButton = [[UIButton alloc] initWithFrame:rcButton];
        [cameraButton setImage:[UIImage imageNamed:@"AddPhotoByCamera.png"] forState:UIControlStateNormal];
        [self.photoView addSubview:cameraButton];
        cameraButton.tag = kCameraButtonTag;
        [cameraButton addTarget:self action:@selector(buttonClicked:) forControlEvents:UIControlEventTouchUpInside];
        self.cameraButton = cameraButton;
    }else{
        [self.cameraButton setFrame:rcButton];
    }
    
}
#pragma mark -增加图片
- (void) addImage:(UIImage* )imageData
{
    CGRect rc = CGRectMake(0,0,50,50);
    UIView* imageElement = [[UIView alloc] initWithFrame:rc];
    UIImageView* imageView = [[UIImageView alloc] initWithFrame:CGRectMake(0, 8, rc.size.width - 8, rc.size.height - 8)];
    imageView.tag = kImageDataTag;
    imageView.image = imageData;
    imageView.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
    [imageElement addSubview:imageView];
    
    UIImageView* removeView = [[UIImageView alloc] initWithFrame:CGRectMake(rc.size.width -15, 0, 15, 15)];
    removeView.image = [UIImage imageNamed:@"remove.png"];
    removeView.autoresizingMask = UIViewAutoresizingFlexibleLeftMargin | UIViewAutoresizingFlexibleBottomMargin;
    
    removeView.userInteractionEnabled = YES;
    UITapGestureRecognizer *removemageViewTapGestureRecognizer =
    [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(removeImage:)];
    [removeView addGestureRecognizer:removemageViewTapGestureRecognizer];
    
    [imageElement addSubview:removeView];
    [self.photoView addSubview:imageElement];
    [self.imageList addObject:imageElement];

    [self adjustImagePositon:[self.imageList count] - 1];
}

#pragma mark -删除图片
- (void) removeImage:(UITapGestureRecognizer *) tapGestureRecognizer{
    
    UIView* imageView = [tapGestureRecognizer.view superview];
    NSInteger pos = [self.imageList indexOfObject:imageView];
    if (pos == NSNotFound) {
        return;
    }
    [self.imageList removeObject:imageView];
    [imageView removeFromSuperview];

    [self adjustImagePositon:pos];
}

#pragma mark -调整图片位置
- (void) adjustImagePositon:(NSInteger)index
{
    
    CGFloat gap = 10.0;                     //定义图片间隔
    CGRect rc = self.photoView.bounds;
    CGFloat picSize = rc.size.height - 2 * gap;
    CGFloat orgx = gap;
    CGFloat orgy = gap;
    
    [UIView beginAnimations:@"MoveImage" context:nil];
    [UIView setAnimationDuration:0.3f];
    int i = 0;
    for (UIImageView* imageView in self.imageList) {
        if (i >= index) {
            imageView.frame = CGRectMake(orgx, orgy, picSize, picSize);
        }
        i++;
        orgx += gap + picSize;
    }
    //移动拍照按钮位置
    if ([self.imageList count] >= 4) {
        [self.cameraButton setHidden:YES];
    }else{
        [self updateCameraButton:[self.imageList count]];
        [self.cameraButton setHidden:NO];
    }
    [UIView commitAnimations];
    
}
#pragma mark -获取地理提示信息
- (void) getGeoTips:(NSString* )keyWord
{
    [self.requestDataOperation cancel];
    if (self.tips == nil) {
        self.tips = [NSMutableArray array];
    }
    
    [self.tips removeAllObjects];
    
    __weak __typeof(&*self)weakSelf = self;
    self.requestDataOperation =
    [FMHTTPClient getGeoInfoTips:keyWord completion:^(WebAPIResponse *response) {
        
        dispatch_async(dispatch_get_main_queue(), ^(void){
            
            if(response.code == WebAPIResponseCodeSuccess){
                NSArray* dataList = [response.responseObject objectForKey:kDataKeyData];
                if ([dataList isKindOfClass:[NSArray class]]) {
                    [weakSelf.tips addObjectsFromArray:dataList];
                    [weakSelf.tableView setHidden:NO];
                    [weakSelf.tableView reloadData];
                }
                
            }
        });
    }];
   
}

#pragma mark -发布路况
- (void) publishRoadCondition
{
    NSString* contentText = self.textView.text;
    if (contentText.length < 1) {
        NSString *msg = @"路况内容不能为空";

        UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@"提示"
                                                            message:msg
                                                           delegate:self
                                                  cancelButtonTitle:@"确定"
                                                  otherButtonTitles:nil];
        [alertView show];
        
        return;
    }
    
    if (contentText.length >=1 && contentText.length <= 6 ) {
        
        NSString *msg = @"路况内容不能少于6个字";
        UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@"提示"
                                                            message:msg
                                                           delegate:self
                                                  cancelButtonTitle:@"确定"
                                                  otherButtonTitles:nil];
        [alertView show];
        
        return;
    }
    if (self.publishImageCache) {
        [self.publishImageCache removeAllObjects];
    }else{
        self.publishImageCache = [NSMutableArray array];
    }
    
    WaittingMBProgressHUD(HUIKeyWindow,@"正在发布...");
    __weak __typeof(&*self)weakSelf = self;
    __block volatile int32_t ncount = 0;    //请求完成个数
    //首先上传图片
    if ([self.imageList count] > 0) {
        for (UIView* imageElement in self.imageList) {
            UIImageView* imageView = (UIImageView* )[imageElement viewWithTag:kImageDataTag];
            UIImage* imageData = imageView.image;
            [FMImageClient imageUpload:imageData
                             imageType:@"3"
                            completion:^(WebAPIResponse* response){
                                
                                dispatch_async(dispatch_get_main_queue(), ^(void){
                                    if (response.code == WebAPIResponseCodeSuccess) {
                                        NSDictionary* dic = [response.responseObject objectForKey:kDataKeyData];
                                        NSString* strKey = [dic objectForKey:@"pic_url"];
                                        FMImage* im = [[FMImage alloc] init];
                                        im.url = strKey;
                                        im.imageSize = CGSizeMake([[dic objectForKey:@"pic_width"] floatValue],
                                                                  [[dic objectForKey:@"pic_height"] floatValue]);
                                        [self.publishImageCache addObject:im];
                                        //所有图片上传完毕,开始发布问题
                                        if(OSAtomicIncrement32(&ncount) >= [weakSelf.imageList count])
                                        {
                                            dispatch_async(dispatch_get_main_queue(), ^(void){
                                                [weakSelf publishRoadConditionAfterImage];
                                                
                                            });
                                        }
                                    }else{
                                        FailedMBProgressHUD(HUIKeyWindow,@"发布失败");
                                    }
                                });
                            }];
        }
    }else{
        [self publishRoadConditionAfterImage];
    }
    
    //[self upLoadImage:paramsDic];//上传图片
}
- (NSInteger)getRoadCondititonType:(NSString* )roadContent
{
    if ([roadContent isEqualToString:@"拥堵"]) {
        return 1;
    }else if ([roadContent isEqualToString:@"缓慢"]) {
        return 2;
    }else if ([roadContent isEqualToString:@"畅行"]) {
        return 3;
    }else if ([roadContent isEqualToString:@"事故"]) {
        return 4;
    }else{
        return 1;
    }
}
- (void) publishRoadConditionAfterImage
{
    NSString* contentText = self.textView.text;
    
    RoadConditionInfo *roadConditionInfo = [[RoadConditionInfo alloc] init];
    
    if([[CurrentUserInformation sharedCurrentUserInfo] userLoginState] == 0){//用户未登录 则userId为0 匿名用户
        roadConditionInfo.reportUserInfo.userID = @"0";
        roadConditionInfo.reportUserInfo.userName = @"匿名车友";
        roadConditionInfo.reportUserInfo.userSex = 1;
    }else{//用户已登录
        roadConditionInfo.reportUserInfo.userID = [CurrentUserInformation sharedCurrentUserInfo].userID;
        roadConditionInfo.reportUserInfo.userName = [[CurrentUserInformation sharedCurrentUserInfo] userName];
        roadConditionInfo.reportUserInfo.userSex = [[CurrentUserInformation sharedCurrentUserInfo] userSex];
        roadConditionInfo.reportUserInfo.userAvatar = [[CurrentUserInformation sharedCurrentUserInfo] userAvatar];
        roadConditionInfo.reportUserInfo.userCityName = [CurrentUserInformation sharedCurrentUserInfo].userCityCode;
        if (FMShareSetting.agreePublicLocation) {
             roadConditionInfo.reportUserInfo.userStreet = [[NSUserDefaults standardUserDefaults] valueForKey:@"FMUserLocationInfo"];
        }
       

    }
    roadConditionInfo.reportTime = @"刚刚";
    roadConditionInfo.roadConditionContent = contentText;
    roadConditionInfo.roadConditionCoordinate = [CurrentUserInformation sharedCurrentUserInfo].userCoordinate;
    roadConditionInfo.roadConditionType = [self getRoadCondititonType:self.roadLabel.text];
    
    if ([self.publishImageCache count] > 0) {
        roadConditionInfo.images = [NSArray arrayWithArray:self.publishImageCache];
    }
    
    //发布请求
    __weak __typeof(&*self)weakSelf = self;
    [FMHTTPClient publishRoadCondition:roadConditionInfo
                             shareType:self.userCanShareRoad
                            completion:^(WebAPIResponse* response){
                              Log(@"%@",response.responseObject);
                             dispatch_async(dispatch_get_main_queue(), ^(void){
                                 if (response.code == WebAPIResponseCodeSuccess) {
                                     
                                    
                                     SuccessMBProgressHUD(HUIKeyWindow,@"发布成功");
                                     //添加路况通知
                                     [[NSNotificationCenter defaultCenter] postNotificationName:FMAddRoadConditionNotification
                                                                                         object:roadConditionInfo];
                                     //添加互动通知
                                     if (self.userCanShareRoad) {
                                         [[NSNotificationCenter defaultCenter] postNotificationName:FMPublishNewQuestionNotification
                                                                                             object:nil];
                                     }
                                     [weakSelf dismissModalViewControllerAnimated:YES];
                                 }else{
                                     FailedMBProgressHUD(HUIKeyWindow,@"发布失败");
                                 }
                             });
                         }];
}

#pragma mark -添加键盘出现或消失时的通知
- (void) addKeyboardNotification{
    //添加键盘出现通知
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillAppear:) name:UIKeyboardWillShowNotification object:nil];
}

#pragma mark -移除键盘通知
- (void) removeKeyboardNotification
{
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillShowNotification object:nil];
}
#pragma mark -位置更新
- (void) locationUpdateNotification:(NSNotification *) notification
{
    NSString* strRoadInfo = [[NSUserDefaults standardUserDefaults] valueForKey:@"FMUserRoadInfo"];
    if (IsStringEmptyOrNull(strRoadInfo)) {
        return;
    }
    dispatch_async(dispatch_get_main_queue(), ^(void){
        [self.textView setText:strRoadInfo];
        [self.textView becomeFirstResponder];
    });
    
}

#pragma mark -键盘出现时的通知
- (void) keyboardWillAppear:(NSNotification*)notification
{
    
    CGRect rc = self.view.bounds;
    //隐藏表情
    self.expressionView.frame = CGRectMake(0, rc.size.height, rc.size.width, KPublishExpressHeight);
    
    //复原表情按钮
    self.expressButton.tag = kExpressionButtonTag;
    [self.expressButton setImage:kExpressBoradImage forState:UIControlStateNormal];
    
}
- (void) textChanged:(NSNotification *)notification
{
    [self getGeoTips:self.textView.text];
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [self.textView resignFirstResponder];
    [self.tableView setHidden:YES];
    return  YES;
}

#pragma mark -UIImagePickerControllerDelegate
-(void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    UIImage *imageinfo = [info objectForKey:@"UIImagePickerControllerOriginalImage"];
    //UIImageWriteToSavedPhotosAlbum(imageinfo, nil, nil, nil);//将照片保存到相册
    CGSize imageSize = imageinfo.size;
    if (imageSize.width < 1) {
        return;
    }
    //图片宽度限制在640，高度依比例缩放
    CGFloat imageHeight = imageSize.height * 640 /imageSize.width;
    imageSize.width = 640;
    imageSize.height = imageHeight;
    
    UIGraphicsBeginImageContext(imageSize);
    [imageinfo drawInRect: CGRectMake(0, 0, imageSize.width,imageSize.height)];
    UIImage *smallImage = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    [self addImage:smallImage];
    
    [picker dismissModalViewControllerAnimated:YES];
    
}

- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker {
    [picker dismissModalViewControllerAnimated:YES];
}

#pragma mark -ExpressView
- (void)didExpressViewSelected:(NSInteger)tag isDelete:(BOOL)bDelete
{
    if (!bDelete) {//不是删除按钮
        
        NSString *contentText = [[NSString alloc] initWithFormat:@"%@[%@]",self.textView.text?self.textView.text:@"",
                                 [[FMSettings sharedSettings].expressionNameArray objectAtIndex:tag - 1]];
        self.textView.text = contentText;
        
    }else{//是删除按钮
        NSString* strText = self.textView.text;
        if (strText.length > 0) {
            if ([[strText substringFromIndex:strText.length - 1] isEqualToString:@"]"]) {
                //正则表达式
                NSRegularExpression *textRegex = [NSRegularExpression regularExpressionWithPattern:@"\\[\\w*\\]" options:NSRegularExpressionCaseInsensitive error:nil];
                ////符合正则表达式的结果
                NSArray *textArrayOfAllMatches = [textRegex matchesInString:strText options:0 range:NSMakeRange(0, [strText length])];
                
                if (textArrayOfAllMatches.count > 0) {
                    NSTextCheckingResult *checkingResult = textArrayOfAllMatches.lastObject;
                    self.textView.text = [strText substringWithRange:NSMakeRange(0,checkingResult.range.location)];
                }
            }else{
                self.textView.text = [strText substringWithRange:NSMakeRange(0, strText.length - 1)];
            }
        }
    }
}
    #pragma mark -UserParameterInforDelegate
- (void)userSearchFinishUsedCarParameterInfor:(NSString *)_paraInfor
                       withParameterStyleType:(PutoutDataParameterStyleType) _paraStyleType
{
    self.roadLabel.text = _paraInfor;
}

#pragma mark - UITableViewDataSource

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [self.tips count];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *tipCellIdentifier = @"tipCellIdentifier";
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:tipCellIdentifier];
    
    if (cell == nil)
    {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault
                                      reuseIdentifier:tipCellIdentifier];
        cell.textLabel.font = kFontWithDefaultSize;
    }
    
    NSString *tip = self.tips[indexPath.row];
    
    cell.textLabel.text = tip;
    
    return cell;
}

#pragma mark - UITableViewDelegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    NSString *tip = self.tips[indexPath.row];
    self.textView.text = tip;
    self.tableView.hidden = YES;

}


@end
